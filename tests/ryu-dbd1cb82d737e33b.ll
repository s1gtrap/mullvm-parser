; ModuleID = 'naz9zab7ydzu9j'
source_filename = "naz9zab7ydzu9j"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx11.0.0"

%"core::option::Option<usize>" = type { i64, [1 x i64] }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, %"core::option::Option<&[core::fmt::rt::Placeholder]>" }
%"core::option::Option<&[core::fmt::rt::Placeholder]>" = type { ptr, [1 x i64] }
%"core::ops::range::Range<isize>" = type { i64, i64 }
%"core::ptr::metadata::PtrRepr<[(u64, u64)]>" = type { [2 x i64] }
%"core::option::Option<isize>" = type { i64, [1 x i64] }
%"d2s::FloatingDecimal64" = type { i64, i32, [1 x i32] }
%"f2s::FloatingDecimal32" = type { i32, i32 }

@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize" }>, align 1
@alloc_8df0580a595a87d56789d20c7318e185 = private unnamed_addr constant <{ [166 x i8] }> <{ [166 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap" }>, align 1
@alloc_fad0cd83b7d1858a846a172eb260e593 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"is_aligned_to: align is not a power-of-two" }>, align 1
@alloc_041983ee8170efdaaf95ba67fd072d26 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_fad0cd83b7d1858a846a172eb260e593, [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@0 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] zeroinitializer, [8 x i8] undef }>, align 8
@alloc_f1802761b0cba8787ff63a6853b741ad = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_33f991fa5bbac1da9d8a778b0f014caf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f1802761b0cba8787ff63a6853b741ad, [16 x i8] c"Q\00\00\00\00\00\00\00T\06\00\00\0D\00\00\00" }>, align 8
@alloc_8572d294b7d4b9d2125dc5191e02725c = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_6c433d3c07b7c6453f8a17b49b46c496 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"inf" }>, align 1
@alloc_159a91930e1f3f513911a864c7d9fa72 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-inf" }>, align 1
@alloc_6dc902770b3728786f1603e430305586 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"NaN" }>, align 1
@alloc_0fb2d8447d94ac8edf1425f42907a9ac = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"assertion failed: v < 1000000000" }>, align 1
@alloc_e56f77db715b90a54a8f213fc7072025 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"src/common.rs" }>, align 1
@alloc_2828252afb552181979a7e1a8d872610 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc_5d75a77ff6bfdf3290599e569908b354 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"assertion failed: e >= 0" }>, align 1
@alloc_1c114e613a837173c9d9fdb44047ae71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00D\00\00\00\05\00\00\00" }>, align 8
@alloc_d1817c19a9d5a1deaf2d04dd4ee57f7a = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: e <= 3528" }>, align 1
@alloc_229542ea2c11a50919abe61397c4fa3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00E\00\00\00\05\00\00\00" }>, align 8
@alloc_f1e197fa24738ef39803f80eeefbaf3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00F\00\00\00\07\00\00\00" }>, align 8
@str.0 = internal unnamed_addr constant [33 x i8] c"attempt to multiply with overflow"
@alloc_c93d5a22af4798ff4680fc5203cdaeb7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00F\00\00\00\05\00\00\00" }>, align 8
@str.1 = internal unnamed_addr constant [28 x i8] c"attempt to add with overflow"
@alloc_5bfa569a1683ee72db1df15ea85c1e41 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00S\00\00\00\05\00\00\00" }>, align 8
@alloc_0a14caa49b4fb40185d8b7924229cd53 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: e <= 1650" }>, align 1
@alloc_36b9462338ee478de85b8191d2c3ee55 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00T\00\00\00\05\00\00\00" }>, align 8
@alloc_0d223a7197fab34dd690176b4c6ef291 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00U\00\00\00\05\00\00\00" }>, align 8
@alloc_32ac48a813110bba90a819ae3b1012ab = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00\\\00\00\00\05\00\00\00" }>, align 8
@alloc_11497579c2947b5e6d2b704e058c7ca0 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: e <= 2620" }>, align 1
@alloc_33afa91b50edd2bd62fbc08bb5dda0d5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00]\00\00\00\05\00\00\00" }>, align 8
@alloc_23d0ff817836b60226e2d950ae31eb63 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e56f77db715b90a54a8f213fc7072025, [16 x i8] c"\0D\00\00\00\00\00\00\00^\00\00\00\05\00\00\00" }>, align 8
@alloc_adc66bc14f2c08e7ae63da4d2e5b7dac = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"assertion failed: v < 100000000000000000" }>, align 1
@alloc_e50f7d0a3bc729ce03cbaaaacdd8503c = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"src/d2s.rs" }>, align 1
@alloc_698078b63676f19222d4eab3ac3a3ae1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00+\00\00\00\05\00\00\00" }>, align 8
@alloc_c958ab1fb13df8a34edd67a078cbf4bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00_\00\00\00\0D\00\00\00" }>, align 8
@str.2 = internal unnamed_addr constant [33 x i8] c"attempt to subtract with overflow"
@alloc_3178019cda411e3123238262a7ce337c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00d\00\00\00\0D\00\00\00" }>, align 8
@alloc_b29d329cb0ca7b4267422096edb49ec9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00l\00\00\00\0E\00\00\00" }>, align 8
@alloc_69d42b628f32869b61341676328895f9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A8\00\00\00\1C\00\00\00" }>, align 8
@str.3 = internal unnamed_addr constant [31 x i8] c"attempt to negate with overflow"
@alloc_083ea41cf4c291a2b0dc0d2c5049452a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A8\00\00\00$\00\00\00" }>, align 8
@alloc_5187712f5b3ff8f853cabb2faf80dc12 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A8\00\00\00\11\00\00\00" }>, align 8
@alloc_34d3f598502fd2be41e5b7dacb0a03bf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A9\00\00\00\0F\00\00\00" }>, align 8
@alloc_4ca9dc0604c8e5958a3b5864524d17c7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\AA\00\00\00\11\00\00\00" }>, align 8
@alloc_e8b80d4dc6f2691ee3981e2d73558720 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\AB\00\00\00\11\00\00\00" }>, align 8
@alloc_597b4cd4db488d3a3a7d9c91f13839ce = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\AC\00\00\00\11\00\00\00" }>, align 8
@alloc_0ab891114463b208784657cfbed8735d = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"assertion failed: i < DOUBLE_POW5_SPLIT.len() as i32" }>, align 1
@alloc_a5f7ab81510302d314888c78871b6d1c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\B4\00\00\00\15\00\00\00" }>, align 8
@alloc_2be356bd80eba197b237ba2e0a9a14de = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\BD\00\00\00!\00\00\00" }>, align 8
@alloc_5241bbbd67f807560663771e465eba7e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\BE\00\00\00!\00\00\00" }>, align 8
@alloc_c151d7536f53201fd40c94ad2cfba4cb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\C8\00\00\00\11\00\00\00" }>, align 8
@alloc_565b42396f267edd48875441605954ef = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\7F\00\00\00\11\00\00\00" }>, align 8
@alloc_61b47020e5bb3288210f40eb400526dc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\81\00\00\00\11\00\00\00" }>, align 8
@alloc_a584472f0fcb58c60b05a5626a9c5c30 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\82\00\00\00\11\00\00\00" }>, align 8
@alloc_699bb199b5be370ba68ef9e366353314 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"assertion failed: q < DOUBLE_POW5_INV_SPLIT.len() as u32" }>, align 1
@alloc_22e1dabb359ff4830504c1f852e06170 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\8A\00\00\00\15\00\00\00" }>, align 8
@alloc_88e8604903a68901e9b8b4d26464725d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\93\00\00\00!\00\00\00" }>, align 8
@alloc_51c028195aa015a8c7094934665c33a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\94\00\00\00!\00\00\00" }>, align 8
@alloc_e88d65bdf4a244b951838ca7d1e4785d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A3\00\00\00.\00\00\00" }>, align 8
@alloc_443919724f8de13e45984c76b435765c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A3\00\00\00\11\00\00\00" }>, align 8
@alloc_8f988b16c54721edb39dcdb63f026a57 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\A0\00\00\00?\00\00\00" }>, align 8
@alloc_bd5f2141ee926a7925fa10c76613de0c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\11\01\00\00\0D\00\00\00" }>, align 8
@alloc_1b89cf902eb2db804f8bdbfa9198acbc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00#\01\00\00\0D\00\00\00" }>, align 8
@alloc_79d3c43d84ab47165f4dcb24c09c81bb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00&\01\00\00\09\00\00\00" }>, align 8
@alloc_9246f24e5db8bfb16b6e634aca781859 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\E9\00\00\00\0D\00\00\00" }>, align 8
@alloc_2fcb7e8e3106d1e4c44be34e069e4bd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\FA\00\00\00\11\00\00\00" }>, align 8
@alloc_79ac035ff72a1af137eee4a5871c5802 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00\02\01\00\00\09\00\00\00" }>, align 8
@alloc_0bd3cf2379e9a63ae069d8299eefa7f2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_e50f7d0a3bc729ce03cbaaaacdd8503c, [16 x i8] c"\0A\00\00\00\00\00\00\00(\01\00\00\0F\00\00\00" }>, align 8
@_ZN3ryu14d2s_full_table21DOUBLE_POW5_INV_SPLIT17h2dcda7d89d272cddE = internal constant <{ [5472 x i8] }> <{ [5472 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \9A\99\99\99\99\99\99\99\99\99\99\99\99\99\99\19\15\AEG\E1z\14\AEG\E1z\14\AEG\E1z\14\DE$\06\81\95C\8Bl\E7\FB\A9\F1\D2Mb\10\96\D4\09h\22lxz\A5,C\1C\EB\E26\1A\ABCn\86\1B\F0\F9a\84\F0h\E3\88\B5\F8\14\226X8I\F3\C7\B46\8D\ED\B5\A0\F7\C6\10j#\8D\C0\0ER\A6\87WH\AF\BC\9A\F2\D7\1A\88O\D7f\A5A\B8\9F\DF9\8C0\E2\8Ey\15\07\A6\12\1FQ\01-\E6\B2\94\D6&\E8\0B.\11\A4\09Q\CB\81h\AE\D6\B7\BA\BD\D7\D9\DF|\1B\EA:\A7\A24\ED\F1\DE_\95dy\E1\7F\FD\15\BB\C8\85\E8\F6\F0'\7F\19\11\EA-\81\99\97\11\F8\0D\D6@\BE\B4\0Ce\C2\81vIh\C2%\1C\93q\DE3\98\90p\EA\01\9B+\A1\86\9B\84\16C\C1~)\E0\A6\F3!\9B\15V\E7\9E\AF\03\12751\0F\CD\D7\85i+\BC\89\D8\97\B2\D2\1C\F9\90Z?\D7\DF7!\89\96\D4FF\F5\0E\17\FAsH\CCE\E6_\E7\A0\ABC\D2\D1]r\12]\86\0Dz<=f\A54\AC\D2\B6O\C9\83\1D\B1\9E\D7\94c\97\1EQ]#B\92\0C\A1\9C\17\C1Ky\DD\82\DF~\DA}O\9B\0E\0A\B4\E3\12h\AC[b\D1\98d*\96\E5^\17\10 9\1ES\F0\E2\81\A7\E0\B6\EEDQ\B2\12@\B3-\18\A9&O\CERM\92Xj\A7\8E\A8\99\C2W\13A\A4~\B0\B7{P'\AA\D8}\DA\F5\D0\F2\1E4Pe\C0_\C9\A6R\BB\13\CB\AE\C4@\C2\18\90\A6\EA\99L\D4\EB\0E\C9\0F<\F26\9A\CE\13\80\0A\11\C3\ADSy\B1A\19`P\BE\F6\B0\1Fg\08t\02\8B\DC-\C1gG\B3\A6\FE^Z\19R\A0)5o\B0$4\86\9F\C2\EB\FEKH\14\DB\19\EE\90\F2Y\1D\90\9E\7Fh\89e\D69\10_)\B0\B4\1D\C3\FBL\972\A7\A8\D5#\F6\19\B2\BAY]\B15\96=\AC[\1F\BAw\E9\C4\14(b\E1}'^\AB\97VIL\FB\92\87\9D\10\0D\9Dh\C9\D8\C9\AB\F2\F0\0Ez\F8\B7\A5\95\1A>\17\BA:z\A1\BC[Zr.-\93\84D\15\CBE\FB.\C8\1A\CA\AF\AE\8E\8B\8AB\9D\03\11E\09\92\B1\A6\F7\DC\B2J\E4x\AA\9D\FB8\1B\04\A1A\C1\EB\92}\F5n\83-U\B1/\C7\15\03\B4gg\89ud\C4X\9CWw'&l\11\D2\EC\A5\D8\DB\88mm\F4\C6%\F2\0B=\E0\1B\DB#\EBF\16\07\BE\8A\C38\1E(\A3\FDL\16I\B6U\D2\11l\FEn\9C`KSO1\D7\11\0E\8A\EF\B6O\13\97\B1`gE\85\18\82\8B\1C\A5\A1\BF\F8r\0F\AC'\1A\B9j7\AD\01\D6\16\1EN\99`\C2rV\B9\E1`U,$\CED\12\95\16\C2\CD\03\1EW\F55\CE\BB\13m\E3:\1D\AB\AB\01\0B\03\18\AC*+\D8/v\8AOb\17V\894o\02\E0\BC\BBU\13\F3\C4n\0C\B5\12\89\A8\ED\B1\D0\CC\C7\92\EF\1E\B8\D4Jz\EE\1D\07\BAW\8E@\0A\D3\DB\F2K\93\10o\FB\F1\17\06\C8\DFq\00\D5\A8|\F5o\0F\DAX\FC'\13\D6\0Cf\E93\BB\A7\FA\BBL\B2)\8E`\A6\1E\11\D7\84\87)\FCR\95\C9\A3\8ET\0B\1A\85\18\0E\AC\D0\D2\BA\C9\A8\AA\07\83\D8vo\AE\9D\13\E3\AC\1A\1E^\DC\DA\DD\A5\D1\C0W\B2\B0b\1FO\8AHKK\B0H~QA\9A\AC\8E\C0\1B\19\D9\A1\D3\D5\D5Ym\CB\DA\CD\E1V\A53\16\14{\81\DCw\11{W<\E2\D7\E7\AB\EA\C2\11\10*\CF`Y\82^\F2\C66&\A6\AC\AA\04\B6\19\BB\A5\80Gh\18\F5k\C5Q\EBVU\9D\91\14\96\84\00\06\EDy*#\D1\A7\22\DF\DD}t\10V\074\A3\E1\8F\DD\D1\81\0C\D11\96\FCS\1AEl\F6\E8\1As\E4\A74=\A7\F4D\FD\0F\15\9EV\F8S\E2(\1DS]\97R]j\97\D9\10bW\8D\B9\03\DBa\EB.\F2P\95\10\BF\F5\1A\E8E\A4\C7\CFHN\BCX[\DA\DD\A6e\91\15 k\83l\D9\D3qc\AD\E2\E1\17\1F\1EA\11\CD\11\9F\AD(\86\1C\9FH\04\03\F3dc\9B\1B\0B\DB\18\BESk\B0\E5\06\9D5\8F\1D\E9\15\16\A2\15G\CB\0F\89\F3\EAkJ\91r\E4 \AB\117\BCqxL\DB\B8DF\AA\1B\84m\01E\1C_c\C1\C6\D6\15\C7\03\05UI\03\BE\9A\9D\16\19\E9\CDkE\DE867w\07i\FE\AE\17\12\C1A\16F\A2c\C1VXXr\0E\97\B1\F2\1C\CEg\AB\D1\81\1C\01\DFy\13\F5q\12\8E(\17\A5\ECUA\CE\164\7Fa\DC\90\C1\0E\D8\86\12nGV5}$ e\02\C7\E7h\E4\8C\A4\1D%9x\F70\1D\80\EA\01l\B9 \1D\D7\B6\17\84\FA,\F9\F3\B0\99\BB4#aM\17\AC\F8\129\F7G(SN\\_T8h\15\F2\ACZ\1E.,\D3\B9u\0B}\7FC`SD[\8AH\18X#\DC\C7\F7\D50\99\CF\19\A96|;m\13&\D2\F9r\8C\89\B4\8E\B2\8F\0E\F1\F9+\15\1F\B8A.\8F\A3\07*r(\A6\0B\F4\C7\BC\DD\18\FA\9A\BE\A5O9\BB\C1\86\1E\D6\\\06\97\E4\13\F6\F70\09\19\C2^\9C\D70\F0\FA\D6$\D4\1F\F8_Z\07\14h\E5Iy\8D&/\DF\83v\19`\E6\E1\05\10 Qn\C7\0AR\BF\E5\CF^\14\1A\85\81\D1\0C\80\DA\F1\05o\0E\99\84\D9K\10\F5\D4h\82\14\00\C4O\D6\E4\E3\F4\A0\F5\12\1A+w\ED\01\AA\99i\D9\11\B7\1C\F7\B3\F7\DB\14\BC\C5\8A\01\88\14\EE\ADt\92\B0\C5\\\F9\AF\10,\09\DEh\A6\ED|IT\EA\80o\94(\B3\1A$\D4\E4S\B8W\CA:\10U\9A\BFv \\\15\83v\1DC`y;bs\AA\AE\FF^\80\16\11\9E\BD\C8\D1f\F5+\9D\B8\10\B12\CB3W\1B\7FdmAR\C4\BC}`\0D\F4\8E\A2\\\DF\15\CC\B6\8Ag\DBi\FD\CA\E6=\C3\D8N}\7F\11\DF\8Awr\C5\0F/\AB\D7/\05\8E\E4.\FF\1B\80\D5\92[\04s\F2\88\AC\8Cj>\1D\BFe\16fDBI\D0(\F5\D3V=U\98J\FF\EA\11\A3\A0\03BMA\88\B9W\95\BB\F3\102\AB\1C\E9\E6\02h\D7\CD9ayw\FC\C2@[\EF\16TR\02 yqa\E7-\F9\C9h\CD\15Y\12\86P\9D\99\8E\B5h\A5|[vt\15V[\1D\D2\A6J\E1>\91 Q\FD\15\C5\F6\DDD|\17\0E\1F\A2\1A\FF@M\A7\CAD7\92\B1\D0\C9\12J\CBi\F7d\CE\AE\0B\11nXPO\B4\0F\1E;<\EE\C5P\D8\8B<\A7\F1ys?\90\0C\18\C9\C9\F17\DAy\09\CA\85\F4\C7\C22@=\13\DBB\E9\BF\F6\C2\A8\A9o\BA\0C\9E\B7f\C8\1E\E3\9B\BA\CC+\CFS!&\95p~,R\A0\18\82I\95p\89r\A9\1A\B8\DD&e\F0t\B3\13\9Du\88\1A\0F\84u\F7\8C/>\08\E7\87\85\1F\17^\A0{r6\91_\0A&\98\06\EC\9F7\19\DF\E4\19\96[\F8@\19\D5\84F\05\F0\7F,\14L\EAG\AB\AF\C6\00\E1\107\05\D1\8C\99#\10G\DD?EL\A4g\CE\E7$\D5\B4G\8F\D2\19\06\B1\CC\9D\D6\E9R\D8\1F\B7\DD\C3\9Fr\A8\148'\0AKE\EE\DBy\19,~i\19\C2\86\10Y\D8\A9\11\A2\E3_)\8FF0\0F\8F6q\1Az\13\BB\A7\81\1C\B3\BA\A5k\F3\D8\D8^'\15/\A9\95\EC\9A\E3(bQ\89\8F\AD\E0K\EC\10\17u\EF\E0\F78\0E\9D\E8\0EL\AF\9A\AC\13\1By*Y\1A\93-\D8\B0Sr\D6%\E2V\A9\15.UGH\0F\BEy\8D\DC\C1\DE\B7\81ET\11|\BB\0B\DA~\96\8F\15\94\9C\97\8C\CF\08\BA\1B\97/\D6\14\FF\11\A6wv\B0\DF\D6rm.\16y\8C\DEC\FF\A7Q\F9\91\F3\B2x\F5\BD\BE\11\8E\AD\FD\D2\FE?\1C\C2\1C\EC\B7Z\22cd\1C\D8\8AdB23\B0\01\17\F0_\15\B5\B5\B6\16F\A2\83\9B\8E\C2Y\01\ACY\E6\DD\90\C4+\12\A3\039_\17\04\F6\CE\AC\C2\A3\FC\1A\D4\12\1D\83\9C-L\ACi^r\BD\9B\1C\CAHCB\17\9C\E3\8A\D6\89T\18\F5\FD\E2\16\08\07i\9B\12\C6\05\AB\BD\0FT\8D\EE/k\F1\0C\D8t\C5\1D\05k\22\FErv\D7\BE\8C\22\C1pF*\D1\17\04\BCN\CB(\C5\12\FF\D6Ng\8Dk\BB\0D\13\A0\F9}xt;Q\CB$~\D8{\12_|\1EMa\FE\F9)\C9\0D\09\B71\AD\FCA\7Fc\18\0A\81\CB\94!\D4\D7\A0\C5'$\CA4\CC\82\13w\CExT\CF\B9\BFgo\0CmC!\AD7\1F\F9q-\DD\A5\94\CC\1FYp\8A\CFMW\F9\18\C7\F4\BD}Q\DD\D6\7Fz\F3\A1?>\AC\FA\13\0B\EE/\C9\E8.\BE\FF\C3\B8\9C2\FDy\F7\1F\D6$\F3\A0 \BF1f6\FA\16\C2\FD\C7\92\19x\1D\\\1A\1A\CC'\B8^\FB\AB\01\CBlu\14`\E4|{\AE\09S\93\18\C9\BCg\A2\F0]\10\99\A0\94\C5\B0B\EB\1E\F4t\94?j\E7/\1A\E1\E6v\04'\02\89\E5\\*\DD2\88\1F\F3\14\E7\EB+\9D\85\CE\A0\B7\B0\EE\B0(\A0\7F\C2\10\D8\DF\DFaoJ\01Y\B4JNt3\CC\D0\1A\ADL\E6\E7%\D5\CD\E0)\A2>\90\8F\D6s\15\F1\D6Q\86QwqM\EE\B4\CB\D9rx)\11\E8W\E9\D6\E8\BE\E8{\B0T\AC\8F\84\8Du\1B \13!\DFS2\BA\FCY\DD\89\0Cj\A4\F7\15\80B\E7\18C(\C8c\AEJnp\EE\E9\92\11fj\D8'8\0D\0D\06\17\11J\1A\17C\1E\1C\EB!\AD\EC,\A4=k\12tn{\12\9C~\16VNW\BD\F0\1C\FE\88\DB\\X\FCA\E3\FE\11#J%b\B4\94\96A_a\8D`6\05\CB\1C\E9\D4\1D\E8)\AA\ABg\7F\E7=M\F8\D0\08\17\87\DD\17 \BB!V\B92\B9d\D7\F9sm\12\A5\95\8Cf+i#\C2\EA\C1:\F2\C2\EC{\1D\1D\DE\D6\1E\89\BA\82\CE\BB4b[\02W\96\17\18\18\DFK\07b5\A5\FC\F6\B4\E2\01\AC\DE\12Y\F3dy\D8\9C\88;\94\F1\8776\131\1E\E1\F5\83\C7FJm\FC\DCZ\06\C6\91B'\18\1A+\03\06\9FnW0\17\AF\9E\D1\A7\9BR\13\90\DE\D1<\CB}%\1A%\181\1C\A6\92\EA\1E@\E5\A70<\FE\1DH\B7yZ\E3\84\A8\BB\18\00Q\86\C0\C91K\D3\C5\C7\AE\82\9DS\C9\13\CD\B4\A3\CDB\E9\11R\09\A6\17\D1\C8\85\A8\1F\A4\90\1C>\02!\DBt\07\B8\DF@:\9ES\19P\0DJ\CB\01\B4\15\F7\05`\19g\FB\E4B\14\A7\0A\08\09\9B)\DE\F87\B3zR\FC\835\10\D7\DD\0C\A8\91B0\8EY\B8*\B7\939\EF\19\13K\0A \0E\02\8D>\E1\F9\EE\F8Ba\BF\14\0F<\08\80>\9B=e\E7\C7X\FA\9B\1A\99\10\E4,\0D\00d\F8\C8n\A5\0C\8E\90\F9\90\8E\1A\EA#\A4\99\E9\F9\D3\8B\B7\A3q@a\DA>\15\BB\1CP\E1\BA\94\A9<\F9\82\F4\99\1A\15\FF\10+a\B3\9B\C4\BAu\C7\8E\D1 \C3]\BB1\1B\89\1A)\16j\95\C4\D2\0B\0E\E7h\B1b\C1\15\A1{\BA\11\88w\D0\DBo>\1F\87'\82g\11\9B\92]\1C@\BF\80,\E6c\98>?\D0\D8\1BIu\E4I3\CC3\BDQ\B6Fe\FF\0CG\16\D4]Pn\8F\D6\8F\CA\A7^\05Q\CCp\D2\11S\C9\B3\E3KW\19D\D9\FDnN\AD\E7\83\1C\A9:\F6\82\09yG\03\E1\97%\A5\8A\EC\CF\16\BA\FB\C4h\D4`l\CF\80y\84\EAn\F0?\12*\F9\07\0E\874z\E5\9A\F5\D3\10K\1A3\1D\22\949\0Bl\90.Q\E2*C\DA\08\15\\\17\B5\A9\C7\D5\BC\A6\8B\DA\81U\CF\E1\D3\10\B0\12\87\0F\D9\22.q\DF\90\9CU\E5\02S\81\E6\1Dl\0C\14O\8BZL\DA\16\DE\1D\CF\A8\9A\EB\17\8A\A3\A9\A5\A2{\A3\AEx~\B1\A5 \E2\22\13\A9\05\A9\A2j_\D2}'\97\B5\A2\9A6\9E\1ET\D1 \82\88\7F\DB\97\1F\AC\F7N\15\92~\18w\A7\80\CE\06f|yL#\C6\D8\DDt\98\13\F1\0B\01\E4\0Ap-\8F\ADk\A3'\96TZ\1FZ\D6\00P\A2Y$\0C\BE\EF\B5\1Fx\10\15\19\15E\9A\D9\81\14\1Dp\FE\F2\F7\B2\F9\D9\10\14wj{\14\9BC\17\C0\FE[\C6(.{\0D\10\F2C\92\ED\C4\05\F2\CC\CA,\0A\0E}+\AF\19\C2\9C\0E\BE\D07[\0Ao\BD\A1q\CA\22\8C\14\CE\E3>\CBs\F9H\08\8C\97\B4'\D5\1Bp\10\B0\9Fdx\EC[\0E\DA\AC%T\0CU\F9L\1A\C0\7FP`\F0\AF>{\BD\B7\A9\D6\10a\0A\153f@\80\F3\BF\CB\95\97,\EE\DEs\1A\D5\10Rp\CDfRf\AC\EFXG\B0d\B9\90\EE\1A\DBY\A4\B8\0E\85#&Gl\F3\B6\FA\A6\8B\15I\AE\B6\93\D8\D0\82\1El#)_\95\85<\11u\B0\8A\1F\F4\1A\9E\FD\AC8\A8\FE\EE\08\94\1B\F7Y\D5\B2)\AF\B1\97\BD\93\86\98%\07\10\16,{w\F5\BA%\8E\AC\97\DC\9E\13\1El\A6\11\13\C5X\22+\09}z\BF-\FE\B8\C9y=\1Cvj\ADN\EF\A0\FDa\CCW\CB`\A1\94\97\16\C5\EE\BD\0BY\1A\FE\E7\09\13\09\E7M\DD\12\12:\B1\FCE[]c\A6\DC\84\0E\D8\AF\FB\EA\1C\C8\8D0k\AFJ\1C\85\B0\D0>\13\F3b\22\17\D4\D7&\BC\F2n\E3\D0&\DA\CBu\C2\E8\81\12\86\8C\A4\C6\EA\17\9F\B4\D7)F\89\9D\A7\9C\1DkpP\05\EF\DF\18*F\EE\04\A1\17\86\B0\17\89\F3\D9\9D%\B3\E0Tk\8B\9DMy\9E\F3\12tR\F6bo\EB\CD\87xE/|(\97R\1E]\A8^\82\BF\22\0B\D3\C6j\BF\C9\86\12B\18\E4\B9Kh\CC\1B<\0F\9F\88\FF:\D2\0Eh\13m)y@z,`\18\98\DA\98\91\83\E4\0C\1F$!\943\C8V\B3F\13\E2\13\0E6\1D\D7\18\B6MC)\A0x\8F8\DC\B4\DC\A4\91J\DF\13\8A\AFk\A8f'\7FZ`!a\A1\82\AA\CB\1F\A2\BF\EF\B9\EB\852\15M\B4M\B4\9B\BBo\19N\99\8Ca\89\D1\8E\AA=\90\A4\F6\E2bY\14\0C\E1\D6\1A\A1\A7\D8\EE\CA\D9\B6+O\82G\10E\9B$^\9Br'~\11\F6\8A\DF\B1\03\0C\1A\04I\1D\18I\F5\85\FE\0D\F8;\19[i\D6\14\D0\A0J\13\D4]\9E\CB\A4\F9/\14|\87\AB\10M\01\11RS\C9c\DF:\\\E6\B9\F9\0B\AC\1Aqg\DAt\0F\A1\1C\19/\B0\1E\FB\FAoV\15\C1RH*\D9\80\B0\AD%\C0K//\F3\11\114Q\0D\AA\8E4\E7\15\09\CD\12\B2~\EBO\1B\C4\0Dq\EE>]\1F\ABm\0A\0F(2\89\D9\15\9D\A4\8D\8Be\17\19\BCW\08\0C (\D4z\11\94:|\12<\F2\F4,Y\0D\E0\CC\D9\B9\F7\1BC\95\96\DB\FC\F4\C3\F0\E0=\B3p\E1\C7_\16\03\11\12\16\97]6Z\1A\CB\F5&\819\E6\11\04\E8\1C\F0$\FCV\90\90\DE\22\0B5\8F\A3\1C\D0\EC\E3\8C\1D0\DF\D9\A6K\82\A2]?\E9\16\DA#\83=\B1Y\7F\E1\EB\A2\CEN\B12T\12\\98/\B5\C2\CBhy\D1}\E4N\84S\1D\E3-`\BF]5\D6S\94\A7dPr\03v\17\1C\8B\E6e\B1*x\A9v\EC\B6\A6\8E\CF\C4\12\FAD\D7o\B5\AA&\0F\F1\13\8B\D7}\B2\07\1Ebj\DF\BF*\22R?'Co\ACd(\06\18N\88\7F\99\88N\DBe\1F\9C\F2\89P 8\13J\0D\CC(tJ\C5oe\93\EA\0F\B43\C0\1E;\A4\09\87\F6\A1jY\84\0F\22s\F6\C2\99\18\96\B6\07l\F8\E7\EE\AD6\D9\B4\F5\915\AE\13VW\0C\E0\F3?~I$\F5\BA\22\83\22}\1FE\AC\D6L\F6\FFd\D4\E9\90\95\E8h\E80\19\D1\89x=\F8\FF\83C\EEsD\EDS '\14t\A1\93\97\C6\CC\9C\CF\F1\8F\03\F1\0FM\1F\10R\02\B9%\A4Ga\7F\1C\B3\05\E8\7F\AE\CB\19\0F5\C7\B7\E9\D2M\CC\16\\\D1\EC\FF\F1\A2\14\D9\90\D2_!\0F\0B=\12\B0\DA#3[\82\10\C1\E7P\99hK\ABaP\B3*\06\85+j\1Ag\B9@\14\BA\A2\22N@\\Ukj\BC!\15S\94\00\DD\94\E8N\0B\CDID\BC\EE\C9\E7\10Q\ED\00\C8\87\DA\17\12H\A9\D3\C6Jv\0C\1B\DA\BD\00\A0lHF\DBl\87\DCk\D5\91\A3\15\AFd\CDL\BD\06\05I\8A\9F\E3\EF\DD\A7O\11\B1:\E2z\C8\0A\08\A8C\FF8\E6/\A6\B2\1B\F4.\E8\FB9\A29Si\FF\93\1E\F3\84(\16]\F2\EC/\FB\B4\C7u\87\FF\0F\B2\F5\03\BA\11.\EAG\E6\91!\D9\22?\FF\7F\B6\22\D3\\\1C\F2T\06\85A\81z\B5e\FF\FF\91\E8\A8\B0\16\F5C87\01\01b\C4\B723\DB\86\ED&\12\EE\9F\F3\F1\01h6:Y\84\EB\91\A4\15\0B\1D\8B\19\F6'\9B\B9^\FB\E0i\BCtP\11<\17\D6z^\86\E2\FA~/\E7\87c]@t\96\12V\91\FD\D6\D0\F7\97\E5q\D98b\CD\86\BD\1D\AB\DA\CAx\0D\93y\84\C1z-\E8=\D2\CA\17V\15o-qBa\D0\9A\C8\8A\861\A8\08\13\22\22\18\AFNjhM\91\DA\AA=O@t\1E\E8\B4y\F2>\88S\A4\DA\AE\88d?\00]\18\87]a(\FFl\DC\E9\AEXmP\CC\99}\13\A4\95h\0De\AE`\A9\E4\8DH\1Az\\/\1F\83D\ED=\B7\BE\B3\BA\83q\A0\AEa\B0\F2\186\9D\8A1,2\F6.6\C1\E6\BE\E7Y\F5\13\F0aw\82\13\1D\BD\E4\89\9B\D7\97?\F6\EE\1FZN,5\A9}\CA\83\A1\AF\DF\DF2\F8\8B\19\15\A5V\F7 \FE\A1\9C\E7\F2\B2L\C2\F9o\14\AA\1D\12\F9\B31\1BJ\B9(\8Fp\9B\94Y\10\DD\95\B6\C1\EC\B5^C\F5\0D\E5\80\C5\ED(\1AJ\DE^\01W^\E55\C4\A4\1Dg\04\8B\ED\14\D5\B1\18\01\AC~\B7\C4i\1D~R\D0\08\BE\10\22\B6Z\9By\97%\A1\0F/0\B7\B3\A7\C9\1A\81^\15Ia\AC\B7M\D9X\F3\F8\C2\1Fn\15\9BKD\07\81#\C6\D7\AD\E0\F5\935\E6$\11+\AC\D3>\9B\05=YI4V\86\22=n\1B\BC\89\DC\CB\15\9E\FD\E0m\C3\11\05\82\CA\F1\15c\A1\E3o\11\18\FE\B3$iA7\9B;\8E\11\D1\9B\D2\7F\B5Yc\86\07u5%\C5\C5\16\1C\0E\E3\0E3\91\14\E9\D1\D2\90\F7P7\9Ex\16\0B\1C?\8F\DAv\BAtu\0D\C6@,\18\FA\11x\C61\E5\90$\F7\ED\BBH\A3g\E0Y\C3\1C-\05[\B7@\1D,\8B\C9\D3\B5\1FM\AE\02\17$\04|_\CD}Vo\D4\0F+\E6p\8Bh\12\06m\C6\98H\C9\F0~\ED\B2\11=N\12t\1D\9F\BD\9E\E0\06\A1\C0\98W\C2\A7\FD\A4\0E\90\17\E6\CAKM\D2\80\00Gy\9B\EC\CAP\A5\D9\12\A2DyH\1D\CE\00\D8\8E\C5\ADD\81\08)\1E\82\D0-m\17\D83\13?\D1W\9D\9A\D3 \18\CE\A6$$yF\F6\A8e\A7\ACJ\15vM\13}\A4:\A0\8E=\BDto\A5zw\88V\E2\1EdP\95\E6>1d]\8C\B7\FB\C5\06\12\B5\18\B7\A6\AA\EB\CB\8D\B6Jp,\96\D1k\0E\C4\13W\A4\AA\12\13\16$\11\1AG\F0\E8\12\17\A0\1F\DF\E9\EE\0E\DCD\83\DA\14l\F3SB\DFL\19\80!\BF\D8|\9D\02\E2C#)Ch\7F=\143\812z\FD}hN6\1CT\CF\B921\10\B8\CEP\90\95\C9@J\BD\C6\B9K)Q\E8\19\C6\0B\A7\A6w\D43\081\D2\C7o\87\DA\B9\14k\09\EC\1E\C6v)\A0\8D\0E\D3\BF\D2\AE\94\10\DF\DB\ACd\A3WB\00I\17\B8\FF\1D~\87\1A\19\E3#\EA\B5\DF\01\CD\A0\12`\99\B119\15\AE\B5\1C\88\91L\CEpMu\E6\AD'\8E\FA\10\E2U\94\A6\B5\AD\E3\1A\AF\BBpI\0C}*\1B\E8wC\85\C4W\E9{\F2b\8D\07=\97\BB\15\87\F95\04jy\87\C9\8E\B5\0A\06d\DFb\11q\C2\BC\06\10\8F\A5u\E4\88w\D6le\D1\1B'5\CAk\A6\A5\B7\F7\E9\D3\92\AB\F0\1DA\16\1F\C4\A1\BC\1E\1E\C6_\EE\0F\0FV\8D\B1\CD\11e\D3\02adc\A3\FF\16\B3\B1\89HO|\1CQ\DC\9BMP\1C\E92\DF(\8E\D4\06\D9\C9\16\0E}Iqs\E3 \8F\B2 \D8v\05\14;\12|.\0F\82\85\05\9B~\EA\CDY\F1;S+\1D\CA\BE\A5\01\9E7\AF\CB\EE\D7G\F4/\DCU\17\A1\98\844K\F9X\09\BF\ACl\C3\8C\16\AB\12" }>, align 8, !dbg !0
@_ZN3ryu14d2s_full_table17DOUBLE_POW5_SPLIT17hec9cc8677c8b52d4E = internal constant <{ [5216 x i8] }> <{ [5216 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\1F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\88\13\00\00\00\00\00\00\00\00\00\00\00\00\00\00j\18\00\00\00\00\00\00\00\00\00\00\00\00\00\80\84\1E\00\00\00\00\00\00\00\00\00\00\00\00\00\D0\12\13\00\00\00\00\00\00\00\00\00\00\00\00\00\84\D7\17\00\00\00\00\00\00\00\00\00\00\00\00\00e\CD\1D\00\00\00\00\00\00\00\00\00\00\00\00 _\A0\12\00\00\00\00\00\00\00\00\00\00\00\00\E8vH\17\00\00\00\00\00\00\00\00\00\00\00\00\A2\94\1A\1D\00\00\00\00\00\00\00\00\00\00\00@\E5\9C0\12\00\00\00\00\00\00\00\00\00\00\00\90\1E\C4\BC\16\00\00\00\00\00\00\00\00\00\00\004&\F5k\1C\00\00\00\00\00\00\00\00\00\00\80\E07y\C3\11\00\00\00\00\00\00\00\00\00\00\A0\D8\85W4\16\00\00\00\00\00\00\00\00\00\00\C8Ngm\C1\1B\00\00\00\00\00\00\00\00\00\00=\91`\E4X\11\00\00\00\00\00\00\00\00\00@\8C\B5x\1D\AF\15\00\00\00\00\00\00\00\00\00P\EF\E2\D6\E4\1A\1B\00\00\00\00\00\00\00\00\00\92\D5M\06\CF\F0\10\00\00\00\00\00\00\00\00\80\F6J\E1\C7\02-\15\00\00\00\00\00\00\00\00 \B4\9D\D9yCx\1A\00\00\00\00\00\00\00\00\94\90\02(,*\8B\10\00\00\00\00\00\00\00\00\B94\032\B7\F4\AD\14\00\00\00\00\00\00\00@\E7\01\84\FE\E4q\D9\19\00\00\00\00\00\00\00\880\81\12\1F/\E7'\10\00\00\00\00\00\00\00\AA|!\D7\E6\FA\E01\14\00\00\00\00\00\00\80\D4\DB\E9\8C\A09Y>\19\00\00\00\00\00\00\A0\C9R$\B0\08\88\EF\8D\1F\00\00\00\00\00\00\04\BE\B3\16n\05\B5\B5\B8\13\00\00\00\00\00\00\85\AD`\9C\C9F\22\E3\A6\18\00\00\00\00\00@\E6\D8x\03|\D8\EA\9B\D0\1E\00\00\00\00\00\E8\8F\87+\82M\C7raB\13\00\00\00\00\00\E2si\B6\E2 y\CF\F9\12\18\00\00\00\00\80\DA\D0\03d\1BiWC\B8\17\1E\00\00\00\00\90\88b\82\1E\B1\A1\16*\D3\CE\12\00\00\00\00\B4*\FB\22f\1DJ\9C\F4\87\82\17\00\00\00\00a\F5\B9\AB\BF\A4\\\C3\F1)c\1D\00\00\00\A0\\9T\CB\F7\E6\19\1A7\FA]\12\00\00\00\C8\B3G)\BE\B5`\A0\E0\C4x\F5\16\00\00\00\BA\A0\99\B3-\E3x\C8\18\F6\D6\B2\1C\00\00@t\04@\90\FC\8DK}\CFY\C6\EF\11\00\00P\91\05P\B4{q\9E\\C\F0\B7k\16\00\00\A4\F5\06d\A1\DA\0D\C63T\EC\A5\06\1C\00\80\86Y\84\DE\A4\A8\C8[\A0\B4\B3'\84\11\00 \E8o%\16\CE\D2\BAr\C8\A1\A01\E5\15\00(\E2\CB\AE\9B\81\87i\8F:\CA\08~^\1B\00Ym?M\01\B1\F4\A1\99d~\C5\0E\1B\11@\AFH\8F\A0A\DDq\0A\C0\FD\DDv\D2a\15\10\DB\1A\B3\08\92T\0E\0D0}\95\14G\BA\1A\EA\C8\F0oE\DB\F4(\08>n\DDll\B4\10$\FB\EC\CB\16\1223\8A\CD\C9\14\88\87\E1\14\ED9\E8~\9C\96\FE\BF\EC@\FC\19j\E9\19\1A4$Q\CF!\1E\FF\F7\93\A8=P\E21P\10Am%C\AA\E5\FE\F5\B8\12M\E4Z>d\14\92\C8\EE\D3\14\9F~3gW`\9D\F1M}\19\B6z\EA\08\DAF^\00Am\B8\04n\A1\DC\1F\B2\8C\92EH\EC:\A0HD\F3\C2\E4\E4\E9\13\DE/\F7VZ\A7I\C8Z\15\B0\F3\1D^\E4\18\D6\FB\B4\EC0\11\\z\B1\1A\9Cp\A5u\1D\1Fe\1D\F1\93\BE\8Ay\EC\AE\90af\87ir\13\BFd\ED8n\ED\97\A7\DA\F4\F9?\E9\03O\18\EF\BD(\C7\C9\E8}Q\11r\F8\8F\E3\C4b\1E\B5vy\1C~\B1\EE\D2JG\FB9\0E\BB\FD\12b\D4\97\A3\DD]\AA\87\1D\19z\C8\D1)\BD\17{\C9}\0CU\F5\94\E9d\9F\98:Ft\AC\1D\ED\9D\CE'U\19\FD\11\9Fc\9F\E4\AB\C8\8B\12hE\C2q\AA_|\D6\86<\C7\DD\D6\BA.\17\C2\D62\0E\95w\1B\8C\A8\0B9\95\8Ci\FA\1C9\C6\DF(\BD*\91WI\A7C\DD\F7\81\1C\12\C8\B7\17sluu\AD\1B\91\94\D4u\A2\A3\16\BA\A5\DD\8F\C7\D2\D2\98b\B5\B9I\13\8BL\1C\94\87\EA\B9\BC\C3\83\9F]\11\14\0E\EC\D6\AF\11y)e\E8\AB\B4d\07\B5\15\99\11\A7\CC\1B\16\D7s~\E2\D6\E1=I\22[\FF\D5\D0\BF\A2\1Bf\08\8FM&\AD\C6m\F5\98\BF\85\E2\B7E\11\80\CA\F2\E0oX8\C92\7F/'\DB%\97\15 }/\D9\8Bn\86{\FF^\FB\F0Q\EF\FC\1A4\AE\BDg\17\054\AD_\1B\9D6\93\15\DE\10\C1\19\ADA]\06\81\987bD\04\F8\9A\15\152`\18\92\F4G\A1~\C5zU\05\B6\01[\1A\1F<O\DB\F8\CC$o\BBlU\C3\11\E1x\10'\0B#\127\00\EEJ\EA\C7*4V\19\97\14\F0\CD\AB\D6D\80\A9\DD\E4y5\C1\AB\DF\BC\19\B6`+\06+\F0\89\0A/l\C1X\CB\0B\16\10\E48\B6\C75l,\CD:\C7\F1.\BE\8E\1B\14\1D\C7\A39C\87w\80\099\AE\BAmr\22\19\E4\B8\0C\08\14i\95\E0K\C7Y)\09\0Fk\1F\8E\F3\07\85\ACa]l\8F\1C\D8\B9e\E9\A2\13r\F0I\A6\17\BAtG\B3#N(\BF\A3\8B\18\8Fl\DC\8F\9D\E8Q\19\A0\ACa\F2\AE\8C\AE\1E\D9\C3\E9yb1\D3\0F\E4\0B}W\ED\17-\13\CF4d\18\BB\FD\C7\13\DDN\\\AD\E8]\F8\17\03B}\DE)\FD\B9X\94b\B3\D8bu\F6\1DBI\0E+:>t\B7\9C\1Dp\C7]\09\BA\12\92\DB\D1\B5\C8MQ\E5\03%L9\B5\8Bh\17wRF\E3:\A1\A5\DED.\9F\87\A2\AEB\1D\8A\F3\0B\CE\C4\84'\0B\EB|\C3\94%\ADI\12m\F0\8E\01\F6e\F1\CD%\\\F4\F9n\18\DC\16\88\AC\F2\81s\BFmA/sq\B8\8A\1E\93\1C\D5\AB71\A8\97\E4\88\FD\E7F\B3\16\F3\DB\11\CA\96\85=\92\BD\1D\EB\FC\A1\18`\DC\EFR\16}\FC\E6\CC\F6,\E5%|\CA\1Ex\D3\AB\E7\1B\CE]\10@\1A<\AF\97\8D>\13+d\CBp\11Bu\14\D0 \0B\9B\FD0\0E\D85=\FE\CC\15\92\92\19\04\E9\CD\01=\BD\11N\83\CC=@\1B\9B\FB\8F\A2\B1 !F\16\CB\10\D2\9F&\08\11\82\FA3\0B\DEh\A9\D7\DB\FD\94\C6G0J\15#\F9\00\8E\15\C3\93\CDR=:\B8Y\BC\9C\1A\B6\9B\C0x\EDY|\C0Sf$\13\B8\F5\A1\10\A3\C2\F0\D6hp\9B\B0\E8\7F\ED\17&s\CA\14L\F3\AC\0C\83L\C2\DC\E2\DF\E8\9D\EF\0F\FD\19\0F\18\EC\E7\D1o\F9\C9\ED\8B\B1\C2\F5)>\10\13\1E\E7a\C6\CBw<\E9\EE]3s\B4M\14\98\E5`\FA\B7\BE\95\8B\A3j5\00\90!a\19\FE\1E\F9\F8e.{nL\C5B\00\F4i\B9\1F_\B3\9B\BB\FF\FC\0C\C5O\BB)\808\E2\D3\137\A0\82\AA?<P\B6#*4\A0\C6\DA\C8\18DH#\95OK\E4\A3\AC4AHx\11\FB\1E+\0D6\BD\11\AFn\E6\EB\C0(-\EB\EA\\\13u\90\83,\D6Z\0A\E0&\F1r\F8\A5%4\18\93t\A4\B7\8B\F1\0C\98p\AD\8Fv\0F/A\1E\DC\C8\C6R\F7\16\08_f\CC\19\AAi\BD\E8\12\13{x'\B5\1C\CA\F6\7F?\A0\14\C4\EC\A2\17\D7\99Vq\E2\A3|\F4_O\C8\19\F5\A7\8B\1D& \D6\86m\E6\CD\F8\9B1\1D0\F9Hw\120\A8\8B\E8\08`\01\F7\02~$|7\1B\15\17<\92\AE\22\0B\B8\C1\B4\83\9D-[\05b\DA\1Ce\1B\AD\F5\06\13\F9Pr\82\FCXC}\08\12?b\18\B3\C8W7\E5\0E\A3;/\94\9C\8A\16\CFz\DE\DF\BA-\85\9E\D2\8B\0A;\B9C-\1C\C1\0C\EB\CB\94<\13\A3c\97\E6\C4SJ\9C\11\F1\CF\E5\FE\B9\0B\D8\8B<= \B6\E8\\\03\16\EEC\9F~\A8\0E\CE\AE\8BL\A8\E3\224\84\1Bu\8A#O)\C9@M\D7/I\CE\95\A02\11\12m\EC\A2s\FB\90 \CD{\DBA\BBH\7F\15V\88\A7\8BP:\B5h\C0ZR\12\EA\1A\DF\1A6\B5HWrDqA\B8xsK\D2p\CB\10\83\E2\1A\ED\8E\95\CDQ\E6VP\DE\06M\FE\14$\9Ba\A8\F2\FA@\E6\9Fl\E4\95H\E0=\1A\F7\00=\A9\D7\9C\E8\EF\E3\C3\AE]-\ACf\104A\8C\93\0D\C4\E2\EB\DCt\1A\B58W\80\14\81Qo\F8\10u\DB&\14\12a\E2\06m\A0\19\F1\92E\9B*)I\98L\AB|M$D\04\10\AD\F7\16Bus[\BE\1F\D6\DB`-U\05\14\98\B5\9C\92RP\F2\AD\A7\CB\12\B9x\AA\06\19\FF\E2C7g\E4n\99\91~W\E7\16UH\1F\DFm\8A\82\C0N\E5\FF\1A\AF\96P.5\8D\13W\09-\A3p\A2\DE\BF\E1Z\BC\E4y\82p\18\ADK\F8\CB\0CK\D6/\9Aq\EB]\18\A3\8C\1EL/{\FF\E7\EE\E5]\00'\B3:\EF\E5\17\13\1F\FBY\FF\A1j_u\C0\F0_\09k\DF\DD\17\E7y0\7FJE\B7\92\F0\EC\B7\CBEW\D5\1D0L~\8FN\8B\B2[\16\F4R\9F\8BV\A5\12<\DF]3\22.\9F\F2\1B\B1'\87.\ACN\17\0BW5\C0\AA\F9F\EFb\9D\F1(:W\22\1DgV!\B8\0A\\\8C\D5]\02\97Y\84v5\12\01\AC)f\0Ds\EFJ\F5\C2\FCo%\D4\C2\16\01\17\B4\BF\D0O\AB\9D\B2\F3\FB\CB.\89s\1C`\8E\D0w\E2\11\8B\A2Ox}?\BD5\C8\11\F9\B1\C4\15[\D6-\8Bc\D6\\\8F,C:\16w\DE5\DB\F1K\F9m\FC\0B4\B3\F7\D3\C8\1B\0A\AB\01)w\CF\BB\C4}\87\00\D0z\84]\11\CD\15B\F3T\C3\EA5]\A9\00\84\99\E5\B4\15@\9B\120*te\83\B4\D3\00\E5\FF\1E\22\1B\08\A1\0B^\9Ah\1F\D2P\84 \EF_S\F5\10J\89\8E\F5\C0B\A7\06e\A5\E8\EA7\A82\15\9D+\F22q\13QH\BE\CE\A2\E5ER\7F\1AB[\D7\BF&\AC2\ED6\C1\85\AFk\93\8F\10\122\CDo0W\7F\A8\841g\9BFx\B3\14\97~\C0\8B\FC,\9F\D2\E5\FD@BXV\E0\19\1EOX\D7\1D|\A3\A3\AF\9Eh)\F75,\10\E6b.M%[\8C\8C[\C6\C2\F3tC7\14\9F\FBy\A0\EEq\AFo\F2w\B30R\14E\19\87z\98HjN\9B\0B\EFU\E0\BCfY\96\1F\94L_m\02\11Ag\B55\0C6\E0\F7\BD\13\BA\1F\B7\08CU\11\C1\22C\8FC\D8u\AD\18\A8\E7\E4\CA\93\AAUq\EB\13sTN\D3\D8\1E\C9\10\CF^\9C\8A\D5&s\EC\C7\F4\10\84G\13\FB\D4\82vC\ED\8A\F0\8F\E7\F91\15e\19\18:\8A#T\94\A8\AD\ECsax~Z\BE\1F\1Ed6\96\B4\\\89\ECs\E8<\0B\8F\F8\D6\D3\12\FD\C3\BB\E1\B3\AB\E7\90\22\0C\CE\B2\B6\CC\88\17\FD\B4*\DA\A0\96!5+\8F\81_\E4\FFj\1D\1E\B1Z\88$\FE4\01{\F9\B0\BB\EE\DFb\12e]q\AA\AD=\82\C1\D97\9Dj\EA\97\FB\16\BF\B4\0D\15\19\CD\E21\D0\85D\05\E5}\BA\1C\F7\90(\AD/\C0-\1F\A2\D3J#\AF\8E\F4\115\B5r\98;0\F9\A6\8A\88\1D\ECZ\B2q\16\82b\8F~J|\B7P\AD\EA$\A7\F1\1E\0E\1C\91\9D\19\8F\AE\ADrR\AC\12w\08W\D3\88\11\F6\04\E02\1AY\0FgW\D7\94\CA,\08\EB\153\06\98\BF`/\D3@-\0D:\FD7\CAe\1B\E0\03\BFw\9C\FD\83H<HD\FEb\9E\1F\11\D8\C4\AE\95\03\FD\A4ZKZ\D5\BD\FB\85g\15\0Ev\1A{D<N1\DE\B0J\ADzg\C1\1A\C9\89\F0\CC\AA\E5\D0\DE\8A\AEN\AC\AC\E0\B8\10;\AC,\80\15\1F\85\96-Zb\D7\D7\18\E7\14J\D77\E0\DAf&\FC\B8\F0:\CD\0D\DF \1A\8E\E6\22\CCH\00\98\9Ds\D6D\A0h\8BT\102\A0+\FFZ\00\FE\84\10\0CV\C8B\AEi\14>\88\F6\BEq\80=\A6\14\8Fkz\D3\19\84\19N*\B4.\8E\E0\CC\CF\D9r\06YH \E5\1Fp\9A0\DDX\0C\E0!\C8\07\A47-4\EF\13\0D\C1|\14o\0FX*\BA\09\8D\858\01\EB\18P\F1\9B\D9J\13\EE\B4(L\F0\A6\86\C1%\1F\D2v\01\C8\0E\CC\14q\99/V(\F4\98w\13\86\D4\01z\12\FFY\CD\7F\BBk21\7FU\18\A8I\82\18\D7~\B0\C0_\AA\06\7F\FD\DEj\1E\09nQoFOn\D8{*do^\CB\02\13\8B\C9%\0B\18\E3\89\CE\1A5=\0B6~\C3\17\EE;\EF\0D\DE[,\82a\82\0C\8E\C3]\B4\1Du\85\B5\C8j\B9[\F1|\D1\C78\9A\BA\90\12\D2\E6\E2z\C5\A7\B2-\DC\C5\F9\C6@\E94\17\86\A0\9B\D9\B6Q\1F9S7\B8\F8\90#\02\1DTD\01H\12\93\B3\03\94\22s\9B:V!\12i\95\01\DA\D6w\A0\049\EBOB\C9\AB\A9\16\C3\FA\81\90\CC\95\C8E\07\E6\E3\92\BB\16T\1C\BA<Q\DA\9F]\9D\8B\C4o\CE;5\8E\B4\11\E8\8B\E5\D0\07\B5\84\AE\B5\0B\C2\8A\C2\B1!\16\E3\EE\1E\C5I\E2%\1A\A3\8Er-3\1E\AA\1BMU3\1Bn\ADW\F0%\99g\FC\DFRJ\11\A1*\00\A2\C9\98mlo\7F\81\FB\97\E7\9C\15I5\80\0A\FC\FE\88GK\DFa\FA}!\04\1BN!\90\86]\9F\B5\0C\8F+}\BC\EE\94\E2\10\A1)4\E84\07\E3\CFrv\9Ck*:\1B\15\0A4A\22\02\C9\DB\83\0F\94\83\06\B5\08b\1A\86\C0hU\A1]i\B2\89<\12$qE}\10\A7\F0\C2\AA\09\B5\03\1F\AC\CB\16m\CD\96\9C\14\D1\ACs\15L\A2\C4&\97~\\\C8\80\BC\C3\19\03Lh\8Do\E5:x\1E\CF9}\D0U\1A\10\03_\C2p\CB\9EI\16\E6B\88\9CD\EB \14\C4\F6\F2L~\06\DC\9B\9FS\AA\C3\15&)\19v\B4/\E0\1D\08\D3\82\87\E8\944\9Bos\1F\C9\D0\1D\AC\12\E5\C3\B1T\11\DD\00\C1%\A8\13\FCD%WW\DE4\DE\A9U\14A1/\92\18;\96\EE,\ED\15\C2U\14kY\91\FD\BA\B6\1E\E5\1D\15<\B4M\99\B5\EC\E2\D7z\DE42\13^e\1AK!\A1\FF\E2\A7\DB\8D\19\16\C2\FE\17\B6\FE\E0\9Di\89\BF\DB\91R\F1\9F\9Br\FE\1D1\9F\AC\02\E2\B5W)\9B\D3\F6C\A1\07\BF\12\FE\C6W\83Z\A3\AD\F3\81\88\F4\94\89\C9n\17\BD\B8-$1\0C\99p\A2\AA1\FA\EB{J\1Dv\93\9C\B6\9E\A7_\86\A5\0A_|s\8DN\12T\B8Cd\86\91\F7\E7N\CDv[\D00\E2\16i\A6T\FD\E7u\F5\A1\A2\80Tr\04\BD\9A\1C\01\E8T\FE\B0i9\A5e\D0t\C7\22\B6\E0\11\02\22\EA=\1D\C4\87\0E\7F\04Ry\AB\E3X\16\82\AAd\8D$\B5)\D2\9E\85\A6W\96\1C\EF\1B\91\EA^\D86\11ZC\83\13\C8\F6\DDqu\116\A5v\8E\84\950\14d\18ztU\CE\D2\15\83N\14\B2\E5\BA<\19}\9E\98\D1\EA\81G\1B\12\B1L\8F\CF\F4\C5/\0Ec\FF\C22\B1\0C\11V\DD\1Fs\03r\B7\BB\D1;\BFs\7F\DDO\15\AC\D4\E7O\84N\A5*\C6\0A\AFP\DF\D4\A3\1A\EB\E4\F0\B1\12Q\A7\DA\BBfm\92\0Be\A6\10&\1Em^W%Q\D1j\C0\08wN\FE\CF\14\B0e\086\ADn\A5\85\85\F0\CA\14\E2\FD\03\1A\8E?\C5A,e\87sS\D6\FEL\AD~B\10q\8F6Rw>iP\E8\8B>\A0X\1ES\14N3\C4&\15\8E\83d\E2.N\C8\EE\E5g\19\22@up\9Aq\A4\FD\9A\BAazj\DF\C1\1F\15HI\86\00\C7\86\DE\A0\14}\8C\A2+\D9\13\1A\9A\DB\A7\C0x(\16\C9Y\9C/\8Bv\CF\18\A1\80\D2\D1\F0\96\B2[;p\83\FB-T\03\1Fd\90#\83V\9EO\19%&2\BD\9C\14b\13~t\EC#\EC\85\A3_\AE\AF~\EC\C3\99:\18\9D\91\E7,gg\8C\F7\99[\9E\E74@I\1E\02\BB\10|\A0\C0\B7:@\F9\C2\10!\C8\ED\12\C3\E9\14\9B\C8\B0eI\90\B7\F3T):\A9\173$\DA\C1\FA\1C\BF[t\A50\AA\B3\88\93\1D\A0V(\B9\1CrW\B9hg^Jp5|\12Hlr\E7\A3N\AD\E7B\01\F6\\\CCB\1B\17Z\07O\E1L\A2\98\A1\93\813t\7F\13\E2\1C\98d\D1\0Cpe\FFD\FC0\A0\A8/L\0D\12\BE\BD\05\10\CC>?V;=\C8\92;\9F\90\16.-\07\14\7F\0E\CF+\8ALzw\0A\C74\1C=|\84l\0Fia[\D6o\AC\8Af\FC\A0\11L\9B\A5GS\C39\F2\CB\8BW-\80;\09\16\1F\02\8F\19(4\C8\EE\BEn\AD8`\8A\8B\1BSa\F9\0F\99 =U7el#|67\11\A8\B9\F7S\BFh\8C*\85~G,\1B\04\85\15\12\A8\F5(\EF\82/u&^Y\F7!E\E6\1A\0B\89\99y\D5\B1=\09\D8\DA\97:5\EB\CF\10N\EB\FF\D7J\1E\8D\0B\8E\D1=\89\02\E6\03\15\22\E6\FF\8D\DDep\8E\F1E\8D+\83\DFD\1A\D5\EF\BFx\AA?\06\F9\B6K8\FB\B1\0Bk\10\CA\EB\EF\16\95\CFG\B7\A4^\06z\9E\CE\85\14\BD\E6\AB\\z\C3\19\E5M\F6\87\18FB\A7\196p\EBy,\1A0\AF\F0\F9T\CFk\89\08\10CLf\98\B7 \FC\DAl8*\C3\C6\AB\0A\14T\DF\7F~\E5(\BB\11\88\C6\F4s\B8V\0D\19*\D7\1F\DE\1E\F3)\16*\F8\F1\90f\ACP\1Fz\E6\D3J\F37\DAM\1A;\97\1A\C0k\92\13\19\E0\88\1D\F0\C5P\E1\E0\09=!\B0\06w\18\1F\18\EB$l\F7\A4\19YL\8C)\\\C8\94\1E\13\EF\12\97\A3\1A\07\B0\B7\AF\F7\999\FD\1C\13\D8\AA\D7|L\E1\08\9C\A5\9Bu\00\88<\E4\17\8E\95\0D\9C\9F\19\0B\03\8F\02\93\00\AAK\DD\1Dy}\88\C1\03\F0\E6a\99\E1[@JO\AA\12\D7\9C\EA\B1\04\AC`\BA\FF\D9r\D0\1C\E3T\17\0DDe\DE\05\D7\F8\A8\7F\90\8F\04\E4\1B*\1D\88J\FF\AAc\86\9B\C9O\BA\D9\82nQ:\12*\1D\BF\95\FCg\02\BC\E3(\90#\CA\E5\C8\16t\E4.\BB\FB\01\03\AB\1C3t\AC<\1F{\1C\C9N\FDT=\E1\E1\EA\F1\9F\C8\EB\85\F3\CC\11{\A2<\AA\8CY\9Ae\EE\C7\BAfg0@\16\1A\CB\CB\D4\EF\EF\00\FF\E9yi@\81<\D0\1B\F0^\FF\E4\F5\95`?2\ECA\C8\D0%b\11\AC6?^s\BB8\CF>gR\FAD\AF\BA\15W\04\CF5P\EA\06\83\0E\01\E78\16[)\1B\B6b\A1!rR\E4\11\A9`\90\E3\ED\D8\F9\10d\BB\09\AA\0Eg]V\D3xt\\)O8\15=*\8CT\D2\C0\F4+\08\97\91\B3\F3b\86\1Af\9A\D7t\83\F8x\1Be\FE:P\D8\FD\93\10\00\81\0DR\A46Wb\FE\BDIdN\FD\B8\14@\E1\90fM\04\ED\FA}-\\\FD\A1<\E7\19\C8\8C\1A`\B0\22\D4\BCn\9CY>\E5\850\10\FA/!x\\+\09l\8A\03\F0\8D^\A7<\14\F8{)\963v\0B\07m\04l16\D1K\19\F6\DA\B3{\C0S\CEH\88\05\C7\BD\83\C5\9E\1F\DAhPMX\F4\80-uc\9CVr;\C3\13\10\83\A4`n1\E1xR|C\ECN\0A\B4\18" }>, align 8, !dbg !15
@alloc_8a0c4e5a56ab0d518bd01c780582ddb7 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"assertion failed: value != 0" }>, align 1
@alloc_425defd486ca2d3fa6ce7ea38cfa2200 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"src/d2s_intrinsics.rs" }>, align 1
@alloc_3463bfcfb128194a8292e8786ed7dbfd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00,\00\00\00\09\00\00\00" }>, align 8
@alloc_3c17d0e6958d1d81deab3ad0e1763c66 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\001\00\00\00\09\00\00\00" }>, align 8
@alloc_6af066d1d5e7ee5fb60d6080f2fc5737 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00@\00\00\00\05\00\00\00" }>, align 8
@alloc_97e2d6a4de4c7634a41ba2ded88e86b5 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"assertion failed: p < 64" }>, align 1
@alloc_20d9a4eaef200cf1597e7fdb499d2cd5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00A\00\00\00\05\00\00\00" }>, align 8
@alloc_77a65abd6dae86f1070e1ff4fcbd65ff = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00C\00\00\00\0F\00\00\00" }>, align 8
@str.4 = internal unnamed_addr constant [35 x i8] c"attempt to shift left with overflow"
@alloc_22ae0c7763e133e3ddc06dd9a52c9ada = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00C\00\00\00\0E\00\00\00" }>, align 8
@alloc_2da4c4335fe0165cf163c0bf31e9db57 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00H\00\00\00\0E\00\00\00" }>, align 8
@alloc_b2b6903197360b3eff2d489cb1f2c1d5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00I\00\00\00\0E\00\00\00" }>, align 8
@alloc_5639c992f2e5215295f20865ee6b4dd7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00J\00\00\00\06\00\00\00" }>, align 8
@alloc_bb55bef3c54b796a5a3a41e2f06d59a5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00J\00\00\00\1B\00\00\00" }>, align 8
@alloc_ca90efad3155b55a6b00dc5ed0e18b60 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00J\00\00\00\05\00\00\00" }>, align 8
@str.5 = internal unnamed_addr constant [36 x i8] c"attempt to shift right with overflow"
@alloc_7d7571b10e1805cbeabe72a0ed3322b6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00V\00\00\00!\00\00\00" }>, align 8
@alloc_44877d4cfab256733322039b21cb5e72 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00W\00\00\00!\00\00\00" }>, align 8
@alloc_a982f97384b36fb94b2a9e835e8876a6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_425defd486ca2d3fa6ce7ea38cfa2200, [16 x i8] c"\15\00\00\00\00\00\00\00X\00\00\00\12\00\00\00" }>, align 8
@_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE = internal constant <{ [200 x i8] }> <{ [200 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899" }>, align 1, !dbg !20
@alloc_807d84b663e1ae17e8863e42093ea279 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"src/f2s.rs" }>, align 1
@alloc_959bdc6b2bd7243e0a89c26f70f8ac33 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00,\00\00\00\0D\00\00\00" }>, align 8
@alloc_58778619fc47f5485cb4d46aba4c7eb8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\001\00\00\00\0D\00\00\00" }>, align 8
@alloc_34ccb67624d548521ce731e88cf325d5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\009\00\00\00\0E\00\00\00" }>, align 8
@alloc_713a2f2fd35b2296b60fe5cefbef5e10 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00:\00\00\00\0E\00\00\00" }>, align 8
@alloc_ae50b7d6622a5a93938d20833f04cd0e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00=\00\00\00\0E\00\00\00" }>, align 8
@alloc_7506742366c6e07e2efe5c624786d18e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00c\00\00\00\1C\00\00\00" }>, align 8
@alloc_5907f13c2213580acd1f996dc6ca98d4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00d\00\00\00\0F\00\00\00" }>, align 8
@alloc_14128ddd2f0d95817b5ca9da71398431 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00e\00\00\00\11\00\00\00" }>, align 8
@alloc_f2f68c36525d96f9c096b991c6e62094 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00f\00\00\00\11\00\00\00" }>, align 8
@alloc_eb1bdec06d0056561bf53e0f3539a4eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00g\00\00\00\15\00\00\00" }>, align 8
@alloc_66ee51fc1fc9db1b750394ac7c9b6d6f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00k\00\00\00\16\00\00\00" }>, align 8
@alloc_2592d46cb4b15607399aac17f60550e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00l\00\00\00\11\00\00\00" }>, align 8
@alloc_a36b8337ceb7f32cf4d8d725282c8fa2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00l\00\00\00*\00\00\00" }>, align 8
@alloc_7862ff8857e017e28e821ade7a98ee17 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00l\00\00\00 \00\00\00" }>, align 8
@alloc_c43bba12b67af7147791a1190c87ebf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00m\00\00\009\00\00\00" }>, align 8
@alloc_0ff39c99799b916df0b9bf3878a6f57a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00|\00\00\00B\00\00\00" }>, align 8
@alloc_24cc65ce095b9519e5cca34f4dfad1cc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00x\00\00\00\11\00\00\00" }>, align 8
@alloc_07017f036992df221e9cb016c45a16e2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00J\00\00\00\11\00\00\00" }>, align 8
@alloc_38ca012ee5e8e20e9a7c3b1668b8b0cf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00K\00\00\00\11\00\00\00" }>, align 8
@alloc_473cce1f49550d3b707e497bfa0a3211 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00O\00\00\00\16\00\00\00" }>, align 8
@alloc_18ec4a60e11b3d1366861269a4c89baf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00S\00\00\008\00\00\00" }>, align 8
@alloc_f6006c282613035085e79596953b7632 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00S\00\00\00\15\00\00\00" }>, align 8
@alloc_3e74163b07bd90010f445bed7931a1bb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00U\00\00\00,\00\00\00" }>, align 8
@alloc_87cda37955f9f4353c434bf351ec10ec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00U\00\00\003\00\00\00" }>, align 8
@alloc_bac8d44bc7a0032c8d54518ea72e9499 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00_\00\00\00\11\00\00\00" }>, align 8
@alloc_db1c3d79a118b184f183501d7ae4f4ce = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\AA\00\00\00\09\00\00\00" }>, align 8
@alloc_936c277d70bdb528f576a573639b3669 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\A7\00\00\00\0D\00\00\00" }>, align 8
@alloc_b073df6047be0075926b51fcbede90d1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\94\00\00\00\11\00\00\00" }>, align 8
@alloc_de7da9cb4d5ddeeca07284d24db3dd7d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\9C\00\00\00\09\00\00\00" }>, align 8
@alloc_402687a25544ad3e1f0e0be61968008c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\AC\00\00\00\0F\00\00\00" }>, align 8
@alloc_16304998a6ce59a0e53cabb302e17a41 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\85\00\00\00*\00\00\00" }>, align 8
@alloc_975a370bf692fb82ca8b6238f51855a8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\85\00\00\00%\00\00\00" }>, align 8
@alloc_128b33664658987191e3f576d60b0a14 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_807d84b663e1ae17e8863e42093ea279, [16 x i8] c"\0A\00\00\00\00\00\00\00\8B\00\00\00\0D\00\00\00" }>, align 8
@alloc_196ca0ca84c8bc50ed2562b0e661d13a = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"src/f2s_intrinsics.rs" }>, align 1
@alloc_747ee4e36b1d18866c8b58ddf51b1367 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00\1E\00\00\00\09\00\00\00" }>, align 8
@alloc_bc26bf15c3c71ab3e5e7d5528aafe8fd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00%\00\00\00\09\00\00\00" }>, align 8
@alloc_a365c96a6efc30d0af04b71fdf3e2472 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\004\00\00\00\0F\00\00\00" }>, align 8
@alloc_308a3964890639794c6468e7ae25347a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\004\00\00\00\0E\00\00\00" }>, align 8
@alloc_89e434bd83ea4ddcbe69a51842618d26 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"assertion failed: shift > 32" }>, align 1
@alloc_4bc9bac3a5c1f5fd36a3471e7966a876 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00;\00\00\00\05\00\00\00" }>, align 8
@alloc_3b10f0a93fc2b7adc9ed29e43b7bbe0d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00A\00\00\00\11\00\00\00" }>, align 8
@alloc_cb5a4b52932f02f834320a763e06a77a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00B\00\00\00\11\00\00\00" }>, align 8
@alloc_062f298a4c3347aeed43c8731f819591 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00D\00\00\00\0F\00\00\00" }>, align 8
@alloc_96d4a9d1d9245207f613641a58068a57 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00E\00\00\00\1E\00\00\00" }>, align 8
@alloc_a9823afff4bf3076156fa618e5d3c0c0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00E\00\00\00\17\00\00\00" }>, align 8
@alloc_762f247df9999597ab977b03c72ab39e = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"assertion failed: shifted_sum <= u32::max_value() as u64" }>, align 1
@alloc_65ad0dfd110122d7ff764a96351efcaf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00F\00\00\00\05\00\00\00" }>, align 8
@alloc_f6c1d02023744ade68d309b45cffa5ec = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"assertion failed: q < d2s::DOUBLE_POW5_INV_SPLIT.len() as u32" }>, align 1
@alloc_71f31cd9c31d1366d16f631d890bcef8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00Y\00\00\00\09\00\00\00" }>, align 8
@alloc_5414758f89afb6b02067e4ee7d30f464 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00]\00\00\00\11\00\00\00" }>, align 8
@alloc_61cc5df38fe70c3693fc074b9d56369b = private unnamed_addr constant <{ [57 x i8] }> <{ [57 x i8] c"assertion failed: i < d2s::DOUBLE_POW5_SPLIT.len() as u32" }>, align 1
@alloc_c144c45452d58ae518c43f1adc0ff22d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_196ca0ca84c8bc50ed2562b0e661d13a, [16 x i8] c"\15\00\00\00\00\00\00\00n\00\00\00\09\00\00\00" }>, align 8
@alloc_f8a89b94eeb20862cd70322da8eb5b23 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"src/pretty/exponent.rs" }>, align 1
@alloc_feb0d971b758a93ac55636f56eabdfcc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\0A\00\00\00\0D\00\00\00" }>, align 8
@alloc_74c2609db300af735d6cf9cfb551df8c = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"assertion failed: k < 1000" }>, align 1
@alloc_36a991333bc0dfadfd3e58d5ddb63a44 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\0D\00\00\00\05\00\00\00" }>, align 8
@alloc_a41e8e6e3a8eb89c397dc381547f76f4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\19\00\00\00\13\00\00\00" }>, align 8
@alloc_4acf5bd955aa1bdfc622af006c2a2152 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\1A\00\00\00\09\00\00\00" }>, align 8
@alloc_4a8a6025beb5539a28048bd8498765eb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\15\00\00\00-\00\00\00" }>, align 8
@alloc_725b710c02ccbbf7e1f89a63c930d674 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\17\00\00\00\09\00\00\00" }>, align 8
@alloc_b197fd0294cf9006ea9d9bf0c7a1f326 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\0F\00\00\00\1A\00\00\00" }>, align 8
@str.6 = internal unnamed_addr constant [31 x i8] c"attempt to divide with overflow"
@alloc_ae6cfce2fdd02e205d884af24a139bfc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\0F\00\00\00\13\00\00\00" }>, align 8
@alloc_8230b5b42f5a3fe2ec9d9f978efb5c01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\10\00\00\00\09\00\00\00" }>, align 8
@str.7 = internal unnamed_addr constant [48 x i8] c"attempt to calculate the remainder with overflow"
@alloc_067f5c44999c2a01d9b912b4b26e06d5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\11\00\00\00-\00\00\00" }>, align 8
@alloc_3b2c66c06c3a855d0d9a744ab60bc545 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00\13\00\00\00\09\00\00\00" }>, align 8
@alloc_0fe7cdb3a3b5cda82fb6cf973f86ef10 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00$\00\00\00\0D\00\00\00" }>, align 8
@alloc_b9deeb25023c903d9fda7100cd346ade = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"assertion failed: k < 100" }>, align 1
@alloc_d5ad4f4b934c6bfd4027502f5c10f148 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc_419f1081c539c2e6be35a7f236b5e4fa = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00-\00\00\00\13\00\00\00" }>, align 8
@alloc_48c8627a1bb5b268d18f942fc36b4e91 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00.\00\00\00\09\00\00\00" }>, align 8
@alloc_7ec504308673cc511119f92188de360a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00)\00\00\00-\00\00\00" }>, align 8
@alloc_41e6abc0d5ba917f6fbf45e3ba5e99bc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f8a89b94eeb20862cd70322da8eb5b23, [16 x i8] c"\16\00\00\00\00\00\00\00+\00\00\00\09\00\00\00" }>, align 8
@alloc_577591140c702c294157524af7ad9192 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"src/pretty/mantissa.rs" }>, align 1
@alloc_fe229c9d38cfbedd70d1c42e4d940f28 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_577591140c702c294157524af7ad9192, [16 x i8] c"\16\00\00\00\00\00\00\00\08\00\00\00%\00\00\00" }>, align 8
@alloc_46ad6c976901a05c3f83d1906d8f9d3d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_577591140c702c294157524af7ad9192, [16 x i8] c"\16\00\00\00\00\00\00\00\08\00\00\00\1B\00\00\00" }>, align 8
@alloc_e7897fbc9f623d5ce19c34aa7672651e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_577591140c702c294157524af7ad9192, [16 x i8] c"\16\00\00\00\00\00\00\00P\00\00\00\1E\00\00\00" }>, align 8
@alloc_e94f33cf110ccf233dc7a7ca8e7f95e1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_577591140c702c294157524af7ad9192, [16 x i8] c"\16\00\00\00\00\00\00\00.\00\00\00\1A\00\00\00" }>, align 8
@alloc_2e65d08331b125af7d295364da7b047f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_577591140c702c294157524af7ad9192, [16 x i8] c"\16\00\00\00\00\00\00\00.\00\00\00\11\00\00\00" }>, align 8
@alloc_930040932a4ac124332d1a5ac66edf09 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"src/pretty/mod.rs" }>, align 1
@alloc_25f1f2914227c68578163459de2cb513 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\006\00\00\00\1A\00\00\00" }>, align 8
@alloc_899df9b4d4ba37011a32c76ba57f27fe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\006\00\00\00\11\00\00\00" }>, align 8
@alloc_afb1acaf358b5c9646dde4c3ccc54ef1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00>\00\00\00\09\00\00\00" }>, align 8
@alloc_3eb9269319b653ee3300e6da2b545429 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"0.0" }>, align 1
@alloc_c2e737bfeda28ac63dac6e08d642b1e6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00C\00\00\00\10\00\00\00" }>, align 8
@alloc_70c1faef5cfb7a2477799d012a7f96de = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00J\00\00\00\0E\00\00\00" }>, align 8
@alloc_6b032195130f2a22d8556410ea5d0865 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: k >= -324" }>, align 1
@alloc_b9dd5eba6b03387703853d9defe10530 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00K\00\00\00\05\00\00\00" }>, align 8
@alloc_647f032d2c58de9421683abf1dbae4e6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00h\00\00\00!\00\00\00" }>, align 8
@alloc_0aef3e730f1efb25f22ae2bc2167e071 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00i\00\00\00\18\00\00\00" }>, align 8
@alloc_10aa189d23d62e0f67b996694701ae1e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00j\00\00\00\09\00\00\00" }>, align 8
@alloc_ab40335d15b8948a13351f4120f212ca = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00j\00\00\00.\00\00\00" }>, align 8
@alloc_962e01f7d79e7aa4deb1ea54163a1615 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00j\00\00\00D\00\00\00" }>, align 8
@alloc_70af2b46c08d05e895a48124c543c99b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00m\00\00\007\00\00\00" }>, align 8
@alloc_c170ab98e7c40b04590f36e73dc0afd2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00n\00\00\000\00\00\00" }>, align 8
@alloc_6f2b319f7b35c4cbe42138dd8d526db4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00o\00\00\00\18\00\00\00" }>, align 8
@alloc_b82baa7c20815ef68341e89eef0e1887 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00p\00\00\00\18\00\00\00" }>, align 8
@alloc_eaf76a821b9b50c317409e046dfbb053 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00q\00\00\00\09\00\00\00" }>, align 8
@alloc_98ef727f3717e5d04591ee62dcd085c6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00t\00\00\00\1F\00\00\00" }>, align 8
@alloc_431aead480d433b450bcee308582eb9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00t\00\00\005\00\00\00" }>, align 8
@alloc_93774f00a4af8980e1eef86f9d0a3756 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00_\00\00\00\18\00\00\00" }>, align 8
@alloc_1a18bc689be4b43acdbecc534108ef4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00`\00\00\00\16\00\00\00" }>, align 8
@alloc_389ec59f3d1c81cf133722cfb9702901 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00d\00\00\007\00\00\00" }>, align 8
@alloc_8cb5734c769e3eaca01f37c40da6202a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00e\00\00\00\09\00\00\00" }>, align 8
@alloc_e263836092bbdd5599c87dab7e88e104 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00b\00\00\00\1C\00\00\00" }>, align 8
@alloc_508fc5a772a4a7a5a96bf39259863296 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00X\00\00\007\00\00\00" }>, align 8
@alloc_3b4e3eb3bbf2ba580f063ac09256cb3b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00Y\00\00\00!\00\00\00" }>, align 8
@alloc_58994bb0b3faa9d52df204d8aeb426d0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00Z\00\00\00\18\00\00\00" }>, align 8
@alloc_b9e6d3068585ff4db1f56a6d900e8a79 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00[\00\00\00\09\00\00\00" }>, align 8
@alloc_2dff8ecebb050fdf08a081277e2235c0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00O\00\00\007\00\00\00" }>, align 8
@alloc_268964ab7f97fa4448cd5566ad1180ea = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00S\00\00\00\18\00\00\00" }>, align 8
@alloc_5bcda4fdd36efa045062ff8eaa319fc7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00T\00\00\00\18\00\00\00" }>, align 8
@alloc_6c2cd21a49da83ad98b84496d8844f0e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00U\00\00\00\09\00\00\00" }>, align 8
@alloc_0246f2d8c62afc3704117e1e9396c104 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00Q\00\00\00\1C\00\00\00" }>, align 8
@alloc_de2b1923cb7df6b03e198151dc589ded = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\A1\00\00\00\1A\00\00\00" }>, align 8
@alloc_be4df936555c915d0a19f77f311d4053 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\A1\00\00\00\11\00\00\00" }>, align 8
@alloc_62b7eb59d0f8ed5ca50fd5bd1b0b5354 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\A8\00\00\00\09\00\00\00" }>, align 8
@alloc_6494673d6e4f5c76e5584b44dbea428b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\AD\00\00\00\10\00\00\00" }>, align 8
@alloc_9e0dc1f8d3e634602fee5d837c151a01 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\B4\00\00\00\0E\00\00\00" }>, align 8
@alloc_e7f75bd69c63639eb6ac04609381d8c1 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"assertion failed: k >= -45" }>, align 1
@alloc_3c89b3531b76a986d8c857e967f7cef6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\B5\00\00\00\05\00\00\00" }>, align 8
@alloc_8002c0f7d74f7d085856e37af2ee0d1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D2\00\00\00!\00\00\00" }>, align 8
@alloc_96b2feb1717fc911e72dce38dc775073 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D3\00\00\00\18\00\00\00" }>, align 8
@alloc_0cbb71e3d6801399b56717fa659f9ced = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D4\00\00\00\09\00\00\00" }>, align 8
@alloc_f4b2c099160828c09519b2d752da5d04 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D4\00\00\00.\00\00\00" }>, align 8
@alloc_d6726ba146b9638b124b14843139989f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D4\00\00\00D\00\00\00" }>, align 8
@alloc_80db5c6f5f3e5adebda81a39257a3339 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D7\00\00\002\00\00\00" }>, align 8
@alloc_d0fa8e0ff7931106f6c0d26fea7af7da = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D8\00\00\000\00\00\00" }>, align 8
@alloc_b0fcb2e275af27d41d24074c31f76c91 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\D9\00\00\00\18\00\00\00" }>, align 8
@alloc_0a6845d76a30ccffdf6df698b4b4f37c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\DA\00\00\00\18\00\00\00" }>, align 8
@alloc_d79e494bcf2d853b45aa3734d7207ace = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\DB\00\00\00\09\00\00\00" }>, align 8
@alloc_1d4b424658a4768ca5bfb4f0e2502ea4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\DE\00\00\00\1F\00\00\00" }>, align 8
@alloc_61010d19861cc96312f47b5cbf5cc535 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\DE\00\00\005\00\00\00" }>, align 8
@alloc_ab4655029e0545ec03979e1aca3bfebe = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\C9\00\00\00\18\00\00\00" }>, align 8
@alloc_b7e3a801c580dd4fc4da042d83c5fbc6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\CA\00\00\00\16\00\00\00" }>, align 8
@alloc_e40e4f78f1ad9a0bdc9cf2d21ce9d0c2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\CE\00\00\002\00\00\00" }>, align 8
@alloc_62d9a385d841d57d2416ba44d1a058f7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\CF\00\00\00\09\00\00\00" }>, align 8
@alloc_702af7329df4db48e9ea4593769d7c21 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\CC\00\00\00\1C\00\00\00" }>, align 8
@alloc_be0befad8fb1373e51e2b4636fa1e921 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\C2\00\00\002\00\00\00" }>, align 8
@alloc_824bec65326705de1b256e5cc8a6d894 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\C3\00\00\00!\00\00\00" }>, align 8
@alloc_712ade1e1b969f4daeef70e70a40efe9 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\C4\00\00\00\18\00\00\00" }>, align 8
@alloc_86c232ca8978d3f86d42e02a516d728f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\C5\00\00\00\09\00\00\00" }>, align 8
@alloc_06e46c4baa02844bb9f645aadca7bf1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\B9\00\00\002\00\00\00" }>, align 8
@alloc_d18aba6e0bd20c8dec4b19a3f3c0cb57 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\BD\00\00\00\18\00\00\00" }>, align 8
@alloc_8b26e2c94ada8c0d0daeebfb97785c99 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\BE\00\00\00\18\00\00\00" }>, align 8
@alloc_945bb8287bdfa1c00387442286da166f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\BF\00\00\00\09\00\00\00" }>, align 8
@alloc_584b3a88f4c4139d661ce673b5ad6ace = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_930040932a4ac124332d1a5ac66edf09, [16 x i8] c"\11\00\00\00\00\00\00\00\BB\00\00\00\1C\00\00\00" }>, align 8

; <isize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN49_$LT$isize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h0b0a463692db1d15E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !45 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, ptr %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !55, metadata !DIExpression()), !dbg !57
  call void @llvm.dbg.declare(metadata ptr %start.dbg.spill, metadata !58, metadata !DIExpression()), !dbg !70
  store i64 %n, ptr %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %n.dbg.spill, metadata !56, metadata !DIExpression()), !dbg !72
  store i64 %n, ptr %rhs.dbg.spill, align 8, !dbg !73
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill, metadata !69, metadata !DIExpression()), !dbg !70
  %_0 = add nsw i64 %start1, %n, !dbg !70
  ret i64 %_0, !dbg !74
}

; core::intrinsics::is_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hb5def9c93bc00671E(ptr %src, ptr %dst, i64 %size, i64 %count) unnamed_addr #0 !dbg !75 {
start:
  %size.dbg.spill3 = alloca i64, align 8
  %0 = alloca i8, align 1
  %a.dbg.spill1 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %dst_usize.dbg.spill = alloca i64, align 8
  %src_usize.dbg.spill = alloca i64, align 8
  %count.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  %diff = alloca i64, align 8
  %_9 = alloca %"core::option::Option<usize>", align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !84, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !97, metadata !DIExpression()), !dbg !111
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !113, metadata !DIExpression()), !dbg !123
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !85, metadata !DIExpression()), !dbg !125
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !107, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !119, metadata !DIExpression()), !dbg !128
  store i64 %size, ptr %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !86, metadata !DIExpression()), !dbg !130
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !131, metadata !DIExpression()), !dbg !159
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !161, metadata !DIExpression()), !dbg !177
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !87, metadata !DIExpression()), !dbg !179
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !154, metadata !DIExpression()), !dbg !159
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !172, metadata !DIExpression()), !dbg !177
  call void @llvm.dbg.declare(metadata ptr %diff, metadata !94, metadata !DIExpression()), !dbg !180
  %src_usize = ptrtoint ptr %src to i64, !dbg !181
  store i64 %src_usize, ptr %src_usize.dbg.spill, align 8, !dbg !181
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !88, metadata !DIExpression()), !dbg !182
  call void @llvm.dbg.declare(metadata ptr %src_usize.dbg.spill, metadata !183, metadata !DIExpression()), !dbg !191
  %dst_usize = ptrtoint ptr %dst to i64, !dbg !193
  store i64 %dst_usize, ptr %dst_usize.dbg.spill, align 8, !dbg !193
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !90, metadata !DIExpression()), !dbg !194
  call void @llvm.dbg.declare(metadata ptr %dst_usize.dbg.spill, metadata !190, metadata !DIExpression()), !dbg !191
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %size, i64 %count), !dbg !177
  %_15.0 = extractvalue { i64, i1 } %1, 0, !dbg !177
  %_15.1 = extractvalue { i64, i1 } %1, 1, !dbg !177
  store i64 %_15.0, ptr %a.dbg.spill, align 8, !dbg !177
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill, metadata !173, metadata !DIExpression()), !dbg !195
  %2 = zext i1 %_15.1 to i8, !dbg !177
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !177
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !158, metadata !DIExpression()), !dbg !196
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !176, metadata !DIExpression()), !dbg !195
  store i64 %_15.0, ptr %a.dbg.spill1, align 8, !dbg !195
  call void @llvm.dbg.declare(metadata ptr %a.dbg.spill1, metadata !155, metadata !DIExpression()), !dbg !196
  %3 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !196
  %4 = zext i1 %3 to i8, !dbg !196
  store i8 %4, ptr %0, align 1, !dbg !196
  %5 = load i8, ptr %0, align 1, !dbg !196, !range !197, !noundef !12
  %_12 = trunc i8 %5 to i1, !dbg !196
  br i1 %_12, label %bb2, label %bb3, !dbg !196

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !196
  store i64 %_15.0, ptr %6, align 8, !dbg !196
  store i64 1, ptr %_9, align 8, !dbg !196
  %7 = getelementptr inbounds i8, ptr %_9, i64 8, !dbg !198
  %size2 = load i64, ptr %7, align 8, !dbg !198, !noundef !12
  store i64 %size2, ptr %size.dbg.spill3, align 8, !dbg !198
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill3, metadata !92, metadata !DIExpression()), !dbg !199
  %_22 = icmp ult i64 %src_usize, %dst_usize, !dbg !191
  br i1 %_22, label %bb4, label %bb5, !dbg !191

bb2:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i64 61) #11, !dbg !200
  unreachable, !dbg !200

bb5:                                              ; preds = %bb3
  %8 = sub i64 %src_usize, %dst_usize, !dbg !191
  store i64 %8, ptr %diff, align 8, !dbg !191
  br label %bb6, !dbg !191

bb4:                                              ; preds = %bb3
  %9 = sub i64 %dst_usize, %src_usize, !dbg !191
  store i64 %9, ptr %diff, align 8, !dbg !191
  br label %bb6, !dbg !191

bb6:                                              ; preds = %bb4, %bb5
  %_11 = load i64, ptr %diff, align 8, !dbg !201, !noundef !12
  %_0 = icmp uge i64 %_11, %size2, !dbg !201
  ret i1 %_0, !dbg !202
}

; core::intrinsics::copy_nonoverlapping::precondition_check
; Function Attrs: inlinehint nounwind uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %src, ptr %dst, i64 %size, i64 %align, i64 %count) unnamed_addr #1 personality ptr @rust_eh_personality !dbg !203 {
start:
  %count.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !209, metadata !DIExpression()), !dbg !214
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !210, metadata !DIExpression()), !dbg !214
  store i64 %size, ptr %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %size.dbg.spill, metadata !211, metadata !DIExpression()), !dbg !214
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !212, metadata !DIExpression()), !dbg !214
  store i64 %count, ptr %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill, metadata !213, metadata !DIExpression()), !dbg !214
; invoke core::intrinsics::is_aligned_and_not_null
  %_6 = invoke zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E(ptr %src, i64 %align)
          to label %bb1 unwind label %terminate, !dbg !215

terminate:                                        ; preds = %bb4, %bb2, %start
  %0 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %1 = extractvalue { ptr, i32 } %0, 0
  %2 = extractvalue { ptr, i32 } %0, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h3626040c0976c0c3E() #12, !dbg !216
  unreachable, !dbg !216

bb1:                                              ; preds = %start
  br i1 %_6, label %bb2, label %bb7, !dbg !215

bb7:                                              ; preds = %bb5, %bb3, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !217
  unreachable, !dbg !217

bb2:                                              ; preds = %bb1
; invoke core::intrinsics::is_aligned_and_not_null
  %_7 = invoke zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E(ptr %dst, i64 %align)
          to label %bb3 unwind label %terminate, !dbg !218

bb3:                                              ; preds = %bb2
  br i1 %_7, label %bb4, label %bb7, !dbg !218

bb4:                                              ; preds = %bb3
; invoke core::intrinsics::is_nonoverlapping
  %_9 = invoke zeroext i1 @_ZN4core10intrinsics17is_nonoverlapping17hb5def9c93bc00671E(ptr %src, ptr %dst, i64 %size, i64 %count)
          to label %bb5 unwind label %terminate, !dbg !219

bb5:                                              ; preds = %bb4
  br i1 %_9, label %bb6, label %bb7, !dbg !219

bb6:                                              ; preds = %bb5
  ret void, !dbg !220
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E(ptr %ptr, i64 %align) unnamed_addr #0 !dbg !221 {
start:
  %pieces.dbg.spill = alloca { ptr, i64 }, align 8
  %0 = alloca i64, align 8
  %ptr.dbg.spill1 = alloca ptr, align 8
  %align.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca ptr, align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %_0 = alloca i8, align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !225, metadata !DIExpression()), !dbg !227
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !228, metadata !DIExpression()), !dbg !234
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !236, metadata !DIExpression()), !dbg !241
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !243, metadata !DIExpression()), !dbg !249
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !251, metadata !DIExpression()), !dbg !257
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !259, metadata !DIExpression()), !dbg !263
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill, metadata !247, metadata !DIExpression()), !dbg !265
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !226, metadata !DIExpression()), !dbg !267
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !240, metadata !DIExpression()), !dbg !268
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !269, metadata !DIExpression()), !dbg !276
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !278, metadata !DIExpression()), !dbg !286
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !256, metadata !DIExpression()), !dbg !288
  store ptr %ptr, ptr %ptr.dbg.spill1, align 8, !dbg !289
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill1, metadata !290, metadata !DIExpression()), !dbg !298
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill1, metadata !300, metadata !DIExpression()), !dbg !308
  call void @llvm.dbg.declare(metadata ptr %ptr.dbg.spill1, metadata !310, metadata !DIExpression()), !dbg !317
  %_4 = ptrtoint ptr %ptr to i64, !dbg !319
  %1 = icmp eq i64 %_4, 0, !dbg !320
  br i1 %1, label %bb1, label %bb2, !dbg !320

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !321
  br label %bb3, !dbg !321

bb2:                                              ; preds = %start
  %2 = call i64 @llvm.ctpop.i64(i64 %align), !dbg !286
  store i64 %2, ptr %0, align 8, !dbg !286
  %_9 = load i64, ptr %0, align 8, !dbg !286, !noundef !12
  %_8 = trunc i64 %_9 to i32, !dbg !286
  %3 = icmp eq i32 %_8, 1, !dbg !322
  br i1 %3, label %bb4, label %bb5, !dbg !322

bb3:                                              ; preds = %bb4, %bb1
  %4 = load i8, ptr %_0, align 1, !dbg !323, !range !197, !noundef !12
  %5 = trunc i8 %4 to i1, !dbg !323
  ret i1 %5, !dbg !323

bb4:                                              ; preds = %bb2
  %_13 = sub i64 %align, 1, !dbg !324
  %_12 = and i64 %_4, %_13, !dbg !325
  %6 = icmp eq i64 %_12, 0, !dbg !325
  %7 = zext i1 %6 to i8, !dbg !325
  store i8 %7, ptr %_0, align 1, !dbg !325
  br label %bb3, !dbg !321

bb5:                                              ; preds = %bb2
  store ptr @alloc_041983ee8170efdaaf95ba67fd072d26, ptr %pieces.dbg.spill, align 8, !dbg !326
  %8 = getelementptr inbounds i8, ptr %pieces.dbg.spill, i64 8, !dbg !326
  store i64 1, ptr %8, align 8, !dbg !326
  call void @llvm.dbg.declare(metadata ptr %pieces.dbg.spill, metadata !327, metadata !DIExpression()), !dbg !443
  store ptr @alloc_041983ee8170efdaaf95ba67fd072d26, ptr %_6, align 8, !dbg !447
  %9 = getelementptr inbounds i8, ptr %_6, i64 8, !dbg !447
  store i64 1, ptr %9, align 8, !dbg !447
  %10 = load ptr, ptr @0, align 8, !dbg !447, !align !448, !noundef !12
  %11 = load i64, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8, !dbg !447
  %12 = getelementptr inbounds i8, ptr %_6, i64 32, !dbg !447
  store ptr %10, ptr %12, align 8, !dbg !447
  %13 = getelementptr inbounds i8, ptr %12, i64 8, !dbg !447
  store i64 %11, ptr %13, align 8, !dbg !447
  %14 = getelementptr inbounds i8, ptr %_6, i64 16, !dbg !447
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %14, align 8, !dbg !447
  %15 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !447
  store i64 0, ptr %15, align 8, !dbg !447
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17ha6d62ade15192290E(ptr align 8 %_6, ptr align 8 @alloc_33f991fa5bbac1da9d8a778b0f014caf) #13, !dbg !449
  unreachable, !dbg !449
}

; core::intrinsics::copy::precondition_check
; Function Attrs: inlinehint nounwind uwtable
define internal void @_ZN4core10intrinsics4copy18precondition_check17h17007366dc948817E(ptr %src, ptr %dst, i64 %align) unnamed_addr #1 personality ptr @rust_eh_personality !dbg !450 {
start:
  %align.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  %src.dbg.spill = alloca ptr, align 8
  store ptr %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !455, metadata !DIExpression()), !dbg !458
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !456, metadata !DIExpression()), !dbg !458
  store i64 %align, ptr %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %align.dbg.spill, metadata !457, metadata !DIExpression()), !dbg !458
; invoke core::intrinsics::is_aligned_and_not_null
  %_4 = invoke zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E(ptr %src, i64 %align)
          to label %bb1 unwind label %terminate, !dbg !459

terminate:                                        ; preds = %bb2, %start
  %0 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %1 = extractvalue { ptr, i32 } %0, 0
  %2 = extractvalue { ptr, i32 } %0, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h3626040c0976c0c3E() #12, !dbg !460
  unreachable, !dbg !460

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb6, !dbg !459

bb6:                                              ; preds = %bb5, %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_8df0580a595a87d56789d20c7318e185, i64 166) #11, !dbg !461
  unreachable, !dbg !461

bb2:                                              ; preds = %bb1
; invoke core::intrinsics::is_aligned_and_not_null
  %_5 = invoke zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E(ptr %dst, i64 %align)
          to label %bb3 unwind label %terminate, !dbg !462

bb3:                                              ; preds = %bb2
  br i1 %_5, label %bb4, label %bb5, !dbg !462

bb5:                                              ; preds = %bb3
  br label %bb6, !dbg !463

bb4:                                              ; preds = %bb3
  ret void, !dbg !466
}

; core::intrinsics::unlikely
; Function Attrs: nounwind uwtable
define internal zeroext i1 @_ZN4core10intrinsics8unlikely17h2e85a46bd8ea925fE(i1 zeroext %b) unnamed_addr #2 !dbg !467 {
start:
  %b.dbg.spill = alloca i8, align 1
  %0 = zext i1 %b to i8
  store i8 %0, ptr %b.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %b.dbg.spill, metadata !471, metadata !DIExpression()), !dbg !472
  ret i1 %b, !dbg !473
}

; core::f32::<impl f32>::to_bits
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17he35d6ad522d304caE"(float %self) unnamed_addr #0 !dbg !474 {
start:
  %self.dbg.spill = alloca float, align 4
  store float %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !482, metadata !DIExpression()), !dbg !483
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !484, metadata !DIExpression()), !dbg !489
  %_0 = bitcast float %self to i32, !dbg !491
  ret i32 %_0, !dbg !492
}

; core::f64::<impl f64>::to_bits
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h87803c219b16c1eeE"(double %self) unnamed_addr #0 !dbg !493 {
start:
  %self.dbg.spill = alloca double, align 8
  store double %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !501, metadata !DIExpression()), !dbg !502
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !503, metadata !DIExpression()), !dbg !508
  %_0 = bitcast double %self to i64, !dbg !510
  ret i64 %_0, !dbg !511
}

; core::ptr::write
; Function Attrs: inlinehint uwtable
define void @_ZN4core3ptr5write17hcb93018d2258e1d4E(ptr %dst, i64 %src) unnamed_addr #0 !dbg !512 {
start:
  %src.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca ptr, align 8
  store ptr %dst, ptr %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !522
  store i64 %src, ptr %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill, metadata !519, metadata !DIExpression()), !dbg !523
  store i64 %src, ptr %dst, align 8, !dbg !524
  ret void, !dbg !525
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E"(ptr align 8 %self) unnamed_addr #0 !dbg !526 {
start:
  %self.dbg.spill = alloca ptr, align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !553, metadata !DIExpression()), !dbg !556
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h0bbc31bcc60a3f6aE"(ptr align 8 %self), !dbg !557
  %_0.0 = extractvalue { i64, i64 } %0, 0, !dbg !557
  %_0.1 = extractvalue { i64, i64 } %0, 1, !dbg !557
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0, !dbg !558
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1, !dbg !558
  ret { i64, i64 } %2, !dbg !558
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint uwtable
define align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E"(ptr align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !559 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  store ptr %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !572, metadata !DIExpression()), !dbg !577
  store i64 %index, ptr %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %index.dbg.spill, metadata !573, metadata !DIExpression()), !dbg !578
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3563110427193a4aE"(i64 %index, ptr %self.0, i64 %self.1), !dbg !579
  ret ptr %_3, !dbg !580
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !581 {
start:
  %self.dbg.spill = alloca %"core::ops::range::Range<isize>", align 8
  store i64 %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8
  store i64 %self.1, ptr %0, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !589, metadata !DIExpression()), !dbg !592
  %1 = insertvalue { i64, i64 } poison, i64 %self.0, 0, !dbg !593
  %2 = insertvalue { i64, i64 } %1, i64 %self.1, 1, !dbg !593
  ret { i64, i64 } %2, !dbg !593
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint uwtable
define ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3563110427193a4aE"(i64 %self, ptr %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !594 {
start:
  %self.dbg.spill1 = alloca ptr, align 8
  %slice.dbg.spill = alloca { ptr, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_11 = alloca %"core::ptr::metadata::PtrRepr<[(u64, u64)]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[(u64, u64)]>", align 8
  store i64 %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !606, metadata !DIExpression()), !dbg !609
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !610, metadata !DIExpression()), !dbg !617
  store ptr %slice.0, ptr %slice.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i64 8
  store i64 %slice.1, ptr %0, align 8
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !607, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !620, metadata !DIExpression()), !dbg !629
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !631, metadata !DIExpression()), !dbg !639
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !627, metadata !DIExpression()), !dbg !641
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !637, metadata !DIExpression()), !dbg !643
  call void @llvm.dbg.declare(metadata ptr %slice.dbg.spill, metadata !645, metadata !DIExpression()), !dbg !651
  br label %bb1, !dbg !653

bb1:                                              ; preds = %start
  store ptr %slice.0, ptr %_10, align 8, !dbg !654
  %1 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !654
  store i64 %slice.1, ptr %1, align 8, !dbg !654
  %2 = getelementptr inbounds i8, ptr %_10, i64 8, !dbg !654
  %_5 = load i64, ptr %2, align 8, !dbg !654, !noundef !12
  %_4 = icmp ult i64 %self, %_5, !dbg !655
  br i1 %_4, label %bb2, label %bb3, !dbg !655

bb3:                                              ; preds = %bb1
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_8572d294b7d4b9d2125dc5191e02725c, i64 64) #11, !dbg !653
  unreachable, !dbg !653

bb2:                                              ; preds = %bb1
  br label %bb4, !dbg !653

bb4:                                              ; preds = %bb2
  store ptr %slice.0, ptr %_11, align 8, !dbg !656
  %3 = getelementptr inbounds i8, ptr %_11, i64 8, !dbg !656
  store i64 %slice.1, ptr %3, align 8, !dbg !656
  %4 = getelementptr inbounds i8, ptr %_11, i64 8, !dbg !656
  %_8 = load i64, ptr %4, align 8, !dbg !656, !noundef !12
  %_7 = icmp ult i64 %self, %_8, !dbg !657
  store ptr %slice.0, ptr %self.dbg.spill1, align 8, !dbg !658
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill1, metadata !616, metadata !DIExpression()), !dbg !659
  %_0 = getelementptr inbounds { i64, i64 }, ptr %slice.0, i64 %self, !dbg !660
  ret ptr %_0, !dbg !661
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h0bbc31bcc60a3f6aE"(ptr align 8 %self) unnamed_addr #0 !dbg !662 {
start:
  %other.dbg.spill.i = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %old.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<isize>", align 8
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !665, metadata !DIExpression()), !dbg !668
  %_4 = getelementptr inbounds i8, ptr %self, i64 8, !dbg !669
  store ptr %self, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !670, metadata !DIExpression()), !dbg !681
  store ptr %_4, ptr %other.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill.i, metadata !680, metadata !DIExpression()), !dbg !683
  %_3.i = load i64, ptr %self, align 8, !dbg !684, !noundef !12
  %_4.i = load i64, ptr %_4, align 8, !dbg !685, !noundef !12
  %_0.i = icmp slt i64 %_3.i, %_4.i, !dbg !684
  br i1 %_0.i, label %bb2, label %bb4, !dbg !686

bb4:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !687
  br label %bb5, !dbg !688

bb2:                                              ; preds = %start
  %old = load i64, ptr %self, align 8, !dbg !689, !noundef !12
  store i64 %old, ptr %old.dbg.spill, align 8, !dbg !689
  call void @llvm.dbg.declare(metadata ptr %old.dbg.spill, metadata !666, metadata !DIExpression()), !dbg !690
; call <isize as core::iter::range::Step>::forward_unchecked
  %_6 = call i64 @"_ZN49_$LT$isize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h0b0a463692db1d15E"(i64 %old, i64 1), !dbg !691
  store i64 %_6, ptr %self, align 8, !dbg !692
  %0 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !693
  store i64 %old, ptr %0, align 8, !dbg !693
  store i64 1, ptr %_0, align 8, !dbg !693
  br label %bb5, !dbg !688

bb5:                                              ; preds = %bb2, %bb4
  %1 = load i64, ptr %_0, align 8, !dbg !694, !range !695, !noundef !12
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !694
  %3 = load i64, ptr %2, align 8, !dbg !694
  %4 = insertvalue { i64, i64 } poison, i64 %1, 0, !dbg !694
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !694
  ret { i64, i64 } %5, !dbg !694
}

; <f32 as ryu::buffer::Sealed>::format_nonfinite
; Function Attrs: cold uwtable
define { ptr, i64 } @"_ZN43_$LT$f32$u20$as$u20$ryu..buffer..Sealed$GT$16format_nonfinite17h0d8e470cf918498dE"(float %self) unnamed_addr #3 !dbg !696 {
start:
  %bits.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca float, align 4
  %_0 = alloca { ptr, i64 }, align 8
  store float %self, ptr %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !703, metadata !DIExpression()), !dbg !706
; call core::f32::<impl f32>::to_bits
  %bits = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17he35d6ad522d304caE"(float %self), !dbg !707
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !707
  call void @llvm.dbg.declare(metadata ptr %bits.dbg.spill, metadata !704, metadata !DIExpression()), !dbg !708
  %_3 = and i32 %bits, 8388607, !dbg !709
  %0 = icmp eq i32 %_3, 0, !dbg !709
  br i1 %0, label %bb3, label %bb2, !dbg !709

bb3:                                              ; preds = %start
  %_4 = and i32 %bits, -2147483648, !dbg !710
  %1 = icmp eq i32 %_4, 0, !dbg !710
  br i1 %1, label %bb5, label %bb4, !dbg !710

bb2:                                              ; preds = %start
  store ptr @alloc_6dc902770b3728786f1603e430305586, ptr %_0, align 8, !dbg !711
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !711
  store i64 3, ptr %2, align 8, !dbg !711
  br label %bb6, !dbg !712

bb5:                                              ; preds = %bb3
  store ptr @alloc_6c433d3c07b7c6453f8a17b49b46c496, ptr %_0, align 8, !dbg !713
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !713
  store i64 3, ptr %3, align 8, !dbg !713
  br label %bb6, !dbg !714

bb4:                                              ; preds = %bb3
  store ptr @alloc_159a91930e1f3f513911a864c7d9fa72, ptr %_0, align 8, !dbg !715
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !715
  store i64 4, ptr %4, align 8, !dbg !715
  br label %bb6, !dbg !714

bb6:                                              ; preds = %bb2, %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8, !dbg !716, !nonnull !12, !align !717, !noundef !12
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !716
  %7 = load i64, ptr %6, align 8, !dbg !716, !noundef !12
  %8 = insertvalue { ptr, i64 } poison, ptr %5, 0, !dbg !716
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !716
  ret { ptr, i64 } %9, !dbg !716
}

; <f64 as ryu::buffer::Sealed>::format_nonfinite
; Function Attrs: cold uwtable
define { ptr, i64 } @"_ZN43_$LT$f64$u20$as$u20$ryu..buffer..Sealed$GT$16format_nonfinite17h8f3a09190c85aa54E"(double %self) unnamed_addr #3 !dbg !718 {
start:
  %bits.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca double, align 8
  %_0 = alloca { ptr, i64 }, align 8
  store double %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !723, metadata !DIExpression()), !dbg !726
; call core::f64::<impl f64>::to_bits
  %bits = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h87803c219b16c1eeE"(double %self), !dbg !727
  store i64 %bits, ptr %bits.dbg.spill, align 8, !dbg !727
  call void @llvm.dbg.declare(metadata ptr %bits.dbg.spill, metadata !724, metadata !DIExpression()), !dbg !728
  %_3 = and i64 %bits, 4503599627370495, !dbg !729
  %0 = icmp eq i64 %_3, 0, !dbg !729
  br i1 %0, label %bb3, label %bb2, !dbg !729

bb3:                                              ; preds = %start
  %_4 = and i64 %bits, -9223372036854775808, !dbg !730
  %1 = icmp eq i64 %_4, 0, !dbg !730
  br i1 %1, label %bb5, label %bb4, !dbg !730

bb2:                                              ; preds = %start
  store ptr @alloc_6dc902770b3728786f1603e430305586, ptr %_0, align 8, !dbg !731
  %2 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !731
  store i64 3, ptr %2, align 8, !dbg !731
  br label %bb6, !dbg !732

bb5:                                              ; preds = %bb3
  store ptr @alloc_6c433d3c07b7c6453f8a17b49b46c496, ptr %_0, align 8, !dbg !733
  %3 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !733
  store i64 3, ptr %3, align 8, !dbg !733
  br label %bb6, !dbg !734

bb4:                                              ; preds = %bb3
  store ptr @alloc_159a91930e1f3f513911a864c7d9fa72, ptr %_0, align 8, !dbg !735
  %4 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !735
  store i64 4, ptr %4, align 8, !dbg !735
  br label %bb6, !dbg !734

bb6:                                              ; preds = %bb2, %bb4, %bb5
  %5 = load ptr, ptr %_0, align 8, !dbg !736, !nonnull !12, !align !717, !noundef !12
  %6 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !736
  %7 = load i64, ptr %6, align 8, !dbg !736, !noundef !12
  %8 = insertvalue { ptr, i64 } poison, ptr %5, 0, !dbg !736
  %9 = insertvalue { ptr, i64 } %8, i64 %7, 1, !dbg !736
  ret { ptr, i64 } %9, !dbg !736
}

; ryu::common::decimal_length9
; Function Attrs: uwtable
define internal i32 @_ZN3ryu6common15decimal_length917he93f7bd74fb523f6E(i32 %v) unnamed_addr #4 !dbg !737 {
start:
  %v.dbg.spill = alloca i32, align 4
  %_0 = alloca i32, align 4
  store i32 %v, ptr %v.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !743, metadata !DIExpression()), !dbg !744
  br label %bb1, !dbg !745

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %v, 1000000000, !dbg !746
  br i1 %_3, label %bb3, label %bb2, !dbg !746

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_0fb2d8447d94ac8edf1425f42907a9ac, i64 32, ptr align 8 @alloc_2828252afb552181979a7e1a8d872610) #13, !dbg !745
  unreachable, !dbg !745

bb3:                                              ; preds = %bb1
  %_5 = icmp uge i32 %v, 100000000, !dbg !747
  br i1 %_5, label %bb4, label %bb5, !dbg !747

bb5:                                              ; preds = %bb3
  %_6 = icmp uge i32 %v, 10000000, !dbg !748
  br i1 %_6, label %bb6, label %bb7, !dbg !748

bb4:                                              ; preds = %bb3
  store i32 9, ptr %_0, align 4, !dbg !749
  br label %bb20, !dbg !750

bb7:                                              ; preds = %bb5
  %_7 = icmp uge i32 %v, 1000000, !dbg !751
  br i1 %_7, label %bb8, label %bb9, !dbg !751

bb6:                                              ; preds = %bb5
  store i32 8, ptr %_0, align 4, !dbg !752
  br label %bb20, !dbg !753

bb9:                                              ; preds = %bb7
  %_8 = icmp uge i32 %v, 100000, !dbg !754
  br i1 %_8, label %bb10, label %bb11, !dbg !754

bb8:                                              ; preds = %bb7
  store i32 7, ptr %_0, align 4, !dbg !755
  br label %bb20, !dbg !756

bb11:                                             ; preds = %bb9
  %_9 = icmp uge i32 %v, 10000, !dbg !757
  br i1 %_9, label %bb12, label %bb13, !dbg !757

bb10:                                             ; preds = %bb9
  store i32 6, ptr %_0, align 4, !dbg !758
  br label %bb20, !dbg !759

bb13:                                             ; preds = %bb11
  %_10 = icmp uge i32 %v, 1000, !dbg !760
  br i1 %_10, label %bb14, label %bb15, !dbg !760

bb12:                                             ; preds = %bb11
  store i32 5, ptr %_0, align 4, !dbg !761
  br label %bb20, !dbg !762

bb15:                                             ; preds = %bb13
  %_11 = icmp uge i32 %v, 100, !dbg !763
  br i1 %_11, label %bb16, label %bb17, !dbg !763

bb14:                                             ; preds = %bb13
  store i32 4, ptr %_0, align 4, !dbg !764
  br label %bb20, !dbg !765

bb17:                                             ; preds = %bb15
  %_12 = icmp uge i32 %v, 10, !dbg !766
  br i1 %_12, label %bb18, label %bb19, !dbg !766

bb16:                                             ; preds = %bb15
  store i32 3, ptr %_0, align 4, !dbg !767
  br label %bb20, !dbg !768

bb19:                                             ; preds = %bb17
  store i32 1, ptr %_0, align 4, !dbg !769
  br label %bb20, !dbg !770

bb18:                                             ; preds = %bb17
  store i32 2, ptr %_0, align 4, !dbg !771
  br label %bb20, !dbg !770

bb20:                                             ; preds = %bb4, %bb6, %bb8, %bb10, %bb12, %bb14, %bb16, %bb18, %bb19
  %0 = load i32, ptr %_0, align 4, !dbg !772, !noundef !12
  ret i32 %0, !dbg !772
}

; ryu::common::pow5bits
; Function Attrs: uwtable
define internal i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %e) unnamed_addr #4 !dbg !773 {
start:
  %e.dbg.spill = alloca i32, align 4
  store i32 %e, ptr %e.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !778, metadata !DIExpression()), !dbg !779
  br label %bb1, !dbg !780

bb1:                                              ; preds = %start
  %_3 = icmp sge i32 %e, 0, !dbg !781
  br i1 %_3, label %bb3, label %bb2, !dbg !781

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_5d75a77ff6bfdf3290599e569908b354, i64 24, ptr align 8 @alloc_1c114e613a837173c9d9fdb44047ae71) #13, !dbg !780
  unreachable, !dbg !780

bb3:                                              ; preds = %bb1
  br label %bb4, !dbg !782

bb4:                                              ; preds = %bb3
  %_6 = icmp sle i32 %e, 3528, !dbg !783
  br i1 %_6, label %bb6, label %bb5, !dbg !783

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_d1817c19a9d5a1deaf2d04dd4ee57f7a, i64 27, ptr align 8 @alloc_229542ea2c11a50919abe61397c4fa3d) #13, !dbg !782
  unreachable, !dbg !782

bb6:                                              ; preds = %bb4
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %e, i32 1217359), !dbg !784
  %_12.0 = extractvalue { i32, i1 } %0, 0, !dbg !784
  %_12.1 = extractvalue { i32, i1 } %0, 1, !dbg !784
  %1 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !784
  br i1 %1, label %panic, label %bb7, !dbg !784

bb7:                                              ; preds = %bb6
  %_9 = lshr i32 %_12.0, 19, !dbg !785
  %2 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_9, i32 1), !dbg !786
  %_15.0 = extractvalue { i32, i1 } %2, 0, !dbg !786
  %_15.1 = extractvalue { i32, i1 } %2, 1, !dbg !786
  %3 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !786
  br i1 %3, label %panic1, label %bb9, !dbg !786

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_f1e197fa24738ef39803f80eeefbaf3d) #13, !dbg !784
  unreachable, !dbg !784

bb9:                                              ; preds = %bb7
  ret i32 %_15.0, !dbg !787

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c93d5a22af4798ff4680fc5203cdaeb7) #13, !dbg !786
  unreachable, !dbg !786
}

; ryu::common::log10_pow2
; Function Attrs: uwtable
define internal i32 @_ZN3ryu6common10log10_pow217h88a5810e0666daf6E(i32 %e) unnamed_addr #4 !dbg !788 {
start:
  %e.dbg.spill = alloca i32, align 4
  store i32 %e, ptr %e.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !792, metadata !DIExpression()), !dbg !793
  br label %bb1, !dbg !794

bb1:                                              ; preds = %start
  %_3 = icmp sge i32 %e, 0, !dbg !795
  br i1 %_3, label %bb3, label %bb2, !dbg !795

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_5d75a77ff6bfdf3290599e569908b354, i64 24, ptr align 8 @alloc_5bfa569a1683ee72db1df15ea85c1e41) #13, !dbg !794
  unreachable, !dbg !794

bb3:                                              ; preds = %bb1
  br label %bb4, !dbg !796

bb4:                                              ; preds = %bb3
  %_6 = icmp sle i32 %e, 1650, !dbg !797
  br i1 %_6, label %bb6, label %bb5, !dbg !797

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_0a14caa49b4fb40185d8b7924229cd53, i64 27, ptr align 8 @alloc_36b9462338ee478de85b8191d2c3ee55) #13, !dbg !796
  unreachable, !dbg !796

bb6:                                              ; preds = %bb4
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %e, i32 78913), !dbg !798
  %_10.0 = extractvalue { i32, i1 } %0, 0, !dbg !798
  %_10.1 = extractvalue { i32, i1 } %0, 1, !dbg !798
  %1 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !798
  br i1 %1, label %panic, label %bb7, !dbg !798

bb7:                                              ; preds = %bb6
  %_0 = lshr i32 %_10.0, 18, !dbg !798
  ret i32 %_0, !dbg !799

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_0d223a7197fab34dd690176b4c6ef291) #13, !dbg !798
  unreachable, !dbg !798
}

; ryu::common::log10_pow5
; Function Attrs: uwtable
define internal i32 @_ZN3ryu6common10log10_pow517h9cfc9ad07c9e8fa1E(i32 %e) unnamed_addr #4 !dbg !800 {
start:
  %e.dbg.spill = alloca i32, align 4
  store i32 %e, ptr %e.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %e.dbg.spill, metadata !802, metadata !DIExpression()), !dbg !803
  br label %bb1, !dbg !804

bb1:                                              ; preds = %start
  %_3 = icmp sge i32 %e, 0, !dbg !805
  br i1 %_3, label %bb3, label %bb2, !dbg !805

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_5d75a77ff6bfdf3290599e569908b354, i64 24, ptr align 8 @alloc_32ac48a813110bba90a819ae3b1012ab) #13, !dbg !804
  unreachable, !dbg !804

bb3:                                              ; preds = %bb1
  br label %bb4, !dbg !806

bb4:                                              ; preds = %bb3
  %_6 = icmp sle i32 %e, 2620, !dbg !807
  br i1 %_6, label %bb6, label %bb5, !dbg !807

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_11497579c2947b5e6d2b704e058c7ca0, i64 27, ptr align 8 @alloc_33afa91b50edd2bd62fbc08bb5dda0d5) #13, !dbg !806
  unreachable, !dbg !806

bb6:                                              ; preds = %bb4
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %e, i32 732923), !dbg !808
  %_10.0 = extractvalue { i32, i1 } %0, 0, !dbg !808
  %_10.1 = extractvalue { i32, i1 } %0, 1, !dbg !808
  %1 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !808
  br i1 %1, label %panic, label %bb7, !dbg !808

bb7:                                              ; preds = %bb6
  %_0 = lshr i32 %_10.0, 20, !dbg !808
  ret i32 %_0, !dbg !809

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_23d0ff817836b60226e2d950ae31eb63) #13, !dbg !808
  unreachable, !dbg !808
}

; ryu::d2s::decimal_length17
; Function Attrs: uwtable
define internal i32 @_ZN3ryu3d2s16decimal_length1717he889d407549ead65E(i64 %v) unnamed_addr #4 !dbg !810 {
start:
  %v.dbg.spill = alloca i64, align 8
  %_0 = alloca i32, align 4
  store i64 %v, ptr %v.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !816, metadata !DIExpression()), !dbg !817
  br label %bb1, !dbg !818

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %v, 100000000000000000, !dbg !819
  br i1 %_3, label %bb3, label %bb2, !dbg !819

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_adc66bc14f2c08e7ae63da4d2e5b7dac, i64 40, ptr align 8 @alloc_698078b63676f19222d4eab3ac3a3ae1) #13, !dbg !818
  unreachable, !dbg !818

bb3:                                              ; preds = %bb1
  %_5 = icmp uge i64 %v, 10000000000000000, !dbg !820
  br i1 %_5, label %bb4, label %bb5, !dbg !820

bb5:                                              ; preds = %bb3
  %_6 = icmp uge i64 %v, 1000000000000000, !dbg !821
  br i1 %_6, label %bb6, label %bb7, !dbg !821

bb4:                                              ; preds = %bb3
  store i32 17, ptr %_0, align 4, !dbg !822
  br label %bb36, !dbg !823

bb7:                                              ; preds = %bb5
  %_7 = icmp uge i64 %v, 100000000000000, !dbg !824
  br i1 %_7, label %bb8, label %bb9, !dbg !824

bb6:                                              ; preds = %bb5
  store i32 16, ptr %_0, align 4, !dbg !825
  br label %bb36, !dbg !826

bb9:                                              ; preds = %bb7
  %_8 = icmp uge i64 %v, 10000000000000, !dbg !827
  br i1 %_8, label %bb10, label %bb11, !dbg !827

bb8:                                              ; preds = %bb7
  store i32 15, ptr %_0, align 4, !dbg !828
  br label %bb36, !dbg !829

bb11:                                             ; preds = %bb9
  %_9 = icmp uge i64 %v, 1000000000000, !dbg !830
  br i1 %_9, label %bb12, label %bb13, !dbg !830

bb10:                                             ; preds = %bb9
  store i32 14, ptr %_0, align 4, !dbg !831
  br label %bb36, !dbg !832

bb13:                                             ; preds = %bb11
  %_10 = icmp uge i64 %v, 100000000000, !dbg !833
  br i1 %_10, label %bb14, label %bb15, !dbg !833

bb12:                                             ; preds = %bb11
  store i32 13, ptr %_0, align 4, !dbg !834
  br label %bb36, !dbg !835

bb15:                                             ; preds = %bb13
  %_11 = icmp uge i64 %v, 10000000000, !dbg !836
  br i1 %_11, label %bb16, label %bb17, !dbg !836

bb14:                                             ; preds = %bb13
  store i32 12, ptr %_0, align 4, !dbg !837
  br label %bb36, !dbg !838

bb17:                                             ; preds = %bb15
  %_12 = icmp uge i64 %v, 1000000000, !dbg !839
  br i1 %_12, label %bb18, label %bb19, !dbg !839

bb16:                                             ; preds = %bb15
  store i32 11, ptr %_0, align 4, !dbg !840
  br label %bb36, !dbg !841

bb19:                                             ; preds = %bb17
  %_13 = icmp uge i64 %v, 100000000, !dbg !842
  br i1 %_13, label %bb20, label %bb21, !dbg !842

bb18:                                             ; preds = %bb17
  store i32 10, ptr %_0, align 4, !dbg !843
  br label %bb36, !dbg !844

bb21:                                             ; preds = %bb19
  %_14 = icmp uge i64 %v, 10000000, !dbg !845
  br i1 %_14, label %bb22, label %bb23, !dbg !845

bb20:                                             ; preds = %bb19
  store i32 9, ptr %_0, align 4, !dbg !846
  br label %bb36, !dbg !847

bb23:                                             ; preds = %bb21
  %_15 = icmp uge i64 %v, 1000000, !dbg !848
  br i1 %_15, label %bb24, label %bb25, !dbg !848

bb22:                                             ; preds = %bb21
  store i32 8, ptr %_0, align 4, !dbg !849
  br label %bb36, !dbg !850

bb25:                                             ; preds = %bb23
  %_16 = icmp uge i64 %v, 100000, !dbg !851
  br i1 %_16, label %bb26, label %bb27, !dbg !851

bb24:                                             ; preds = %bb23
  store i32 7, ptr %_0, align 4, !dbg !852
  br label %bb36, !dbg !853

bb27:                                             ; preds = %bb25
  %_17 = icmp uge i64 %v, 10000, !dbg !854
  br i1 %_17, label %bb28, label %bb29, !dbg !854

bb26:                                             ; preds = %bb25
  store i32 6, ptr %_0, align 4, !dbg !855
  br label %bb36, !dbg !856

bb29:                                             ; preds = %bb27
  %_18 = icmp uge i64 %v, 1000, !dbg !857
  br i1 %_18, label %bb30, label %bb31, !dbg !857

bb28:                                             ; preds = %bb27
  store i32 5, ptr %_0, align 4, !dbg !858
  br label %bb36, !dbg !859

bb31:                                             ; preds = %bb29
  %_19 = icmp uge i64 %v, 100, !dbg !860
  br i1 %_19, label %bb32, label %bb33, !dbg !860

bb30:                                             ; preds = %bb29
  store i32 4, ptr %_0, align 4, !dbg !861
  br label %bb36, !dbg !862

bb33:                                             ; preds = %bb31
  %_20 = icmp uge i64 %v, 10, !dbg !863
  br i1 %_20, label %bb34, label %bb35, !dbg !863

bb32:                                             ; preds = %bb31
  store i32 3, ptr %_0, align 4, !dbg !864
  br label %bb36, !dbg !865

bb35:                                             ; preds = %bb33
  store i32 1, ptr %_0, align 4, !dbg !866
  br label %bb36, !dbg !867

bb34:                                             ; preds = %bb33
  store i32 2, ptr %_0, align 4, !dbg !868
  br label %bb36, !dbg !867

bb36:                                             ; preds = %bb4, %bb6, %bb8, %bb10, %bb12, %bb14, %bb16, %bb18, %bb20, %bb22, %bb24, %bb26, %bb28, %bb30, %bb32, %bb34, %bb35
  %0 = load i32, ptr %_0, align 4, !dbg !869, !noundef !12
  ret i32 %0, !dbg !869
}

; ryu::d2s::d2d
; Function Attrs: uwtable
define internal { i64, i32 } @_ZN3ryu3d2s3d2d17heeaf98c7cc011aeaE(i64 %ieee_mantissa, i32 %ieee_exponent) unnamed_addr #4 !dbg !870 {
start:
  %rhs.dbg.spill.i103 = alloca i32, align 4
  %self.dbg.spill.i104 = alloca i32, align 4
  %rhs.dbg.spill.i100 = alloca i32, align 4
  %self.dbg.spill.i101 = alloca i32, align 4
  %rhs.dbg.spill.i97 = alloca i32, align 4
  %self.dbg.spill.i98 = alloca i32, align 4
  %rhs.dbg.spill.i94 = alloca i32, align 4
  %self.dbg.spill.i95 = alloca i32, align 4
  %rhs.dbg.spill.i91 = alloca i32, align 4
  %self.dbg.spill.i92 = alloca i32, align 4
  %rhs.dbg.spill.i88 = alloca i32, align 4
  %self.dbg.spill.i89 = alloca i32, align 4
  %rhs.dbg.spill.i85 = alloca i32, align 4
  %self.dbg.spill.i86 = alloca i32, align 4
  %rhs.dbg.spill.i82 = alloca i32, align 4
  %self.dbg.spill.i83 = alloca i32, align 4
  %rhs.dbg.spill.i79 = alloca i32, align 4
  %self.dbg.spill.i80 = alloca i32, align 4
  %rhs.dbg.spill.i76 = alloca i32, align 4
  %self.dbg.spill.i77 = alloca i32, align 4
  %rhs.dbg.spill.i73 = alloca i32, align 4
  %self.dbg.spill.i74 = alloca i32, align 4
  %rhs.dbg.spill.i70 = alloca i32, align 4
  %self.dbg.spill.i71 = alloca i32, align 4
  %rhs.dbg.spill.i67 = alloca i32, align 4
  %self.dbg.spill.i68 = alloca i32, align 4
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i65 = alloca i32, align 4
  %_0.i64 = alloca i64, align 8
  %_0.i = alloca i64, align 8
  %slot.dbg.spill.i62 = alloca i64, align 8
  %self.dbg.spill.i63 = alloca i64, align 8
  %slot.dbg.spill.i60 = alloca i64, align 8
  %self.dbg.spill.i61 = alloca i64, align 8
  %slot.dbg.spill.i58 = alloca i64, align 8
  %self.dbg.spill.i59 = alloca i64, align 8
  %slot.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i57 = alloca i64, align 8
  %self.dbg.spill.i56 = alloca ptr, align 8
  %self.dbg.spill.i55 = alloca ptr, align 8
  %self.dbg.spill.i54 = alloca ptr, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %exp.dbg.spill = alloca i32, align 4
  %vr_mod10.dbg.spill50 = alloca i32, align 4
  %vr_div10.dbg.spill48 = alloca i64, align 8
  %vp_div10.dbg.spill46 = alloca i64, align 8
  %vm_mod10.dbg.spill44 = alloca i32, align 4
  %vm_div10.dbg.spill42 = alloca i64, align 8
  %vr_mod10.dbg.spill39 = alloca i32, align 4
  %vr_div10.dbg.spill37 = alloca i64, align 8
  %vm_mod10.dbg.spill = alloca i32, align 4
  %vm_div10.dbg.spill35 = alloca i64, align 8
  %vp_div10.dbg.spill33 = alloca i64, align 8
  %vr_mod10.dbg.spill = alloca i32, align 4
  %vr_div10.dbg.spill = alloca i64, align 8
  %vm_div10.dbg.spill = alloca i64, align 8
  %vp_div10.dbg.spill = alloca i64, align 8
  %vr_mod100.dbg.spill = alloca i32, align 4
  %vr_div100.dbg.spill = alloca i64, align 8
  %vm_div100.dbg.spill = alloca i64, align 8
  %vp_div100.dbg.spill = alloca i64, align 8
  %mv_mod5.dbg.spill = alloca i32, align 4
  %i.dbg.spill24 = alloca i32, align 4
  %k.dbg.spill20 = alloca i32, align 4
  %q.dbg.spill17 = alloca i32, align 4
  %j.dbg.spill = alloca i32, align 4
  %k.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %q.dbg.spill = alloca i32, align 4
  %mm_shift.dbg.spill = alloca i32, align 4
  %mv.dbg.spill = alloca i64, align 8
  %even.dbg.spill = alloca i8, align 1
  %m2.dbg.spill = alloca i64, align 8
  %e2.dbg.spill = alloca i32, align 4
  %ieee_exponent.dbg.spill = alloca i32, align 4
  %ieee_mantissa.dbg.spill = alloca i64, align 8
  %_232 = alloca i8, align 1
  %round_up = alloca i8, align 1
  %_196 = alloca i8, align 1
  %output = alloca i64, align 8
  %last_removed_digit = alloca i8, align 1
  %removed = alloca i32, align 4
  %vr_is_trailing_zeros = alloca i8, align 1
  %vm_is_trailing_zeros = alloca i8, align 1
  %e10 = alloca i32, align 4
  %vm_uninit = alloca i64, align 8
  %vp_uninit = alloca i64, align 8
  %vm = alloca i64, align 8
  %vp = alloca i64, align 8
  %vr = alloca i64, align 8
  %_29 = alloca i8, align 1
  %_5 = alloca { i32, [1 x i32], i64 }, align 8
  %_0 = alloca %"d2s::FloatingDecimal64", align 8
  store i64 %ieee_mantissa, ptr %ieee_mantissa.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %ieee_mantissa.dbg.spill, metadata !878, metadata !DIExpression()), !dbg !979
  store i32 %ieee_exponent, ptr %ieee_exponent.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ieee_exponent.dbg.spill, metadata !879, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata ptr %vr, metadata !891, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata ptr %vp, metadata !893, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.declare(metadata ptr %vm, metadata !895, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata ptr %vp_uninit, metadata !897, metadata !DIExpression()), !dbg !984
  call void @llvm.dbg.declare(metadata ptr %vm_uninit, metadata !909, metadata !DIExpression()), !dbg !985
  call void @llvm.dbg.declare(metadata ptr %e10, metadata !911, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata ptr %vm_is_trailing_zeros, metadata !913, metadata !DIExpression()), !dbg !987
  call void @llvm.dbg.declare(metadata ptr %vr_is_trailing_zeros, metadata !915, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata ptr %removed, metadata !933, metadata !DIExpression()), !dbg !989
  call void @llvm.dbg.declare(metadata ptr %last_removed_digit, metadata !935, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata ptr %output, metadata !937, metadata !DIExpression()), !dbg !991
  call void @llvm.dbg.declare(metadata ptr %round_up, metadata !959, metadata !DIExpression()), !dbg !992
  %0 = icmp eq i32 %ieee_exponent, 0, !dbg !993
  br i1 %0, label %bb1, label %bb5, !dbg !993

bb1:                                              ; preds = %start
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1, i32 1023), !dbg !994
  %_9.0 = extractvalue { i32, i1 } %1, 0, !dbg !994
  %_9.1 = extractvalue { i32, i1 } %1, 1, !dbg !994
  %2 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !994
  br i1 %2, label %panic, label %bb2, !dbg !994

bb5:                                              ; preds = %start
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %ieee_exponent, i32 1023), !dbg !995
  %_17.0 = extractvalue { i32, i1 } %3, 0, !dbg !995
  %_17.1 = extractvalue { i32, i1 } %3, 1, !dbg !995
  %4 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !995
  br i1 %4, label %panic3, label %bb6, !dbg !995

bb2:                                              ; preds = %bb1
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_9.0, i32 52), !dbg !994
  %_11.0 = extractvalue { i32, i1 } %5, 0, !dbg !994
  %_11.1 = extractvalue { i32, i1 } %5, 1, !dbg !994
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !994
  br i1 %6, label %panic1, label %bb3, !dbg !994

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_c958ab1fb13df8a34edd67a078cbf4bc) #13, !dbg !994
  unreachable, !dbg !994

bb3:                                              ; preds = %bb2
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_11.0, i32 2), !dbg !994
  %_12.0 = extractvalue { i32, i1 } %7, 0, !dbg !994
  %_12.1 = extractvalue { i32, i1 } %7, 1, !dbg !994
  %8 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !994
  br i1 %8, label %panic2, label %bb4, !dbg !994

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_c958ab1fb13df8a34edd67a078cbf4bc) #13, !dbg !994
  unreachable, !dbg !994

bb4:                                              ; preds = %bb3
  store i32 %_12.0, ptr %_5, align 8, !dbg !996
  %9 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !996
  store i64 %ieee_mantissa, ptr %9, align 8, !dbg !996
  br label %bb10, !dbg !997

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_c958ab1fb13df8a34edd67a078cbf4bc) #13, !dbg !994
  unreachable, !dbg !994

bb10:                                             ; preds = %bb8, %bb4
  %e2 = load i32, ptr %_5, align 8, !dbg !998, !noundef !12
  store i32 %e2, ptr %e2.dbg.spill, align 4, !dbg !998
  call void @llvm.dbg.declare(metadata ptr %e2.dbg.spill, metadata !880, metadata !DIExpression()), !dbg !999
  %10 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !1000
  %m2 = load i64, ptr %10, align 8, !dbg !1000, !noundef !12
  store i64 %m2, ptr %m2.dbg.spill, align 8, !dbg !1000
  call void @llvm.dbg.declare(metadata ptr %m2.dbg.spill, metadata !882, metadata !DIExpression()), !dbg !1001
  %_25 = and i64 %m2, 1, !dbg !1002
  %even = icmp eq i64 %_25, 0, !dbg !1002
  %11 = zext i1 %even to i8, !dbg !1002
  store i8 %11, ptr %even.dbg.spill, align 1, !dbg !1002
  call void @llvm.dbg.declare(metadata ptr %even.dbg.spill, metadata !883, metadata !DIExpression()), !dbg !1003
  call void @llvm.dbg.declare(metadata ptr %even.dbg.spill, metadata !885, metadata !DIExpression()), !dbg !1004
  %12 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %m2), !dbg !1005
  %_27.0 = extractvalue { i64, i1 } %12, 0, !dbg !1005
  %_27.1 = extractvalue { i64, i1 } %12, 1, !dbg !1005
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !1005
  br i1 %13, label %panic6, label %bb11, !dbg !1005

bb6:                                              ; preds = %bb5
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_17.0, i32 52), !dbg !995
  %_19.0 = extractvalue { i32, i1 } %14, 0, !dbg !995
  %_19.1 = extractvalue { i32, i1 } %14, 1, !dbg !995
  %15 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !995
  br i1 %15, label %panic4, label %bb7, !dbg !995

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_3178019cda411e3123238262a7ce337c) #13, !dbg !995
  unreachable, !dbg !995

bb7:                                              ; preds = %bb6
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_19.0, i32 2), !dbg !995
  %_20.0 = extractvalue { i32, i1 } %16, 0, !dbg !995
  %_20.1 = extractvalue { i32, i1 } %16, 1, !dbg !995
  %17 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !995
  br i1 %17, label %panic5, label %bb8, !dbg !995

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_3178019cda411e3123238262a7ce337c) #13, !dbg !995
  unreachable, !dbg !995

bb8:                                              ; preds = %bb7
  %_21 = or i64 4503599627370496, %ieee_mantissa, !dbg !1006
  store i32 %_20.0, ptr %_5, align 8, !dbg !1007
  %18 = getelementptr inbounds i8, ptr %_5, i64 8, !dbg !1007
  store i64 %_21, ptr %18, align 8, !dbg !1007
  br label %bb10, !dbg !997

panic5:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_3178019cda411e3123238262a7ce337c) #13, !dbg !995
  unreachable, !dbg !995

bb11:                                             ; preds = %bb10
  store i64 %_27.0, ptr %mv.dbg.spill, align 8, !dbg !1005
  call void @llvm.dbg.declare(metadata ptr %mv.dbg.spill, metadata !887, metadata !DIExpression()), !dbg !1008
  %19 = icmp eq i64 %ieee_mantissa, 0, !dbg !1009
  br i1 %19, label %bb13, label %bb12, !dbg !1009

panic6:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_b29d329cb0ca7b4267422096edb49ec9) #13, !dbg !1005
  unreachable, !dbg !1005

bb13:                                             ; preds = %bb11
  %20 = icmp ule i32 %ieee_exponent, 1, !dbg !1010
  %21 = zext i1 %20 to i8, !dbg !1010
  store i8 %21, ptr %_29, align 1, !dbg !1010
  br label %bb14, !dbg !1011

bb12:                                             ; preds = %bb11
  store i8 1, ptr %_29, align 1, !dbg !1011
  br label %bb14, !dbg !1011

bb14:                                             ; preds = %bb12, %bb13
  %22 = load i8, ptr %_29, align 1, !dbg !1011, !range !197, !noundef !12
  %23 = trunc i8 %22 to i1, !dbg !1011
  %mm_shift = zext i1 %23 to i32, !dbg !1011
  store i32 %mm_shift, ptr %mm_shift.dbg.spill, align 4, !dbg !1011
  call void @llvm.dbg.declare(metadata ptr %mm_shift.dbg.spill, metadata !889, metadata !DIExpression()), !dbg !1012
  %24 = load i64, ptr %_0.i64, align 8, !dbg !1013
  store i64 %24, ptr %vp_uninit, align 8, !dbg !1020
  %25 = load i64, ptr %_0.i, align 8, !dbg !1021
  store i64 %25, ptr %vm_uninit, align 8, !dbg !1023
  store i8 0, ptr %vm_is_trailing_zeros, align 1, !dbg !1024
  store i8 0, ptr %vr_is_trailing_zeros, align 1, !dbg !1025
  %_38 = icmp sge i32 %e2, 0, !dbg !1026
  br i1 %_38, label %bb17, label %bb50, !dbg !1026

bb50:                                             ; preds = %bb14
  %_99 = icmp eq i32 %e2, -2147483648, !dbg !1027
  %26 = call i1 @llvm.expect.i1(i1 %_99, i1 false), !dbg !1027
  br i1 %26, label %panic7, label %bb51, !dbg !1027

bb17:                                             ; preds = %bb14
; call ryu::common::log10_pow2
  %_40 = call i32 @_ZN3ryu6common10log10_pow217h88a5810e0666daf6E(i32 %e2), !dbg !1028
  %_42 = icmp sgt i32 %e2, 3, !dbg !1029
  %_41 = zext i1 %_42 to i32, !dbg !1029
  %_43.0 = sub i32 %_40, %_41, !dbg !1028
  %_43.1 = icmp ult i32 %_40, %_41, !dbg !1028
  %27 = call i1 @llvm.expect.i1(i1 %_43.1, i1 false), !dbg !1028
  br i1 %27, label %panic16, label %bb19, !dbg !1028

bb51:                                             ; preds = %bb50
  %_98 = sub i32 0, %e2, !dbg !1027
; call ryu::common::log10_pow5
  %_97 = call i32 @_ZN3ryu6common10log10_pow517h9cfc9ad07c9e8fa1E(i32 %_98), !dbg !1030
  %_103 = icmp eq i32 %e2, -2147483648, !dbg !1031
  %28 = call i1 @llvm.expect.i1(i1 %_103, i1 false), !dbg !1031
  br i1 %28, label %panic8, label %bb53, !dbg !1031

panic7:                                           ; preds = %bb50
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_69d42b628f32869b61341676328895f9) #13, !dbg !1027
  unreachable, !dbg !1027

bb53:                                             ; preds = %bb51
  %_102 = sub i32 0, %e2, !dbg !1031
  %_101 = icmp sgt i32 %_102, 1, !dbg !1032
  %_100 = zext i1 %_101 to i32, !dbg !1032
  %_104.0 = sub i32 %_97, %_100, !dbg !1030
  %_104.1 = icmp ult i32 %_97, %_100, !dbg !1030
  %29 = call i1 @llvm.expect.i1(i1 %_104.1, i1 false), !dbg !1030
  br i1 %29, label %panic9, label %bb54, !dbg !1030

panic8:                                           ; preds = %bb51
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_083ea41cf4c291a2b0dc0d2c5049452a) #13, !dbg !1031
  unreachable, !dbg !1031

bb54:                                             ; preds = %bb53
  store i32 %_104.0, ptr %q.dbg.spill, align 4, !dbg !1030
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill, metadata !925, metadata !DIExpression()), !dbg !1033
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_104.0, i32 %e2), !dbg !1034
  %_106.0 = extractvalue { i32, i1 } %30, 0, !dbg !1034
  %_106.1 = extractvalue { i32, i1 } %30, 1, !dbg !1034
  %31 = call i1 @llvm.expect.i1(i1 %_106.1, i1 false), !dbg !1034
  br i1 %31, label %panic10, label %bb55, !dbg !1034

panic9:                                           ; preds = %bb53
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_5187712f5b3ff8f853cabb2faf80dc12) #13, !dbg !1030
  unreachable, !dbg !1030

bb55:                                             ; preds = %bb54
  store i32 %_106.0, ptr %e10, align 4, !dbg !1035
  %_109 = icmp eq i32 %e2, -2147483648, !dbg !1036
  %32 = call i1 @llvm.expect.i1(i1 %_109, i1 false), !dbg !1036
  br i1 %32, label %panic11, label %bb56, !dbg !1036

panic10:                                          ; preds = %bb54
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_34d3f598502fd2be41e5b7dacb0a03bf) #13, !dbg !1034
  unreachable, !dbg !1034

bb56:                                             ; preds = %bb55
  %_108 = sub i32 0, %e2, !dbg !1036
  %33 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_108, i32 %_104.0), !dbg !1036
  %_111.0 = extractvalue { i32, i1 } %33, 0, !dbg !1036
  %_111.1 = extractvalue { i32, i1 } %33, 1, !dbg !1036
  %34 = call i1 @llvm.expect.i1(i1 %_111.1, i1 false), !dbg !1036
  br i1 %34, label %panic12, label %bb57, !dbg !1036

panic11:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_4ca9dc0604c8e5958a3b5864524d17c7) #13, !dbg !1036
  unreachable, !dbg !1036

bb57:                                             ; preds = %bb56
  store i32 %_111.0, ptr %i.dbg.spill, align 4, !dbg !1036
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !927, metadata !DIExpression()), !dbg !1037
; call ryu::common::pow5bits
  %_113 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %_111.0), !dbg !1038
  %35 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_113, i32 125), !dbg !1038
  %_114.0 = extractvalue { i32, i1 } %35, 0, !dbg !1038
  %_114.1 = extractvalue { i32, i1 } %35, 1, !dbg !1038
  %36 = call i1 @llvm.expect.i1(i1 %_114.1, i1 false), !dbg !1038
  br i1 %36, label %panic13, label %bb59, !dbg !1038

panic12:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_4ca9dc0604c8e5958a3b5864524d17c7) #13, !dbg !1036
  unreachable, !dbg !1036

bb59:                                             ; preds = %bb57
  store i32 %_114.0, ptr %k.dbg.spill, align 4, !dbg !1038
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill, metadata !929, metadata !DIExpression()), !dbg !1039
  %37 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_104.0, i32 %_114.0), !dbg !1040
  %_117.0 = extractvalue { i32, i1 } %37, 0, !dbg !1040
  %_117.1 = extractvalue { i32, i1 } %37, 1, !dbg !1040
  %38 = call i1 @llvm.expect.i1(i1 %_117.1, i1 false), !dbg !1040
  br i1 %38, label %panic14, label %bb60, !dbg !1040

panic13:                                          ; preds = %bb57
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_e8b80d4dc6f2691ee3981e2d73558720) #13, !dbg !1038
  unreachable, !dbg !1038

bb60:                                             ; preds = %bb59
  store i32 %_117.0, ptr %j.dbg.spill, align 4, !dbg !1040
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !931, metadata !DIExpression()), !dbg !1041
  br label %bb61, !dbg !1042

panic14:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_597b4cd4db488d3a3a7d9c91f13839ce) #13, !dbg !1040
  unreachable, !dbg !1040

bb61:                                             ; preds = %bb60
  %_120 = icmp slt i32 %_111.0, 326, !dbg !1043
  br i1 %_120, label %bb63, label %bb62, !dbg !1043

bb62:                                             ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_0ab891114463b208784657cfbed8735d, i64 52, ptr align 8 @alloc_a5f7ab81510302d314888c78871b6d1c) #13, !dbg !1042
  unreachable, !dbg !1042

bb63:                                             ; preds = %bb61
  %_129 = sext i32 %_111.0 to i64, !dbg !1044
; call core::slice::<impl [T]>::get_unchecked
  %_126 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E"(ptr align 8 @_ZN3ryu14d2s_full_table17DOUBLE_POW5_SPLIT17hec9cc8677c8b52d4E, i64 326, i64 %_129), !dbg !1045
  store ptr %vp_uninit, ptr %self.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i56, metadata !1046, metadata !DIExpression()), !dbg !1053
  store ptr %vm_uninit, ptr %self.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i55, metadata !1046, metadata !DIExpression()), !dbg !1055
; call ryu::d2s_intrinsics::mul_shift_all_64
  %_118 = call i64 @_ZN3ryu14d2s_intrinsics16mul_shift_all_6417h635e3362a7e5ddc0E(i64 %m2, ptr align 8 %_126, i32 %_117.0, ptr %vp_uninit, ptr %vm_uninit, i32 %mm_shift), !dbg !1057
  store i64 %_118, ptr %vr, align 8, !dbg !1058
  %_136 = load i64, ptr %vp_uninit, align 8, !dbg !1059
  store i64 %_136, ptr %self.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i63, metadata !1060, metadata !DIExpression()), !dbg !1074
  store i64 %_136, ptr %slot.dbg.spill.i62, align 8, !dbg !1076
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i62, metadata !1077, metadata !DIExpression()), !dbg !1085
  store i64 %_136, ptr %vp, align 8, !dbg !1087
  %_138 = load i64, ptr %vm_uninit, align 8, !dbg !1088
  store i64 %_138, ptr %self.dbg.spill.i61, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i61, metadata !1060, metadata !DIExpression()), !dbg !1089
  store i64 %_138, ptr %slot.dbg.spill.i60, align 8, !dbg !1091
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i60, metadata !1077, metadata !DIExpression()), !dbg !1092
  store i64 %_138, ptr %vm, align 8, !dbg !1094
  %_139 = icmp ule i32 %_104.0, 1, !dbg !1095
  br i1 %_139, label %bb70, label %bb74, !dbg !1095

bb74:                                             ; preds = %bb63
  %_141 = icmp ult i32 %_104.0, 63, !dbg !1096
  br i1 %_141, label %bb75, label %bb77, !dbg !1096

bb70:                                             ; preds = %bb63
  store i8 1, ptr %vr_is_trailing_zeros, align 1, !dbg !1097
  br i1 %even, label %bb71, label %bb72, !dbg !1098

bb77:                                             ; preds = %bb44, %bb49, %bb39, %bb28, %bb71, %bb73, %bb75, %bb74
  store i32 0, ptr %removed, align 4, !dbg !1099
  store i8 0, ptr %last_removed_digit, align 1, !dbg !1100
  %39 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1101, !range !197, !noundef !12
  %_146 = trunc i8 %39 to i1, !dbg !1101
  br i1 %_146, label %bb79.preheader, label %bb78, !dbg !1101

bb75:                                             ; preds = %bb74
; call ryu::d2s_intrinsics::multiple_of_power_of_2
  %_142 = call zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_217h7d5f75858e5fd6fcE(i64 %_27.0, i32 %_104.0), !dbg !1102
  %40 = zext i1 %_142 to i8, !dbg !1103
  store i8 %40, ptr %vr_is_trailing_zeros, align 1, !dbg !1103
  br label %bb77, !dbg !1104

bb72:                                             ; preds = %bb70
  %41 = load i64, ptr %vp, align 8, !dbg !1105, !noundef !12
  %_140.0 = sub i64 %41, 1, !dbg !1105
  %_140.1 = icmp ult i64 %41, 1, !dbg !1105
  %42 = call i1 @llvm.expect.i1(i1 %_140.1, i1 false), !dbg !1105
  br i1 %42, label %panic15, label %bb73, !dbg !1105

bb71:                                             ; preds = %bb70
  %43 = icmp eq i32 %mm_shift, 1, !dbg !1106
  %44 = zext i1 %43 to i8, !dbg !1106
  store i8 %44, ptr %vm_is_trailing_zeros, align 1, !dbg !1106
  br label %bb77, !dbg !1107

bb73:                                             ; preds = %bb72
  store i64 %_140.0, ptr %vp, align 8, !dbg !1105
  br label %bb77, !dbg !1107

panic15:                                          ; preds = %bb72
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_c151d7536f53201fd40c94ad2cfba4cb) #13, !dbg !1105
  unreachable, !dbg !1105

bb19:                                             ; preds = %bb17
  store i32 %_43.0, ptr %q.dbg.spill17, align 4, !dbg !1028
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill17, metadata !917, metadata !DIExpression()), !dbg !1108
  store i32 %_43.0, ptr %e10, align 4, !dbg !1109
; call ryu::common::pow5bits
  %_46 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %_43.0), !dbg !1110
  %45 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 125, i32 %_46), !dbg !1111
  %_48.0 = extractvalue { i32, i1 } %45, 0, !dbg !1111
  %_48.1 = extractvalue { i32, i1 } %45, 1, !dbg !1111
  %46 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false), !dbg !1111
  br i1 %46, label %panic18, label %bb21, !dbg !1111

panic16:                                          ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_565b42396f267edd48875441605954ef) #13, !dbg !1028
  unreachable, !dbg !1028

bb21:                                             ; preds = %bb19
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_48.0, i32 1), !dbg !1111
  %_49.0 = extractvalue { i32, i1 } %47, 0, !dbg !1111
  %_49.1 = extractvalue { i32, i1 } %47, 1, !dbg !1111
  %48 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !1111
  br i1 %48, label %panic19, label %bb22, !dbg !1111

panic18:                                          ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_61b47020e5bb3288210f40eb400526dc) #13, !dbg !1111
  unreachable, !dbg !1111

bb22:                                             ; preds = %bb21
  store i32 %_49.0, ptr %k.dbg.spill20, align 4, !dbg !1111
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill20, metadata !919, metadata !DIExpression()), !dbg !1112
  %_53 = icmp eq i32 %e2, -2147483648, !dbg !1113
  %49 = call i1 @llvm.expect.i1(i1 %_53, i1 false), !dbg !1113
  br i1 %49, label %panic21, label %bb23, !dbg !1113

panic19:                                          ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_61b47020e5bb3288210f40eb400526dc) #13, !dbg !1111
  unreachable, !dbg !1111

bb23:                                             ; preds = %bb22
  %_52 = sub i32 0, %e2, !dbg !1113
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_52, i32 %_43.0), !dbg !1113
  %_55.0 = extractvalue { i32, i1 } %50, 0, !dbg !1113
  %_55.1 = extractvalue { i32, i1 } %50, 1, !dbg !1113
  %51 = call i1 @llvm.expect.i1(i1 %_55.1, i1 false), !dbg !1113
  br i1 %51, label %panic22, label %bb24, !dbg !1113

panic21:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_a584472f0fcb58c60b05a5626a9c5c30) #13, !dbg !1113
  unreachable, !dbg !1113

bb24:                                             ; preds = %bb23
  %52 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_55.0, i32 %_49.0), !dbg !1113
  %_56.0 = extractvalue { i32, i1 } %52, 0, !dbg !1113
  %_56.1 = extractvalue { i32, i1 } %52, 1, !dbg !1113
  %53 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !1113
  br i1 %53, label %panic23, label %bb25, !dbg !1113

panic22:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_a584472f0fcb58c60b05a5626a9c5c30) #13, !dbg !1113
  unreachable, !dbg !1113

bb25:                                             ; preds = %bb24
  store i32 %_56.0, ptr %i.dbg.spill24, align 4, !dbg !1113
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill24, metadata !921, metadata !DIExpression()), !dbg !1114
  br label %bb26, !dbg !1115

panic23:                                          ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_a584472f0fcb58c60b05a5626a9c5c30) #13, !dbg !1113
  unreachable, !dbg !1113

bb26:                                             ; preds = %bb25
  %_59 = icmp ult i32 %_43.0, 342, !dbg !1116
  br i1 %_59, label %bb28, label %bb27, !dbg !1116

bb27:                                             ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_699bb199b5be370ba68ef9e366353314, i64 56, ptr align 8 @alloc_22e1dabb359ff4830504c1f852e06170) #13, !dbg !1115
  unreachable, !dbg !1115

bb28:                                             ; preds = %bb26
  %_68 = zext i32 %_43.0 to i64, !dbg !1117
; call core::slice::<impl [T]>::get_unchecked
  %_65 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E"(ptr align 8 @_ZN3ryu14d2s_full_table21DOUBLE_POW5_INV_SPLIT17h2dcda7d89d272cddE, i64 342, i64 %_68), !dbg !1118
  store ptr %vp_uninit, ptr %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i54, metadata !1046, metadata !DIExpression()), !dbg !1119
  store ptr %vm_uninit, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1046, metadata !DIExpression()), !dbg !1121
; call ryu::d2s_intrinsics::mul_shift_all_64
  %_57 = call i64 @_ZN3ryu14d2s_intrinsics16mul_shift_all_6417h635e3362a7e5ddc0E(i64 %m2, ptr align 8 %_65, i32 %_56.0, ptr %vp_uninit, ptr %vm_uninit, i32 %mm_shift), !dbg !1123
  store i64 %_57, ptr %vr, align 8, !dbg !1124
  %_75 = load i64, ptr %vp_uninit, align 8, !dbg !1125
  store i64 %_75, ptr %self.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i59, metadata !1060, metadata !DIExpression()), !dbg !1126
  store i64 %_75, ptr %slot.dbg.spill.i58, align 8, !dbg !1128
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i58, metadata !1077, metadata !DIExpression()), !dbg !1129
  store i64 %_75, ptr %vp, align 8, !dbg !1131
  %_77 = load i64, ptr %vm_uninit, align 8, !dbg !1132
  store i64 %_77, ptr %self.dbg.spill.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i57, metadata !1060, metadata !DIExpression()), !dbg !1133
  store i64 %_77, ptr %slot.dbg.spill.i, align 8, !dbg !1135
  call void @llvm.dbg.declare(metadata ptr %slot.dbg.spill.i, metadata !1077, metadata !DIExpression()), !dbg !1136
  store i64 %_77, ptr %vm, align 8, !dbg !1138
  %_78 = icmp ule i32 %_43.0, 21, !dbg !1139
  br i1 %_78, label %bb35, label %bb77, !dbg !1139

bb35:                                             ; preds = %bb28
  %_80 = trunc i64 %_27.0 to i32, !dbg !1140
; call ryu::d2s_intrinsics::div5
  %_83 = call i64 @_ZN3ryu14d2s_intrinsics4div517h179931953f2ccfbbE(i64 %_27.0), !dbg !1141
  %_82 = trunc i64 %_83 to i32, !dbg !1141
  store i32 5, ptr %self.dbg.spill.i83, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i83, metadata !1142, metadata !DIExpression()), !dbg !1149
  store i32 %_82, ptr %rhs.dbg.spill.i82, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i82, metadata !1148, metadata !DIExpression()), !dbg !1151
  %_0.i84 = mul i32 5, %_82, !dbg !1152
  store i32 %_80, ptr %self.dbg.spill.i104, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i104, metadata !1153, metadata !DIExpression()), !dbg !1157
  store i32 %_0.i84, ptr %rhs.dbg.spill.i103, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i103, metadata !1156, metadata !DIExpression()), !dbg !1159
  %_0.i105 = sub i32 %_80, %_0.i84, !dbg !1160
  store i32 %_0.i105, ptr %mv_mod5.dbg.spill, align 4, !dbg !1140
  call void @llvm.dbg.declare(metadata ptr %mv_mod5.dbg.spill, metadata !923, metadata !DIExpression()), !dbg !1161
  %54 = icmp eq i32 %_0.i105, 0, !dbg !1162
  br i1 %54, label %bb39, label %bb41, !dbg !1162

bb39:                                             ; preds = %bb35
; call ryu::d2s_intrinsics::multiple_of_power_of_5
  %_84 = call zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_517h9cfaf5847184731bE(i64 %_27.0, i32 %_43.0), !dbg !1163
  %55 = zext i1 %_84 to i8, !dbg !1164
  store i8 %55, ptr %vr_is_trailing_zeros, align 1, !dbg !1164
  br label %bb77, !dbg !1165

bb41:                                             ; preds = %bb35
  br i1 %even, label %bb42, label %bb46, !dbg !1166

bb46:                                             ; preds = %bb41
  %56 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_27.0, i64 2), !dbg !1167
  %_94.0 = extractvalue { i64, i1 } %56, 0, !dbg !1167
  %_94.1 = extractvalue { i64, i1 } %56, 1, !dbg !1167
  %57 = call i1 @llvm.expect.i1(i1 %_94.1, i1 false), !dbg !1167
  br i1 %57, label %panic25, label %bb47, !dbg !1167

bb42:                                             ; preds = %bb41
  %_88.0 = sub i64 %_27.0, 1, !dbg !1168
  %_88.1 = icmp ult i64 %_27.0, 1, !dbg !1168
  %58 = call i1 @llvm.expect.i1(i1 %_88.1, i1 false), !dbg !1168
  br i1 %58, label %panic27, label %bb43, !dbg !1168

bb47:                                             ; preds = %bb46
; call ryu::d2s_intrinsics::multiple_of_power_of_5
  %_92 = call zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_517h9cfaf5847184731bE(i64 %_94.0, i32 %_43.0), !dbg !1169
  %_91 = zext i1 %_92 to i64, !dbg !1169
  %59 = load i64, ptr %vp, align 8, !dbg !1170, !noundef !12
  %_95.0 = sub i64 %59, %_91, !dbg !1170
  %_95.1 = icmp ult i64 %59, %_91, !dbg !1170
  %60 = call i1 @llvm.expect.i1(i1 %_95.1, i1 false), !dbg !1170
  br i1 %60, label %panic26, label %bb49, !dbg !1170

panic25:                                          ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e88d65bdf4a244b951838ca7d1e4785d) #13, !dbg !1167
  unreachable, !dbg !1167

bb49:                                             ; preds = %bb47
  store i64 %_95.0, ptr %vp, align 8, !dbg !1170
  br label %bb77, !dbg !1171

panic26:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_443919724f8de13e45984c76b435765c) #13, !dbg !1170
  unreachable, !dbg !1170

bb43:                                             ; preds = %bb42
  %_89 = zext i32 %mm_shift to i64, !dbg !1172
  %_90.0 = sub i64 %_88.0, %_89, !dbg !1168
  %_90.1 = icmp ult i64 %_88.0, %_89, !dbg !1168
  %61 = call i1 @llvm.expect.i1(i1 %_90.1, i1 false), !dbg !1168
  br i1 %61, label %panic28, label %bb44, !dbg !1168

panic27:                                          ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_8f988b16c54721edb39dcdb63f026a57) #13, !dbg !1168
  unreachable, !dbg !1168

bb44:                                             ; preds = %bb43
; call ryu::d2s_intrinsics::multiple_of_power_of_5
  %_85 = call zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_517h9cfaf5847184731bE(i64 %_90.0, i32 %_43.0), !dbg !1173
  %62 = zext i1 %_85 to i8, !dbg !1174
  store i8 %62, ptr %vm_is_trailing_zeros, align 1, !dbg !1174
  br label %bb77, !dbg !1171

panic28:                                          ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_8f988b16c54721edb39dcdb63f026a57) #13, !dbg !1168
  unreachable, !dbg !1168

bb78:                                             ; preds = %bb77
  %63 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1175, !range !197, !noundef !12
  %_147 = trunc i8 %63 to i1, !dbg !1175
  br i1 %_147, label %bb79.preheader, label %bb112, !dbg !1175

bb79.preheader:                                   ; preds = %bb77, %bb78
  br label %bb79, !dbg !1176

bb79:                                             ; preds = %bb79.preheader, %bb89
  %_149 = load i64, ptr %vp, align 8, !dbg !1177, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vp_div1032 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_149), !dbg !1178
  store i64 %vp_div1032, ptr %vp_div10.dbg.spill33, align 8, !dbg !1178
  call void @llvm.dbg.declare(metadata ptr %vp_div10.dbg.spill33, metadata !939, metadata !DIExpression()), !dbg !1179
  %_151 = load i64, ptr %vm, align 8, !dbg !1180, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vm_div1034 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_151), !dbg !1181
  store i64 %vm_div1034, ptr %vm_div10.dbg.spill35, align 8, !dbg !1181
  call void @llvm.dbg.declare(metadata ptr %vm_div10.dbg.spill35, metadata !941, metadata !DIExpression()), !dbg !1182
  %_152 = icmp ule i64 %vp_div1032, %vm_div1034, !dbg !1176
  br i1 %_152, label %bb82, label %bb83, !dbg !1176

bb112:                                            ; preds = %bb78
  store i8 0, ptr %round_up, align 1, !dbg !1183
  %_205 = load i64, ptr %vp, align 8, !dbg !1184, !noundef !12
; call ryu::d2s_intrinsics::div100
  %vp_div100 = call i64 @_ZN3ryu14d2s_intrinsics6div10017h1a346903025ab7a7E(i64 %_205), !dbg !1185
  store i64 %vp_div100, ptr %vp_div100.dbg.spill, align 8, !dbg !1185
  call void @llvm.dbg.declare(metadata ptr %vp_div100.dbg.spill, metadata !961, metadata !DIExpression()), !dbg !1186
  %_207 = load i64, ptr %vm, align 8, !dbg !1187, !noundef !12
; call ryu::d2s_intrinsics::div100
  %vm_div100 = call i64 @_ZN3ryu14d2s_intrinsics6div10017h1a346903025ab7a7E(i64 %_207), !dbg !1188
  store i64 %vm_div100, ptr %vm_div100.dbg.spill, align 8, !dbg !1188
  call void @llvm.dbg.declare(metadata ptr %vm_div100.dbg.spill, metadata !963, metadata !DIExpression()), !dbg !1189
  %_208 = icmp ugt i64 %vp_div100, %vm_div100, !dbg !1190
  br i1 %_208, label %bb115, label %bb120.preheader, !dbg !1190

bb120.preheader:                                  ; preds = %bb112, %bb119
  br label %bb120, !dbg !1191

bb120:                                            ; preds = %bb120.preheader, %bb128
  %_218 = load i64, ptr %vp, align 8, !dbg !1192, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vp_div10 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_218), !dbg !1193
  store i64 %vp_div10, ptr %vp_div10.dbg.spill, align 8, !dbg !1193
  call void @llvm.dbg.declare(metadata ptr %vp_div10.dbg.spill, metadata !969, metadata !DIExpression()), !dbg !1194
  %_220 = load i64, ptr %vm, align 8, !dbg !1195, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vm_div10 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_220), !dbg !1196
  store i64 %vm_div10, ptr %vm_div10.dbg.spill, align 8, !dbg !1196
  call void @llvm.dbg.declare(metadata ptr %vm_div10.dbg.spill, metadata !971, metadata !DIExpression()), !dbg !1197
  %_221 = icmp ule i64 %vp_div10, %vm_div10, !dbg !1191
  br i1 %_221, label %bb123, label %bb124, !dbg !1191

bb115:                                            ; preds = %bb112
  %_210 = load i64, ptr %vr, align 8, !dbg !1198, !noundef !12
; call ryu::d2s_intrinsics::div100
  %vr_div100 = call i64 @_ZN3ryu14d2s_intrinsics6div10017h1a346903025ab7a7E(i64 %_210), !dbg !1199
  store i64 %vr_div100, ptr %vr_div100.dbg.spill, align 8, !dbg !1199
  call void @llvm.dbg.declare(metadata ptr %vr_div100.dbg.spill, metadata !965, metadata !DIExpression()), !dbg !1200
  %_213 = load i64, ptr %vr, align 8, !dbg !1201, !noundef !12
  %_212 = trunc i64 %_213 to i32, !dbg !1202
  %_215 = trunc i64 %vr_div100 to i32, !dbg !1203
  store i32 100, ptr %self.dbg.spill.i80, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i80, metadata !1142, metadata !DIExpression()), !dbg !1204
  store i32 %_215, ptr %rhs.dbg.spill.i79, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i79, metadata !1148, metadata !DIExpression()), !dbg !1206
  %_0.i81 = mul i32 100, %_215, !dbg !1207
  store i32 %_212, ptr %self.dbg.spill.i101, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i101, metadata !1153, metadata !DIExpression()), !dbg !1208
  store i32 %_0.i81, ptr %rhs.dbg.spill.i100, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i100, metadata !1156, metadata !DIExpression()), !dbg !1210
  %_0.i102 = sub i32 %_212, %_0.i81, !dbg !1211
  store i32 %_0.i102, ptr %vr_mod100.dbg.spill, align 4, !dbg !1202
  call void @llvm.dbg.declare(metadata ptr %vr_mod100.dbg.spill, metadata !967, metadata !DIExpression()), !dbg !1212
  %64 = icmp uge i32 %_0.i102, 50, !dbg !1213
  %65 = zext i1 %64 to i8, !dbg !1213
  store i8 %65, ptr %round_up, align 1, !dbg !1213
  store i64 %vr_div100, ptr %vr, align 8, !dbg !1214
  store i64 %vp_div100, ptr %vp, align 8, !dbg !1215
  store i64 %vm_div100, ptr %vm, align 8, !dbg !1216
  %66 = load i32, ptr %removed, align 4, !dbg !1217, !noundef !12
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 2), !dbg !1217
  %_216.0 = extractvalue { i32, i1 } %67, 0, !dbg !1217
  %_216.1 = extractvalue { i32, i1 } %67, 1, !dbg !1217
  %68 = call i1 @llvm.expect.i1(i1 %_216.1, i1 false), !dbg !1217
  br i1 %68, label %panic29, label %bb119, !dbg !1217

bb119:                                            ; preds = %bb115
  store i32 %_216.0, ptr %removed, align 4, !dbg !1217
  br label %bb120.preheader, !dbg !1218

panic29:                                          ; preds = %bb115
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_bd5f2141ee926a7925fa10c76613de0c) #13, !dbg !1217
  unreachable, !dbg !1217

bb124:                                            ; preds = %bb120
  %_223 = load i64, ptr %vr, align 8, !dbg !1219, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vr_div10 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_223), !dbg !1220
  store i64 %vr_div10, ptr %vr_div10.dbg.spill, align 8, !dbg !1220
  call void @llvm.dbg.declare(metadata ptr %vr_div10.dbg.spill, metadata !973, metadata !DIExpression()), !dbg !1221
  %_226 = load i64, ptr %vr, align 8, !dbg !1222, !noundef !12
  %_225 = trunc i64 %_226 to i32, !dbg !1223
  %_228 = trunc i64 %vr_div10 to i32, !dbg !1224
  store i32 10, ptr %self.dbg.spill.i77, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i77, metadata !1142, metadata !DIExpression()), !dbg !1225
  store i32 %_228, ptr %rhs.dbg.spill.i76, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i76, metadata !1148, metadata !DIExpression()), !dbg !1227
  %_0.i78 = mul i32 10, %_228, !dbg !1228
  store i32 %_225, ptr %self.dbg.spill.i98, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i98, metadata !1153, metadata !DIExpression()), !dbg !1229
  store i32 %_0.i78, ptr %rhs.dbg.spill.i97, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i97, metadata !1156, metadata !DIExpression()), !dbg !1231
  %_0.i99 = sub i32 %_225, %_0.i78, !dbg !1232
  store i32 %_0.i99, ptr %vr_mod10.dbg.spill, align 4, !dbg !1223
  call void @llvm.dbg.declare(metadata ptr %vr_mod10.dbg.spill, metadata !975, metadata !DIExpression()), !dbg !1233
  %69 = icmp uge i32 %_0.i99, 5, !dbg !1234
  %70 = zext i1 %69 to i8, !dbg !1234
  store i8 %70, ptr %round_up, align 1, !dbg !1234
  store i64 %vr_div10, ptr %vr, align 8, !dbg !1235
  store i64 %vp_div10, ptr %vp, align 8, !dbg !1236
  store i64 %vm_div10, ptr %vm, align 8, !dbg !1237
  %71 = load i32, ptr %removed, align 4, !dbg !1238, !noundef !12
  %72 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 1), !dbg !1238
  %_229.0 = extractvalue { i32, i1 } %72, 0, !dbg !1238
  %_229.1 = extractvalue { i32, i1 } %72, 1, !dbg !1238
  %73 = call i1 @llvm.expect.i1(i1 %_229.1, i1 false), !dbg !1238
  br i1 %73, label %panic30, label %bb128, !dbg !1238

bb123:                                            ; preds = %bb120
  %_230 = load i64, ptr %vr, align 8, !dbg !1239, !noundef !12
  %_234 = load i64, ptr %vr, align 8, !dbg !1240, !noundef !12
  %_235 = load i64, ptr %vm, align 8, !dbg !1241, !noundef !12
  %_233 = icmp eq i64 %_234, %_235, !dbg !1240
  br i1 %_233, label %bb129, label %bb130, !dbg !1240

bb128:                                            ; preds = %bb124
  store i32 %_229.0, ptr %removed, align 4, !dbg !1238
  br label %bb120, !dbg !1242

panic30:                                          ; preds = %bb124
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_1b89cf902eb2db804f8bdbfa9198acbc) #13, !dbg !1238
  unreachable, !dbg !1238

bb130:                                            ; preds = %bb123
  %74 = load i8, ptr %round_up, align 1, !dbg !1243, !range !197, !noundef !12
  %75 = trunc i8 %74 to i1, !dbg !1243
  %76 = zext i1 %75 to i8, !dbg !1243
  store i8 %76, ptr %_232, align 1, !dbg !1243
  br label %bb131, !dbg !1244

bb129:                                            ; preds = %bb123
  store i8 1, ptr %_232, align 1, !dbg !1244
  br label %bb131, !dbg !1244

bb131:                                            ; preds = %bb129, %bb130
  %77 = load i8, ptr %_232, align 1, !dbg !1244, !range !197, !noundef !12
  %78 = trunc i8 %77 to i1, !dbg !1244
  %_231 = zext i1 %78 to i64, !dbg !1244
  %79 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_230, i64 %_231), !dbg !1239
  %_236.0 = extractvalue { i64, i1 } %79, 0, !dbg !1239
  %_236.1 = extractvalue { i64, i1 } %79, 1, !dbg !1239
  %80 = call i1 @llvm.expect.i1(i1 %_236.1, i1 false), !dbg !1239
  br i1 %80, label %panic31, label %bb132, !dbg !1239

bb132:                                            ; preds = %bb131
  store i64 %_236.0, ptr %output, align 8, !dbg !1239
  br label %bb133, !dbg !1245

panic31:                                          ; preds = %bb131
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_79d3c43d84ab47165f4dcb24c09c81bb) #13, !dbg !1239
  unreachable, !dbg !1239

bb133:                                            ; preds = %bb111, %bb132
  %_238 = load i32, ptr %e10, align 4, !dbg !1246, !noundef !12
  %_239 = load i32, ptr %removed, align 4, !dbg !1247, !noundef !12
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_238, i32 %_239), !dbg !1246
  %_240.0 = extractvalue { i32, i1 } %81, 0, !dbg !1246
  %_240.1 = extractvalue { i32, i1 } %81, 1, !dbg !1246
  %82 = call i1 @llvm.expect.i1(i1 %_240.1, i1 false), !dbg !1246
  br i1 %82, label %panic53, label %bb134, !dbg !1246

bb83:                                             ; preds = %bb79
  %_155 = load i64, ptr %vm, align 8, !dbg !1248, !noundef !12
  %_154 = trunc i64 %_155 to i32, !dbg !1249
  %_157 = trunc i64 %vm_div1034 to i32, !dbg !1250
  store i32 10, ptr %self.dbg.spill.i74, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i74, metadata !1142, metadata !DIExpression()), !dbg !1251
  store i32 %_157, ptr %rhs.dbg.spill.i73, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i73, metadata !1148, metadata !DIExpression()), !dbg !1253
  %_0.i75 = mul i32 10, %_157, !dbg !1254
  store i32 %_154, ptr %self.dbg.spill.i95, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i95, metadata !1153, metadata !DIExpression()), !dbg !1255
  store i32 %_0.i75, ptr %rhs.dbg.spill.i94, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i94, metadata !1156, metadata !DIExpression()), !dbg !1257
  %_0.i96 = sub i32 %_154, %_0.i75, !dbg !1258
  store i32 %_0.i96, ptr %vm_mod10.dbg.spill, align 4, !dbg !1249
  call void @llvm.dbg.declare(metadata ptr %vm_mod10.dbg.spill, metadata !943, metadata !DIExpression()), !dbg !1259
  %_159 = load i64, ptr %vr, align 8, !dbg !1260, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vr_div1036 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_159), !dbg !1261
  store i64 %vr_div1036, ptr %vr_div10.dbg.spill37, align 8, !dbg !1261
  call void @llvm.dbg.declare(metadata ptr %vr_div10.dbg.spill37, metadata !945, metadata !DIExpression()), !dbg !1262
  %_162 = load i64, ptr %vr, align 8, !dbg !1263, !noundef !12
  %_161 = trunc i64 %_162 to i32, !dbg !1264
  %_164 = trunc i64 %vr_div1036 to i32, !dbg !1265
  store i32 10, ptr %self.dbg.spill.i71, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i71, metadata !1142, metadata !DIExpression()), !dbg !1266
  store i32 %_164, ptr %rhs.dbg.spill.i70, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i70, metadata !1148, metadata !DIExpression()), !dbg !1268
  %_0.i72 = mul i32 10, %_164, !dbg !1269
  store i32 %_161, ptr %self.dbg.spill.i92, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i92, metadata !1153, metadata !DIExpression()), !dbg !1270
  store i32 %_0.i72, ptr %rhs.dbg.spill.i91, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i91, metadata !1156, metadata !DIExpression()), !dbg !1272
  %_0.i93 = sub i32 %_161, %_0.i72, !dbg !1273
  store i32 %_0.i93, ptr %vr_mod10.dbg.spill39, align 4, !dbg !1264
  call void @llvm.dbg.declare(metadata ptr %vr_mod10.dbg.spill39, metadata !947, metadata !DIExpression()), !dbg !1274
  %_165 = icmp eq i32 %_0.i96, 0, !dbg !1275
  %83 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1276, !range !197, !noundef !12
  %84 = trunc i8 %83 to i1, !dbg !1276
  %85 = and i1 %84, %_165, !dbg !1276
  %86 = zext i1 %85 to i8, !dbg !1276
  store i8 %86, ptr %vm_is_trailing_zeros, align 1, !dbg !1276
  %_167 = load i8, ptr %last_removed_digit, align 1, !dbg !1277, !noundef !12
  %_166 = icmp eq i8 %_167, 0, !dbg !1277
  %87 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1278, !range !197, !noundef !12
  %88 = trunc i8 %87 to i1, !dbg !1278
  %89 = and i1 %88, %_166, !dbg !1278
  %90 = zext i1 %89 to i8, !dbg !1278
  store i8 %90, ptr %vr_is_trailing_zeros, align 1, !dbg !1278
  %91 = trunc i32 %_0.i93 to i8, !dbg !1279
  store i8 %91, ptr %last_removed_digit, align 1, !dbg !1279
  store i64 %vr_div1036, ptr %vr, align 8, !dbg !1280
  store i64 %vp_div1032, ptr %vp, align 8, !dbg !1281
  store i64 %vm_div1034, ptr %vm, align 8, !dbg !1282
  %92 = load i32, ptr %removed, align 4, !dbg !1283, !noundef !12
  %93 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 1), !dbg !1283
  %_168.0 = extractvalue { i32, i1 } %93, 0, !dbg !1283
  %_168.1 = extractvalue { i32, i1 } %93, 1, !dbg !1283
  %94 = call i1 @llvm.expect.i1(i1 %_168.1, i1 false), !dbg !1283
  br i1 %94, label %panic40, label %bb89, !dbg !1283

bb82:                                             ; preds = %bb79
  %95 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1284, !range !197, !noundef !12
  %_169 = trunc i8 %95 to i1, !dbg !1284
  br i1 %_169, label %bb90.preheader, label %bb100, !dbg !1284

bb90.preheader:                                   ; preds = %bb82
  br label %bb90, !dbg !1285

bb89:                                             ; preds = %bb83
  store i32 %_168.0, ptr %removed, align 4, !dbg !1283
  br label %bb79, !dbg !1286

panic40:                                          ; preds = %bb83
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_9246f24e5db8bfb16b6e634aca781859) #13, !dbg !1283
  unreachable, !dbg !1283

bb100.loopexit:                                   ; preds = %bb90
  br label %bb100, !dbg !1287

bb100:                                            ; preds = %bb100.loopexit, %bb82
  %96 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1287, !range !197, !noundef !12
  %_189 = trunc i8 %96 to i1, !dbg !1287
  br i1 %_189, label %bb101, label %bb105, !dbg !1287

bb90:                                             ; preds = %bb90.preheader, %bb99
  %_171 = load i64, ptr %vm, align 8, !dbg !1288, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vm_div1041 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_171), !dbg !1289
  store i64 %vm_div1041, ptr %vm_div10.dbg.spill42, align 8, !dbg !1289
  call void @llvm.dbg.declare(metadata ptr %vm_div10.dbg.spill42, metadata !949, metadata !DIExpression()), !dbg !1290
  %_174 = load i64, ptr %vm, align 8, !dbg !1291, !noundef !12
  %_173 = trunc i64 %_174 to i32, !dbg !1292
  %_176 = trunc i64 %vm_div1041 to i32, !dbg !1293
  store i32 10, ptr %self.dbg.spill.i68, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i68, metadata !1142, metadata !DIExpression()), !dbg !1294
  store i32 %_176, ptr %rhs.dbg.spill.i67, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i67, metadata !1148, metadata !DIExpression()), !dbg !1296
  %_0.i69 = mul i32 10, %_176, !dbg !1297
  store i32 %_173, ptr %self.dbg.spill.i89, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i89, metadata !1153, metadata !DIExpression()), !dbg !1298
  store i32 %_0.i69, ptr %rhs.dbg.spill.i88, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i88, metadata !1156, metadata !DIExpression()), !dbg !1300
  %_0.i90 = sub i32 %_173, %_0.i69, !dbg !1301
  store i32 %_0.i90, ptr %vm_mod10.dbg.spill44, align 4, !dbg !1292
  call void @llvm.dbg.declare(metadata ptr %vm_mod10.dbg.spill44, metadata !951, metadata !DIExpression()), !dbg !1302
  %97 = icmp eq i32 %_0.i90, 0, !dbg !1285
  br i1 %97, label %bb94, label %bb100.loopexit, !dbg !1285

bb94:                                             ; preds = %bb90
  %_178 = load i64, ptr %vp, align 8, !dbg !1303, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vp_div1045 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_178), !dbg !1304
  store i64 %vp_div1045, ptr %vp_div10.dbg.spill46, align 8, !dbg !1304
  call void @llvm.dbg.declare(metadata ptr %vp_div10.dbg.spill46, metadata !953, metadata !DIExpression()), !dbg !1305
  %_180 = load i64, ptr %vr, align 8, !dbg !1306, !noundef !12
; call ryu::d2s_intrinsics::div10
  %vr_div1047 = call i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %_180), !dbg !1307
  store i64 %vr_div1047, ptr %vr_div10.dbg.spill48, align 8, !dbg !1307
  call void @llvm.dbg.declare(metadata ptr %vr_div10.dbg.spill48, metadata !955, metadata !DIExpression()), !dbg !1308
  %_183 = load i64, ptr %vr, align 8, !dbg !1309, !noundef !12
  %_182 = trunc i64 %_183 to i32, !dbg !1310
  %_185 = trunc i64 %vr_div1047 to i32, !dbg !1311
  store i32 10, ptr %self.dbg.spill.i65, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i65, metadata !1142, metadata !DIExpression()), !dbg !1312
  store i32 %_185, ptr %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1148, metadata !DIExpression()), !dbg !1314
  %_0.i66 = mul i32 10, %_185, !dbg !1315
  store i32 %_182, ptr %self.dbg.spill.i86, align 4
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i86, metadata !1153, metadata !DIExpression()), !dbg !1316
  store i32 %_0.i66, ptr %rhs.dbg.spill.i85, align 4
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i85, metadata !1156, metadata !DIExpression()), !dbg !1318
  %_0.i87 = sub i32 %_182, %_0.i66, !dbg !1319
  store i32 %_0.i87, ptr %vr_mod10.dbg.spill50, align 4, !dbg !1310
  call void @llvm.dbg.declare(metadata ptr %vr_mod10.dbg.spill50, metadata !957, metadata !DIExpression()), !dbg !1320
  %_187 = load i8, ptr %last_removed_digit, align 1, !dbg !1321, !noundef !12
  %_186 = icmp eq i8 %_187, 0, !dbg !1321
  %98 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1322, !range !197, !noundef !12
  %99 = trunc i8 %98 to i1, !dbg !1322
  %100 = and i1 %99, %_186, !dbg !1322
  %101 = zext i1 %100 to i8, !dbg !1322
  store i8 %101, ptr %vr_is_trailing_zeros, align 1, !dbg !1322
  %102 = trunc i32 %_0.i87 to i8, !dbg !1323
  store i8 %102, ptr %last_removed_digit, align 1, !dbg !1323
  store i64 %vr_div1047, ptr %vr, align 8, !dbg !1324
  store i64 %vp_div1045, ptr %vp, align 8, !dbg !1325
  store i64 %vm_div1041, ptr %vm, align 8, !dbg !1326
  %103 = load i32, ptr %removed, align 4, !dbg !1327, !noundef !12
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 1), !dbg !1327
  %_188.0 = extractvalue { i32, i1 } %104, 0, !dbg !1327
  %_188.1 = extractvalue { i32, i1 } %104, 1, !dbg !1327
  %105 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false), !dbg !1327
  br i1 %105, label %panic51, label %bb99, !dbg !1327

bb99:                                             ; preds = %bb94
  store i32 %_188.0, ptr %removed, align 4, !dbg !1327
  br label %bb90, !dbg !1328

panic51:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_2fcb7e8e3106d1e4c44be34e069e4bd2) #13, !dbg !1327
  unreachable, !dbg !1327

bb105:                                            ; preds = %bb104, %bb102, %bb101, %bb100
  %_194 = load i64, ptr %vr, align 8, !dbg !1329, !noundef !12
  %_198 = load i64, ptr %vr, align 8, !dbg !1330, !noundef !12
  %_199 = load i64, ptr %vm, align 8, !dbg !1331, !noundef !12
  %_197 = icmp eq i64 %_198, %_199, !dbg !1330
  br i1 %_197, label %bb106, label %bb109, !dbg !1330

bb101:                                            ; preds = %bb100
  %_190 = load i8, ptr %last_removed_digit, align 1, !dbg !1332, !noundef !12
  %106 = icmp eq i8 %_190, 5, !dbg !1332
  br i1 %106, label %bb102, label %bb105, !dbg !1332

bb102:                                            ; preds = %bb101
  %_192 = load i64, ptr %vr, align 8, !dbg !1333, !noundef !12
  %_191 = urem i64 %_192, 2, !dbg !1333
  %107 = icmp eq i64 %_191, 0, !dbg !1333
  br i1 %107, label %bb104, label %bb105, !dbg !1333

bb104:                                            ; preds = %bb102
  store i8 4, ptr %last_removed_digit, align 1, !dbg !1334
  br label %bb105, !dbg !1335

bb109:                                            ; preds = %bb107, %bb105
  %_201 = load i8, ptr %last_removed_digit, align 1, !dbg !1336, !noundef !12
  %108 = icmp uge i8 %_201, 5, !dbg !1336
  %109 = zext i1 %108 to i8, !dbg !1336
  store i8 %109, ptr %_196, align 1, !dbg !1336
  br label %bb110, !dbg !1337

bb106:                                            ; preds = %bb105
  br i1 %even, label %bb107, label %bb108, !dbg !1338

bb108:                                            ; preds = %bb107, %bb106
  store i8 1, ptr %_196, align 1, !dbg !1337
  br label %bb110, !dbg !1337

bb107:                                            ; preds = %bb106
  %110 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1339, !range !197, !noundef !12
  %_200 = trunc i8 %110 to i1, !dbg !1339
  br i1 %_200, label %bb109, label %bb108, !dbg !1339

bb110:                                            ; preds = %bb109, %bb108
  %111 = load i8, ptr %_196, align 1, !dbg !1337, !range !197, !noundef !12
  %112 = trunc i8 %111 to i1, !dbg !1337
  %_195 = zext i1 %112 to i64, !dbg !1337
  %113 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_194, i64 %_195), !dbg !1329
  %_202.0 = extractvalue { i64, i1 } %113, 0, !dbg !1329
  %_202.1 = extractvalue { i64, i1 } %113, 1, !dbg !1329
  %114 = call i1 @llvm.expect.i1(i1 %_202.1, i1 false), !dbg !1329
  br i1 %114, label %panic52, label %bb111, !dbg !1329

bb111:                                            ; preds = %bb110
  store i64 %_202.0, ptr %output, align 8, !dbg !1329
  br label %bb133, !dbg !1245

panic52:                                          ; preds = %bb110
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_79ac035ff72a1af137eee4a5871c5802) #13, !dbg !1329
  unreachable, !dbg !1329

bb134:                                            ; preds = %bb133
  store i32 %_240.0, ptr %exp.dbg.spill, align 4, !dbg !1246
  call void @llvm.dbg.declare(metadata ptr %exp.dbg.spill, metadata !977, metadata !DIExpression()), !dbg !1340
  %_241 = load i64, ptr %output, align 8, !dbg !1341, !noundef !12
  store i64 %_241, ptr %_0, align 8, !dbg !1342
  %115 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1342
  store i32 %_240.0, ptr %115, align 8, !dbg !1342
  %116 = load i64, ptr %_0, align 8, !dbg !1343, !noundef !12
  %117 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !1343
  %118 = load i32, ptr %117, align 8, !dbg !1343, !noundef !12
  %119 = insertvalue { i64, i32 } poison, i64 %116, 0, !dbg !1343
  %120 = insertvalue { i64, i32 } %119, i32 %118, 1, !dbg !1343
  ret { i64, i32 } %120, !dbg !1343

panic53:                                          ; preds = %bb133
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0bd3cf2379e9a63ae069d8299eefa7f2) #13, !dbg !1246
  unreachable, !dbg !1246
}

; ryu::d2s_intrinsics::div5
; Function Attrs: uwtable
define internal i64 @_ZN3ryu14d2s_intrinsics4div517h179931953f2ccfbbE(i64 %x) unnamed_addr #4 !dbg !1344 {
start:
  %x.dbg.spill = alloca i64, align 8
  store i64 %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1350, metadata !DIExpression()), !dbg !1351
  %_0 = udiv i64 %x, 5, !dbg !1352
  ret i64 %_0, !dbg !1353
}

; ryu::d2s_intrinsics::div10
; Function Attrs: uwtable
define internal i64 @_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E(i64 %x) unnamed_addr #4 !dbg !1354 {
start:
  %x.dbg.spill = alloca i64, align 8
  store i64 %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1356, metadata !DIExpression()), !dbg !1357
  %_0 = udiv i64 %x, 10, !dbg !1358
  ret i64 %_0, !dbg !1359
}

; ryu::d2s_intrinsics::div100
; Function Attrs: uwtable
define internal i64 @_ZN3ryu14d2s_intrinsics6div10017h1a346903025ab7a7E(i64 %x) unnamed_addr #4 !dbg !1360 {
start:
  %x.dbg.spill = alloca i64, align 8
  store i64 %x, ptr %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %x.dbg.spill, metadata !1362, metadata !DIExpression()), !dbg !1363
  %_0 = udiv i64 %x, 100, !dbg !1364
  ret i64 %_0, !dbg !1365
}

; ryu::d2s_intrinsics::pow5_factor
; Function Attrs: uwtable
define internal i32 @_ZN3ryu14d2s_intrinsics11pow5_factor17h0b76772ac2dac557E(i64 %0) unnamed_addr #4 !dbg !1366 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %count = alloca i32, align 4
  %value = alloca i64, align 8
  store i64 %0, ptr %value, align 8
  call void @llvm.dbg.declare(metadata ptr %value, metadata !1368, metadata !DIExpression()), !dbg !1371
  call void @llvm.dbg.declare(metadata ptr %count, metadata !1369, metadata !DIExpression()), !dbg !1372
  store i32 0, ptr %count, align 4, !dbg !1373
  br label %bb1, !dbg !1374

bb1:                                              ; preds = %bb8, %start
  br label %bb2, !dbg !1375

bb2:                                              ; preds = %bb1
  %_4 = load i64, ptr %value, align 8, !dbg !1376, !noundef !12
  %1 = icmp eq i64 %_4, 0, !dbg !1376
  br i1 %1, label %bb3, label %bb4, !dbg !1376

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_8a0c4e5a56ab0d518bd01c780582ddb7, i64 28, ptr align 8 @alloc_3463bfcfb128194a8292e8786ed7dbfd) #13, !dbg !1375
  unreachable, !dbg !1375

bb4:                                              ; preds = %bb2
  %_7 = load i64, ptr %value, align 8, !dbg !1377, !noundef !12
  store i64 %_7, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1378, metadata !DIExpression()), !dbg !1385
  store i64 -3689348814741910323, ptr %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %rhs.dbg.spill.i, metadata !1384, metadata !DIExpression()), !dbg !1387
  %_0.i = mul i64 %_7, -3689348814741910323, !dbg !1388
  store i64 %_0.i, ptr %value, align 8, !dbg !1389
  %_9 = load i64, ptr %value, align 8, !dbg !1390, !noundef !12
  %_8 = icmp ugt i64 %_9, 3689348814741910323, !dbg !1390
  br i1 %_8, label %bb6, label %bb7, !dbg !1390

bb7:                                              ; preds = %bb4
  %2 = load i32, ptr %count, align 4, !dbg !1391, !noundef !12
  %3 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %2, i32 1), !dbg !1391
  %_10.0 = extractvalue { i32, i1 } %3, 0, !dbg !1391
  %_10.1 = extractvalue { i32, i1 } %3, 1, !dbg !1391
  %4 = call i1 @llvm.expect.i1(i1 %_10.1, i1 false), !dbg !1391
  br i1 %4, label %panic, label %bb8, !dbg !1391

bb6:                                              ; preds = %bb4
  %_0 = load i32, ptr %count, align 4, !dbg !1392, !noundef !12
  ret i32 %_0, !dbg !1393

bb8:                                              ; preds = %bb7
  store i32 %_10.0, ptr %count, align 4, !dbg !1391
  br label %bb1, !dbg !1374

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_3c17d0e6958d1d81deab3ad0e1763c66) #13, !dbg !1391
  unreachable, !dbg !1391
}

; ryu::d2s_intrinsics::multiple_of_power_of_5
; Function Attrs: uwtable
define internal zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_517h9cfaf5847184731bE(i64 %value, i32 %p) unnamed_addr #4 !dbg !1394 {
start:
  %p.dbg.spill = alloca i32, align 4
  %value.dbg.spill = alloca i64, align 8
  store i64 %value, ptr %value.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill, metadata !1398, metadata !DIExpression()), !dbg !1400
  store i32 %p, ptr %p.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1399, metadata !DIExpression()), !dbg !1401
; call ryu::d2s_intrinsics::pow5_factor
  %_3 = call i32 @_ZN3ryu14d2s_intrinsics11pow5_factor17h0b76772ac2dac557E(i64 %value), !dbg !1402
  %_0 = icmp uge i32 %_3, %p, !dbg !1402
  ret i1 %_0, !dbg !1403
}

; ryu::d2s_intrinsics::multiple_of_power_of_2
; Function Attrs: uwtable
define internal zeroext i1 @_ZN3ryu14d2s_intrinsics22multiple_of_power_of_217h7d5f75858e5fd6fcE(i64 %value, i32 %p) unnamed_addr #4 !dbg !1404 {
start:
  %p.dbg.spill = alloca i32, align 4
  %value.dbg.spill = alloca i64, align 8
  store i64 %value, ptr %value.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill, metadata !1406, metadata !DIExpression()), !dbg !1408
  store i32 %p, ptr %p.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1407, metadata !DIExpression()), !dbg !1409
  br label %bb1, !dbg !1410

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %value, 0, !dbg !1411
  br i1 %0, label %bb2, label %bb3, !dbg !1411

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_8a0c4e5a56ab0d518bd01c780582ddb7, i64 28, ptr align 8 @alloc_6af066d1d5e7ee5fb60d6080f2fc5737) #13, !dbg !1410
  unreachable, !dbg !1410

bb3:                                              ; preds = %bb1
  br label %bb4, !dbg !1412

bb4:                                              ; preds = %bb3
  %_6 = icmp ult i32 %p, 64, !dbg !1413
  br i1 %_6, label %bb6, label %bb5, !dbg !1413

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_97e2d6a4de4c7634a41ba2ded88e86b5, i64 24, ptr align 8 @alloc_20d9a4eaef200cf1597e7fdb499d2cd5) #13, !dbg !1412
  unreachable, !dbg !1412

bb6:                                              ; preds = %bb4
  %_11 = icmp ult i32 %p, 64, !dbg !1414
  %1 = call i1 @llvm.expect.i1(i1 %_11, i1 true), !dbg !1414
  br i1 %1, label %bb7, label %panic, !dbg !1414

bb7:                                              ; preds = %bb6
  %2 = zext i32 %p to i64, !dbg !1414
  %3 = and i64 %2, 63, !dbg !1414
  %_10 = shl i64 1, %3, !dbg !1414
  %_12.0 = sub i64 %_10, 1, !dbg !1415
  %_12.1 = icmp ult i64 %_10, 1, !dbg !1415
  %4 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !1415
  br i1 %4, label %panic1, label %bb8, !dbg !1415

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.4, i64 35, ptr align 8 @alloc_77a65abd6dae86f1070e1ff4fcbd65ff) #13, !dbg !1414
  unreachable, !dbg !1414

bb8:                                              ; preds = %bb7
  %_8 = and i64 %value, %_12.0, !dbg !1416
  %_0 = icmp eq i64 %_8, 0, !dbg !1416
  ret i1 %_0, !dbg !1417

panic1:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_22ae0c7763e133e3ddc06dd9a52c9ada) #13, !dbg !1415
  unreachable, !dbg !1415
}

; ryu::d2s_intrinsics::mul_shift_64
; Function Attrs: uwtable
define internal i64 @_ZN3ryu14d2s_intrinsics12mul_shift_6417hec29767bd4bdb8aeE(i64 %m, ptr align 8 %mul, i32 %j) unnamed_addr #4 !dbg !1418 {
start:
  %b2.dbg.spill = alloca i128, align 16
  %b0.dbg.spill = alloca i128, align 16
  %j.dbg.spill = alloca i32, align 4
  %mul.dbg.spill = alloca ptr, align 8
  %m.dbg.spill = alloca i64, align 8
  store i64 %m, ptr %m.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %m.dbg.spill, metadata !1422, metadata !DIExpression()), !dbg !1430
  store ptr %mul, ptr %mul.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mul.dbg.spill, metadata !1423, metadata !DIExpression()), !dbg !1431
  store i32 %j, ptr %j.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !1424, metadata !DIExpression()), !dbg !1432
  %_5 = zext i64 %m to i128, !dbg !1433
  %_7 = load i64, ptr %mul, align 8, !dbg !1434, !noundef !12
  %_6 = zext i64 %_7 to i128, !dbg !1434
  %0 = call { i128, i1 } @llvm.umul.with.overflow.i128(i128 %_5, i128 %_6), !dbg !1433
  %_8.0 = extractvalue { i128, i1 } %0, 0, !dbg !1433
  %_8.1 = extractvalue { i128, i1 } %0, 1, !dbg !1433
  %1 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !1433
  br i1 %1, label %panic, label %bb1, !dbg !1433

bb1:                                              ; preds = %start
  store i128 %_8.0, ptr %b0.dbg.spill, align 16, !dbg !1433
  call void @llvm.dbg.declare(metadata ptr %b0.dbg.spill, metadata !1425, metadata !DIExpression()), !dbg !1435
  %_10 = zext i64 %m to i128, !dbg !1436
  %2 = getelementptr inbounds i8, ptr %mul, i64 8, !dbg !1437
  %_12 = load i64, ptr %2, align 8, !dbg !1437, !noundef !12
  %_11 = zext i64 %_12 to i128, !dbg !1437
  %3 = call { i128, i1 } @llvm.umul.with.overflow.i128(i128 %_10, i128 %_11), !dbg !1436
  %_13.0 = extractvalue { i128, i1 } %3, 0, !dbg !1436
  %_13.1 = extractvalue { i128, i1 } %3, 1, !dbg !1436
  %4 = call i1 @llvm.expect.i1(i1 %_13.1, i1 false), !dbg !1436
  br i1 %4, label %panic1, label %bb2, !dbg !1436

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_2da4c4335fe0165cf163c0bf31e9db57) #13, !dbg !1433
  unreachable, !dbg !1433

bb2:                                              ; preds = %bb1
  store i128 %_13.0, ptr %b2.dbg.spill, align 16, !dbg !1436
  call void @llvm.dbg.declare(metadata ptr %b2.dbg.spill, metadata !1428, metadata !DIExpression()), !dbg !1438
  %_16 = lshr i128 %_8.0, 64, !dbg !1439
  %5 = call { i128, i1 } @llvm.uadd.with.overflow.i128(i128 %_16, i128 %_13.0), !dbg !1440
  %_19.0 = extractvalue { i128, i1 } %5, 0, !dbg !1440
  %_19.1 = extractvalue { i128, i1 } %5, 1, !dbg !1440
  %6 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1440
  br i1 %6, label %panic2, label %bb4, !dbg !1440

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_b2b6903197360b3eff2d489cb1f2c1d5) #13, !dbg !1436
  unreachable, !dbg !1436

bb4:                                              ; preds = %bb2
  %_21.0 = sub i32 %j, 64, !dbg !1441
  %_21.1 = icmp ult i32 %j, 64, !dbg !1441
  %7 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !1441
  br i1 %7, label %panic3, label %bb5, !dbg !1441

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5639c992f2e5215295f20865ee6b4dd7) #13, !dbg !1440
  unreachable, !dbg !1440

bb5:                                              ; preds = %bb4
  %_22 = icmp ult i32 %_21.0, 128, !dbg !1442
  %8 = call i1 @llvm.expect.i1(i1 %_22, i1 true), !dbg !1442
  br i1 %8, label %bb6, label %panic4, !dbg !1442

panic3:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_bb55bef3c54b796a5a3a41e2f06d59a5) #13, !dbg !1441
  unreachable, !dbg !1441

bb6:                                              ; preds = %bb5
  %9 = zext i32 %_21.0 to i128, !dbg !1442
  %10 = and i128 %9, 127, !dbg !1442
  %_14 = lshr i128 %_19.0, %10, !dbg !1442
  %_0 = trunc i128 %_14 to i64, !dbg !1442
  ret i64 %_0, !dbg !1443

panic4:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_ca90efad3155b55a6b00dc5ed0e18b60) #13, !dbg !1442
  unreachable, !dbg !1442
}

; ryu::d2s_intrinsics::mul_shift_all_64
; Function Attrs: uwtable
define internal i64 @_ZN3ryu14d2s_intrinsics16mul_shift_all_6417h635e3362a7e5ddc0E(i64 %m, ptr align 8 %mul, i32 %j, ptr %vp, ptr %vm, i32 %mm_shift) unnamed_addr #4 !dbg !1444 {
start:
  %mm_shift.dbg.spill = alloca i32, align 4
  %vm.dbg.spill = alloca ptr, align 8
  %vp.dbg.spill = alloca ptr, align 8
  %j.dbg.spill = alloca i32, align 4
  %mul.dbg.spill = alloca ptr, align 8
  %m.dbg.spill = alloca i64, align 8
  store i64 %m, ptr %m.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %m.dbg.spill, metadata !1448, metadata !DIExpression()), !dbg !1454
  store ptr %mul, ptr %mul.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %mul.dbg.spill, metadata !1449, metadata !DIExpression()), !dbg !1455
  store i32 %j, ptr %j.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !1450, metadata !DIExpression()), !dbg !1456
  store ptr %vp, ptr %vp.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %vp.dbg.spill, metadata !1451, metadata !DIExpression()), !dbg !1457
  store ptr %vm, ptr %vm.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %vm.dbg.spill, metadata !1452, metadata !DIExpression()), !dbg !1458
  store i32 %mm_shift, ptr %mm_shift.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %mm_shift.dbg.spill, metadata !1453, metadata !DIExpression()), !dbg !1459
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %m), !dbg !1460
  %_11.0 = extractvalue { i64, i1 } %0, 0, !dbg !1460
  %_11.1 = extractvalue { i64, i1 } %0, 1, !dbg !1460
  %1 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !1460
  br i1 %1, label %panic, label %bb1, !dbg !1460

bb1:                                              ; preds = %start
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_11.0, i64 2), !dbg !1460
  %_12.0 = extractvalue { i64, i1 } %2, 0, !dbg !1460
  %_12.1 = extractvalue { i64, i1 } %2, 1, !dbg !1460
  %3 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !1460
  br i1 %3, label %panic1, label %bb2, !dbg !1460

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7d7571b10e1805cbeabe72a0ed3322b6) #13, !dbg !1460
  unreachable, !dbg !1460

bb2:                                              ; preds = %bb1
; call ryu::d2s_intrinsics::mul_shift_64
  %_8 = call i64 @_ZN3ryu14d2s_intrinsics12mul_shift_6417hec29767bd4bdb8aeE(i64 %_12.0, ptr align 8 %mul, i32 %j), !dbg !1461
; call core::ptr::write
  call void @_ZN4core3ptr5write17hcb93018d2258e1d4E(ptr %vp, i64 %_8), !dbg !1462
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %m), !dbg !1463
  %_18.0 = extractvalue { i64, i1 } %4, 0, !dbg !1463
  %_18.1 = extractvalue { i64, i1 } %4, 1, !dbg !1463
  %5 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !1463
  br i1 %5, label %panic2, label %bb5, !dbg !1463

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_7d7571b10e1805cbeabe72a0ed3322b6) #13, !dbg !1460
  unreachable, !dbg !1460

bb5:                                              ; preds = %bb2
  %_19.0 = sub i64 %_18.0, 1, !dbg !1463
  %_19.1 = icmp ult i64 %_18.0, 1, !dbg !1463
  %6 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1463
  br i1 %6, label %panic3, label %bb6, !dbg !1463

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_44877d4cfab256733322039b21cb5e72) #13, !dbg !1463
  unreachable, !dbg !1463

bb6:                                              ; preds = %bb5
  %_20 = zext i32 %mm_shift to i64, !dbg !1464
  %_21.0 = sub i64 %_19.0, %_20, !dbg !1463
  %_21.1 = icmp ult i64 %_19.0, %_20, !dbg !1463
  %7 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !1463
  br i1 %7, label %panic4, label %bb7, !dbg !1463

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_44877d4cfab256733322039b21cb5e72) #13, !dbg !1463
  unreachable, !dbg !1463

bb7:                                              ; preds = %bb6
; call ryu::d2s_intrinsics::mul_shift_64
  %_14 = call i64 @_ZN3ryu14d2s_intrinsics12mul_shift_6417hec29767bd4bdb8aeE(i64 %_21.0, ptr align 8 %mul, i32 %j), !dbg !1465
; call core::ptr::write
  call void @_ZN4core3ptr5write17hcb93018d2258e1d4E(ptr %vm, i64 %_14), !dbg !1466
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %m), !dbg !1467
  %_23.0 = extractvalue { i64, i1 } %8, 0, !dbg !1467
  %_23.1 = extractvalue { i64, i1 } %8, 1, !dbg !1467
  %9 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !1467
  br i1 %9, label %panic5, label %bb10, !dbg !1467

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_44877d4cfab256733322039b21cb5e72) #13, !dbg !1463
  unreachable, !dbg !1463

bb10:                                             ; preds = %bb7
; call ryu::d2s_intrinsics::mul_shift_64
  %_0 = call i64 @_ZN3ryu14d2s_intrinsics12mul_shift_6417hec29767bd4bdb8aeE(i64 %_23.0, ptr align 8 %mul, i32 %j), !dbg !1468
  ret i64 %_0, !dbg !1469

panic5:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_a982f97384b36fb94b2a9e835e8876a6) #13, !dbg !1467
  unreachable, !dbg !1467
}

; ryu::f2s::f2d
; Function Attrs: uwtable
define internal { i32, i32 } @_ZN3ryu3f2s3f2d17hc9fc6dfcf037e500E(i32 %ieee_mantissa, i32 %ieee_exponent) unnamed_addr #4 !dbg !1470 {
start:
  %exp.dbg.spill = alloca i32, align 4
  %l.dbg.spill = alloca i32, align 4
  %i.dbg.spill34 = alloca i32, align 4
  %k.dbg.spill30 = alloca i32, align 4
  %q.dbg.spill27 = alloca i32, align 4
  %k.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %q.dbg.spill = alloca i32, align 4
  %mm.dbg.spill = alloca i32, align 4
  %mm_shift.dbg.spill = alloca i32, align 4
  %mp.dbg.spill = alloca i32, align 4
  %mv.dbg.spill = alloca i32, align 4
  %even.dbg.spill = alloca i8, align 1
  %m2.dbg.spill = alloca i32, align 4
  %e2.dbg.spill = alloca i32, align 4
  %ieee_exponent.dbg.spill = alloca i32, align 4
  %ieee_mantissa.dbg.spill = alloca i32, align 4
  %_232 = alloca i8, align 1
  %_209 = alloca i8, align 1
  %output = alloca i32, align 4
  %removed = alloca i32, align 4
  %j = alloca i32, align 4
  %last_removed_digit = alloca i8, align 1
  %vr_is_trailing_zeros = alloca i8, align 1
  %vm_is_trailing_zeros = alloca i8, align 1
  %e10 = alloca i32, align 4
  %vm = alloca i32, align 4
  %vp = alloca i32, align 4
  %vr = alloca i32, align 4
  %_33 = alloca i8, align 1
  %_5 = alloca { i32, i32 }, align 4
  %_0 = alloca %"f2s::FloatingDecimal32", align 4
  store i32 %ieee_mantissa, ptr %ieee_mantissa.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ieee_mantissa.dbg.spill, metadata !1480, metadata !DIExpression()), !dbg !1533
  store i32 %ieee_exponent, ptr %ieee_exponent.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %ieee_exponent.dbg.spill, metadata !1481, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.declare(metadata ptr %vr, metadata !1497, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.declare(metadata ptr %vp, metadata !1499, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.declare(metadata ptr %vm, metadata !1501, metadata !DIExpression()), !dbg !1537
  call void @llvm.dbg.declare(metadata ptr %e10, metadata !1503, metadata !DIExpression()), !dbg !1538
  call void @llvm.dbg.declare(metadata ptr %vm_is_trailing_zeros, metadata !1505, metadata !DIExpression()), !dbg !1539
  call void @llvm.dbg.declare(metadata ptr %vr_is_trailing_zeros, metadata !1507, metadata !DIExpression()), !dbg !1540
  call void @llvm.dbg.declare(metadata ptr %last_removed_digit, metadata !1509, metadata !DIExpression()), !dbg !1541
  call void @llvm.dbg.declare(metadata ptr %j, metadata !1525, metadata !DIExpression()), !dbg !1542
  call void @llvm.dbg.declare(metadata ptr %removed, metadata !1527, metadata !DIExpression()), !dbg !1543
  call void @llvm.dbg.declare(metadata ptr %output, metadata !1529, metadata !DIExpression()), !dbg !1544
  %0 = icmp eq i32 %ieee_exponent, 0, !dbg !1545
  br i1 %0, label %bb1, label %bb5, !dbg !1545

bb1:                                              ; preds = %start
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 1, i32 127), !dbg !1546
  %_9.0 = extractvalue { i32, i1 } %1, 0, !dbg !1546
  %_9.1 = extractvalue { i32, i1 } %1, 1, !dbg !1546
  %2 = call i1 @llvm.expect.i1(i1 %_9.1, i1 false), !dbg !1546
  br i1 %2, label %panic, label %bb2, !dbg !1546

bb5:                                              ; preds = %start
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %ieee_exponent, i32 127), !dbg !1547
  %_17.0 = extractvalue { i32, i1 } %3, 0, !dbg !1547
  %_17.1 = extractvalue { i32, i1 } %3, 1, !dbg !1547
  %4 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !1547
  br i1 %4, label %panic3, label %bb6, !dbg !1547

bb2:                                              ; preds = %bb1
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_9.0, i32 23), !dbg !1546
  %_11.0 = extractvalue { i32, i1 } %5, 0, !dbg !1546
  %_11.1 = extractvalue { i32, i1 } %5, 1, !dbg !1546
  %6 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !1546
  br i1 %6, label %panic1, label %bb3, !dbg !1546

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_959bdc6b2bd7243e0a89c26f70f8ac33) #13, !dbg !1546
  unreachable, !dbg !1546

bb3:                                              ; preds = %bb2
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_11.0, i32 2), !dbg !1546
  %_12.0 = extractvalue { i32, i1 } %7, 0, !dbg !1546
  %_12.1 = extractvalue { i32, i1 } %7, 1, !dbg !1546
  %8 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !1546
  br i1 %8, label %panic2, label %bb4, !dbg !1546

panic1:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_959bdc6b2bd7243e0a89c26f70f8ac33) #13, !dbg !1546
  unreachable, !dbg !1546

bb4:                                              ; preds = %bb3
  store i32 %_12.0, ptr %_5, align 4, !dbg !1548
  %9 = getelementptr inbounds i8, ptr %_5, i64 4, !dbg !1548
  store i32 %ieee_mantissa, ptr %9, align 4, !dbg !1548
  br label %bb10, !dbg !1549

panic2:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_959bdc6b2bd7243e0a89c26f70f8ac33) #13, !dbg !1546
  unreachable, !dbg !1546

bb10:                                             ; preds = %bb8, %bb4
  %e2 = load i32, ptr %_5, align 4, !dbg !1550, !noundef !12
  store i32 %e2, ptr %e2.dbg.spill, align 4, !dbg !1550
  call void @llvm.dbg.declare(metadata ptr %e2.dbg.spill, metadata !1482, metadata !DIExpression()), !dbg !1551
  %10 = getelementptr inbounds i8, ptr %_5, i64 4, !dbg !1552
  %m2 = load i32, ptr %10, align 4, !dbg !1552, !noundef !12
  store i32 %m2, ptr %m2.dbg.spill, align 4, !dbg !1552
  call void @llvm.dbg.declare(metadata ptr %m2.dbg.spill, metadata !1484, metadata !DIExpression()), !dbg !1553
  %_25 = and i32 %m2, 1, !dbg !1554
  %even = icmp eq i32 %_25, 0, !dbg !1554
  %11 = zext i1 %even to i8, !dbg !1554
  store i8 %11, ptr %even.dbg.spill, align 1, !dbg !1554
  call void @llvm.dbg.declare(metadata ptr %even.dbg.spill, metadata !1485, metadata !DIExpression()), !dbg !1555
  call void @llvm.dbg.declare(metadata ptr %even.dbg.spill, metadata !1487, metadata !DIExpression()), !dbg !1556
  %12 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 4, i32 %m2), !dbg !1557
  %_27.0 = extractvalue { i32, i1 } %12, 0, !dbg !1557
  %_27.1 = extractvalue { i32, i1 } %12, 1, !dbg !1557
  %13 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !1557
  br i1 %13, label %panic6, label %bb11, !dbg !1557

bb6:                                              ; preds = %bb5
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_17.0, i32 23), !dbg !1547
  %_19.0 = extractvalue { i32, i1 } %14, 0, !dbg !1547
  %_19.1 = extractvalue { i32, i1 } %14, 1, !dbg !1547
  %15 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1547
  br i1 %15, label %panic4, label %bb7, !dbg !1547

panic3:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_58778619fc47f5485cb4d46aba4c7eb8) #13, !dbg !1547
  unreachable, !dbg !1547

bb7:                                              ; preds = %bb6
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_19.0, i32 2), !dbg !1547
  %_20.0 = extractvalue { i32, i1 } %16, 0, !dbg !1547
  %_20.1 = extractvalue { i32, i1 } %16, 1, !dbg !1547
  %17 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !1547
  br i1 %17, label %panic5, label %bb8, !dbg !1547

panic4:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_58778619fc47f5485cb4d46aba4c7eb8) #13, !dbg !1547
  unreachable, !dbg !1547

bb8:                                              ; preds = %bb7
  %_21 = or i32 8388608, %ieee_mantissa, !dbg !1558
  store i32 %_20.0, ptr %_5, align 4, !dbg !1559
  %18 = getelementptr inbounds i8, ptr %_5, i64 4, !dbg !1559
  store i32 %_21, ptr %18, align 4, !dbg !1559
  br label %bb10, !dbg !1549

panic5:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_58778619fc47f5485cb4d46aba4c7eb8) #13, !dbg !1547
  unreachable, !dbg !1547

bb11:                                             ; preds = %bb10
  store i32 %_27.0, ptr %mv.dbg.spill, align 4, !dbg !1557
  call void @llvm.dbg.declare(metadata ptr %mv.dbg.spill, metadata !1489, metadata !DIExpression()), !dbg !1560
  %19 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 4, i32 %m2), !dbg !1561
  %_30.0 = extractvalue { i32, i1 } %19, 0, !dbg !1561
  %_30.1 = extractvalue { i32, i1 } %19, 1, !dbg !1561
  %20 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false), !dbg !1561
  br i1 %20, label %panic7, label %bb12, !dbg !1561

panic6:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_34ccb67624d548521ce731e88cf325d5) #13, !dbg !1557
  unreachable, !dbg !1557

bb12:                                             ; preds = %bb11
  %21 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_30.0, i32 2), !dbg !1561
  %_31.0 = extractvalue { i32, i1 } %21, 0, !dbg !1561
  %_31.1 = extractvalue { i32, i1 } %21, 1, !dbg !1561
  %22 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !1561
  br i1 %22, label %panic8, label %bb13, !dbg !1561

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_713a2f2fd35b2296b60fe5cefbef5e10) #13, !dbg !1561
  unreachable, !dbg !1561

bb13:                                             ; preds = %bb12
  store i32 %_31.0, ptr %mp.dbg.spill, align 4, !dbg !1561
  call void @llvm.dbg.declare(metadata ptr %mp.dbg.spill, metadata !1491, metadata !DIExpression()), !dbg !1562
  %23 = icmp eq i32 %ieee_mantissa, 0, !dbg !1563
  br i1 %23, label %bb15, label %bb14, !dbg !1563

panic8:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_713a2f2fd35b2296b60fe5cefbef5e10) #13, !dbg !1561
  unreachable, !dbg !1561

bb15:                                             ; preds = %bb13
  %24 = icmp ule i32 %ieee_exponent, 1, !dbg !1564
  %25 = zext i1 %24 to i8, !dbg !1564
  store i8 %25, ptr %_33, align 1, !dbg !1564
  br label %bb16, !dbg !1565

bb14:                                             ; preds = %bb13
  store i8 1, ptr %_33, align 1, !dbg !1565
  br label %bb16, !dbg !1565

bb16:                                             ; preds = %bb14, %bb15
  %26 = load i8, ptr %_33, align 1, !dbg !1565, !range !197, !noundef !12
  %27 = trunc i8 %26 to i1, !dbg !1565
  %mm_shift = zext i1 %27 to i32, !dbg !1565
  store i32 %mm_shift, ptr %mm_shift.dbg.spill, align 4, !dbg !1565
  call void @llvm.dbg.declare(metadata ptr %mm_shift.dbg.spill, metadata !1493, metadata !DIExpression()), !dbg !1566
  %28 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 4, i32 %m2), !dbg !1567
  %_37.0 = extractvalue { i32, i1 } %28, 0, !dbg !1567
  %_37.1 = extractvalue { i32, i1 } %28, 1, !dbg !1567
  %29 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false), !dbg !1567
  br i1 %29, label %panic9, label %bb17, !dbg !1567

bb17:                                             ; preds = %bb16
  %_38.0 = sub i32 %_37.0, 1, !dbg !1567
  %_38.1 = icmp ult i32 %_37.0, 1, !dbg !1567
  %30 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !1567
  br i1 %30, label %panic10, label %bb18, !dbg !1567

panic9:                                           ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_ae50b7d6622a5a93938d20833f04cd0e) #13, !dbg !1567
  unreachable, !dbg !1567

bb18:                                             ; preds = %bb17
  %_39.0 = sub i32 %_38.0, %mm_shift, !dbg !1567
  %_39.1 = icmp ult i32 %_38.0, %mm_shift, !dbg !1567
  %31 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false), !dbg !1567
  br i1 %31, label %panic11, label %bb19, !dbg !1567

panic10:                                          ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_ae50b7d6622a5a93938d20833f04cd0e) #13, !dbg !1567
  unreachable, !dbg !1567

bb19:                                             ; preds = %bb18
  store i32 %_39.0, ptr %mm.dbg.spill, align 4, !dbg !1567
  call void @llvm.dbg.declare(metadata ptr %mm.dbg.spill, metadata !1495, metadata !DIExpression()), !dbg !1568
  store i8 0, ptr %vm_is_trailing_zeros, align 1, !dbg !1569
  store i8 0, ptr %vr_is_trailing_zeros, align 1, !dbg !1570
  store i8 0, ptr %last_removed_digit, align 1, !dbg !1571
  %_47 = icmp sge i32 %e2, 0, !dbg !1572
  br i1 %_47, label %bb20, label %bb58, !dbg !1572

panic11:                                          ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_ae50b7d6622a5a93938d20833f04cd0e) #13, !dbg !1567
  unreachable, !dbg !1567

bb58:                                             ; preds = %bb19
  %_106 = icmp eq i32 %e2, -2147483648, !dbg !1573
  %32 = call i1 @llvm.expect.i1(i1 %_106, i1 false), !dbg !1573
  br i1 %32, label %panic12, label %bb59, !dbg !1573

bb20:                                             ; preds = %bb19
; call ryu::common::log10_pow2
  %q26 = call i32 @_ZN3ryu6common10log10_pow217h88a5810e0666daf6E(i32 %e2), !dbg !1574
  store i32 %q26, ptr %q.dbg.spill27, align 4, !dbg !1574
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill27, metadata !1511, metadata !DIExpression()), !dbg !1575
  store i32 %q26, ptr %e10, align 4, !dbg !1576
; call ryu::common::pow5bits
  %_51 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %q26), !dbg !1577
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 61, i32 %_51), !dbg !1578
  %_53.0 = extractvalue { i32, i1 } %33, 0, !dbg !1578
  %_53.1 = extractvalue { i32, i1 } %33, 1, !dbg !1578
  %34 = call i1 @llvm.expect.i1(i1 %_53.1, i1 false), !dbg !1578
  br i1 %34, label %panic28, label %bb23, !dbg !1578

bb59:                                             ; preds = %bb58
  %_105 = sub i32 0, %e2, !dbg !1573
; call ryu::common::log10_pow5
  %q = call i32 @_ZN3ryu6common10log10_pow517h9cfc9ad07c9e8fa1E(i32 %_105), !dbg !1579
  store i32 %q, ptr %q.dbg.spill, align 4, !dbg !1579
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill, metadata !1519, metadata !DIExpression()), !dbg !1580
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %q, i32 %e2), !dbg !1581
  %_108.0 = extractvalue { i32, i1 } %35, 0, !dbg !1581
  %_108.1 = extractvalue { i32, i1 } %35, 1, !dbg !1581
  %36 = call i1 @llvm.expect.i1(i1 %_108.1, i1 false), !dbg !1581
  br i1 %36, label %panic13, label %bb61, !dbg !1581

panic12:                                          ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_7506742366c6e07e2efe5c624786d18e) #13, !dbg !1573
  unreachable, !dbg !1573

bb61:                                             ; preds = %bb59
  store i32 %_108.0, ptr %e10, align 4, !dbg !1582
  %_111 = icmp eq i32 %e2, -2147483648, !dbg !1583
  %37 = call i1 @llvm.expect.i1(i1 %_111, i1 false), !dbg !1583
  br i1 %37, label %panic14, label %bb62, !dbg !1583

panic13:                                          ; preds = %bb59
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5907f13c2213580acd1f996dc6ca98d4) #13, !dbg !1581
  unreachable, !dbg !1581

bb62:                                             ; preds = %bb61
  %_110 = sub i32 0, %e2, !dbg !1583
  %38 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_110, i32 %q), !dbg !1583
  %_113.0 = extractvalue { i32, i1 } %38, 0, !dbg !1583
  %_113.1 = extractvalue { i32, i1 } %38, 1, !dbg !1583
  %39 = call i1 @llvm.expect.i1(i1 %_113.1, i1 false), !dbg !1583
  br i1 %39, label %panic15, label %bb63, !dbg !1583

panic14:                                          ; preds = %bb61
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_14128ddd2f0d95817b5ca9da71398431) #13, !dbg !1583
  unreachable, !dbg !1583

bb63:                                             ; preds = %bb62
  store i32 %_113.0, ptr %i.dbg.spill, align 4, !dbg !1583
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !1521, metadata !DIExpression()), !dbg !1584
; call ryu::common::pow5bits
  %_115 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %_113.0), !dbg !1585
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_115, i32 61), !dbg !1585
  %_116.0 = extractvalue { i32, i1 } %40, 0, !dbg !1585
  %_116.1 = extractvalue { i32, i1 } %40, 1, !dbg !1585
  %41 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false), !dbg !1585
  br i1 %41, label %panic16, label %bb65, !dbg !1585

panic15:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_14128ddd2f0d95817b5ca9da71398431) #13, !dbg !1583
  unreachable, !dbg !1583

bb65:                                             ; preds = %bb63
  store i32 %_116.0, ptr %k.dbg.spill, align 4, !dbg !1585
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill, metadata !1523, metadata !DIExpression()), !dbg !1586
  %42 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %q, i32 %_116.0), !dbg !1587
  %_119.0 = extractvalue { i32, i1 } %42, 0, !dbg !1587
  %_119.1 = extractvalue { i32, i1 } %42, 1, !dbg !1587
  %43 = call i1 @llvm.expect.i1(i1 %_119.1, i1 false), !dbg !1587
  br i1 %43, label %panic17, label %bb66, !dbg !1587

panic16:                                          ; preds = %bb63
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_f2f68c36525d96f9c096b991c6e62094) #13, !dbg !1585
  unreachable, !dbg !1585

bb66:                                             ; preds = %bb65
  store i32 %_119.0, ptr %j, align 4, !dbg !1587
  %_122 = load i32, ptr %j, align 4, !dbg !1588, !noundef !12
; call ryu::f2s_intrinsics::mul_pow5_div_pow2
  %_120 = call i32 @_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E(i32 %_27.0, i32 %_113.0, i32 %_122), !dbg !1589
  store i32 %_120, ptr %vr, align 4, !dbg !1590
  %_125 = load i32, ptr %j, align 4, !dbg !1591, !noundef !12
; call ryu::f2s_intrinsics::mul_pow5_div_pow2
  %_123 = call i32 @_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E(i32 %_31.0, i32 %_113.0, i32 %_125), !dbg !1592
  store i32 %_123, ptr %vp, align 4, !dbg !1593
  %_128 = load i32, ptr %j, align 4, !dbg !1594, !noundef !12
; call ryu::f2s_intrinsics::mul_pow5_div_pow2
  %_126 = call i32 @_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E(i32 %_39.0, i32 %_113.0, i32 %_128), !dbg !1595
  store i32 %_126, ptr %vm, align 4, !dbg !1596
  %44 = icmp eq i32 %q, 0, !dbg !1597
  br i1 %44, label %bb83, label %bb70, !dbg !1597

panic17:                                          ; preds = %bb65
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_eb1bdec06d0056561bf53e0f3539a4eb) #13, !dbg !1587
  unreachable, !dbg !1587

bb83:                                             ; preds = %bb80, %bb71, %bb66
  %_154 = icmp ule i32 %q, 1, !dbg !1598
  br i1 %_154, label %bb84, label %bb88, !dbg !1598

bb70:                                             ; preds = %bb66
  %_132 = load i32, ptr %vp, align 4, !dbg !1599, !noundef !12
  %_133.0 = sub i32 %_132, 1, !dbg !1600
  %_133.1 = icmp ult i32 %_132, 1, !dbg !1600
  %45 = call i1 @llvm.expect.i1(i1 %_133.1, i1 false), !dbg !1600
  br i1 %45, label %panic18, label %bb71, !dbg !1600

bb71:                                             ; preds = %bb70
  %_130 = udiv i32 %_133.0, 10, !dbg !1600
  %_136 = load i32, ptr %vm, align 4, !dbg !1601, !noundef !12
  %_135 = udiv i32 %_136, 10, !dbg !1601
  %_129 = icmp ule i32 %_130, %_135, !dbg !1600
  br i1 %_129, label %bb74, label %bb83, !dbg !1600

panic18:                                          ; preds = %bb70
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_66ee51fc1fc9db1b750394ac7c9b6d6f) #13, !dbg !1600
  unreachable, !dbg !1600

bb74:                                             ; preds = %bb71
  %46 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %q, i32 1), !dbg !1602
  %_140.0 = extractvalue { i32, i1 } %46, 0, !dbg !1602
  %_140.1 = extractvalue { i32, i1 } %46, 1, !dbg !1602
  %47 = call i1 @llvm.expect.i1(i1 %_140.1, i1 false), !dbg !1602
  br i1 %47, label %panic19, label %bb75, !dbg !1602

bb75:                                             ; preds = %bb74
  %48 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_113.0, i32 1), !dbg !1603
  %_144.0 = extractvalue { i32, i1 } %48, 0, !dbg !1603
  %_144.1 = extractvalue { i32, i1 } %48, 1, !dbg !1603
  %49 = call i1 @llvm.expect.i1(i1 %_144.1, i1 false), !dbg !1603
  br i1 %49, label %panic20, label %bb76, !dbg !1603

panic19:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_2592d46cb4b15607399aac17f60550e2) #13, !dbg !1602
  unreachable, !dbg !1602

bb76:                                             ; preds = %bb75
; call ryu::common::pow5bits
  %_142 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %_144.0), !dbg !1604
  %50 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_142, i32 61), !dbg !1605
  %_145.0 = extractvalue { i32, i1 } %50, 0, !dbg !1605
  %_145.1 = extractvalue { i32, i1 } %50, 1, !dbg !1605
  %51 = call i1 @llvm.expect.i1(i1 %_145.1, i1 false), !dbg !1605
  br i1 %51, label %panic21, label %bb78, !dbg !1605

panic20:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_a36b8337ceb7f32cf4d8d725282c8fa2) #13, !dbg !1603
  unreachable, !dbg !1603

bb78:                                             ; preds = %bb76
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_140.0, i32 %_145.0), !dbg !1602
  %_146.0 = extractvalue { i32, i1 } %52, 0, !dbg !1602
  %_146.1 = extractvalue { i32, i1 } %52, 1, !dbg !1602
  %53 = call i1 @llvm.expect.i1(i1 %_146.1, i1 false), !dbg !1602
  br i1 %53, label %panic22, label %bb79, !dbg !1602

panic21:                                          ; preds = %bb76
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_7862ff8857e017e28e821ade7a98ee17) #13, !dbg !1605
  unreachable, !dbg !1605

bb79:                                             ; preds = %bb78
  store i32 %_146.0, ptr %j, align 4, !dbg !1606
  %54 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_113.0, i32 1), !dbg !1607
  %_151.0 = extractvalue { i32, i1 } %54, 0, !dbg !1607
  %_151.1 = extractvalue { i32, i1 } %54, 1, !dbg !1607
  %55 = call i1 @llvm.expect.i1(i1 %_151.1, i1 false), !dbg !1607
  br i1 %55, label %panic23, label %bb80, !dbg !1607

panic22:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_2592d46cb4b15607399aac17f60550e2) #13, !dbg !1602
  unreachable, !dbg !1602

bb80:                                             ; preds = %bb79
  %_152 = load i32, ptr %j, align 4, !dbg !1608, !noundef !12
; call ryu::f2s_intrinsics::mul_pow5_div_pow2
  %_148 = call i32 @_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E(i32 %_27.0, i32 %_151.0, i32 %_152), !dbg !1609
  %_147 = urem i32 %_148, 10, !dbg !1610
  %56 = trunc i32 %_147 to i8, !dbg !1611
  store i8 %56, ptr %last_removed_digit, align 1, !dbg !1611
  br label %bb83, !dbg !1612

panic23:                                          ; preds = %bb79
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c43bba12b67af7147791a1190c87ebf6) #13, !dbg !1607
  unreachable, !dbg !1607

bb88:                                             ; preds = %bb83
  %_156 = icmp ult i32 %q, 31, !dbg !1613
  br i1 %_156, label %bb89, label %bb92, !dbg !1613

bb84:                                             ; preds = %bb83
  store i8 1, ptr %vr_is_trailing_zeros, align 1, !dbg !1614
  br i1 %even, label %bb85, label %bb86, !dbg !1615

bb92:                                             ; preds = %bb53, %bb57, %bb50, %bb47, %bb85, %bb87, %bb90, %bb88
  store i32 0, ptr %removed, align 4, !dbg !1616
  %57 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1617, !range !197, !noundef !12
  %_162 = trunc i8 %57 to i1, !dbg !1617
  br i1 %_162, label %bb94.preheader, label %bb93, !dbg !1617

bb89:                                             ; preds = %bb88
  %_159.0 = sub i32 %q, 1, !dbg !1618
  %_159.1 = icmp ult i32 %q, 1, !dbg !1618
  %58 = call i1 @llvm.expect.i1(i1 %_159.1, i1 false), !dbg !1618
  br i1 %58, label %panic24, label %bb90, !dbg !1618

bb90:                                             ; preds = %bb89
; call ryu::f2s_intrinsics::multiple_of_power_of_2_32
  %_157 = call zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_2_3217h50fc3469b5fdb11cE(i32 %_27.0, i32 %_159.0), !dbg !1619
  %59 = zext i1 %_157 to i8, !dbg !1620
  store i8 %59, ptr %vr_is_trailing_zeros, align 1, !dbg !1620
  br label %bb92, !dbg !1621

panic24:                                          ; preds = %bb89
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_0ff39c99799b916df0b9bf3878a6f57a) #13, !dbg !1618
  unreachable, !dbg !1618

bb86:                                             ; preds = %bb84
  %60 = load i32, ptr %vp, align 4, !dbg !1622, !noundef !12
  %_155.0 = sub i32 %60, 1, !dbg !1622
  %_155.1 = icmp ult i32 %60, 1, !dbg !1622
  %61 = call i1 @llvm.expect.i1(i1 %_155.1, i1 false), !dbg !1622
  br i1 %61, label %panic25, label %bb87, !dbg !1622

bb85:                                             ; preds = %bb84
  %62 = icmp eq i32 %mm_shift, 1, !dbg !1623
  %63 = zext i1 %62 to i8, !dbg !1623
  store i8 %63, ptr %vm_is_trailing_zeros, align 1, !dbg !1623
  br label %bb92, !dbg !1624

bb87:                                             ; preds = %bb86
  store i32 %_155.0, ptr %vp, align 4, !dbg !1622
  br label %bb92, !dbg !1624

panic25:                                          ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_24cc65ce095b9519e5cca34f4dfad1cc) #13, !dbg !1622
  unreachable, !dbg !1622

bb23:                                             ; preds = %bb20
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_53.0, i32 1), !dbg !1578
  %_54.0 = extractvalue { i32, i1 } %64, 0, !dbg !1578
  %_54.1 = extractvalue { i32, i1 } %64, 1, !dbg !1578
  %65 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !1578
  br i1 %65, label %panic29, label %bb24, !dbg !1578

panic28:                                          ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_07017f036992df221e9cb016c45a16e2) #13, !dbg !1578
  unreachable, !dbg !1578

bb24:                                             ; preds = %bb23
  store i32 %_54.0, ptr %k.dbg.spill30, align 4, !dbg !1578
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill30, metadata !1513, metadata !DIExpression()), !dbg !1625
  %_58 = icmp eq i32 %e2, -2147483648, !dbg !1626
  %66 = call i1 @llvm.expect.i1(i1 %_58, i1 false), !dbg !1626
  br i1 %66, label %panic31, label %bb25, !dbg !1626

panic29:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_07017f036992df221e9cb016c45a16e2) #13, !dbg !1578
  unreachable, !dbg !1578

bb25:                                             ; preds = %bb24
  %_57 = sub i32 0, %e2, !dbg !1626
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_57, i32 %q26), !dbg !1626
  %_60.0 = extractvalue { i32, i1 } %67, 0, !dbg !1626
  %_60.1 = extractvalue { i32, i1 } %67, 1, !dbg !1626
  %68 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !1626
  br i1 %68, label %panic32, label %bb26, !dbg !1626

panic31:                                          ; preds = %bb24
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_38ca012ee5e8e20e9a7c3b1668b8b0cf) #13, !dbg !1626
  unreachable, !dbg !1626

bb26:                                             ; preds = %bb25
  %69 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_60.0, i32 %_54.0), !dbg !1626
  %_61.0 = extractvalue { i32, i1 } %69, 0, !dbg !1626
  %_61.1 = extractvalue { i32, i1 } %69, 1, !dbg !1626
  %70 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false), !dbg !1626
  br i1 %70, label %panic33, label %bb27, !dbg !1626

panic32:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_38ca012ee5e8e20e9a7c3b1668b8b0cf) #13, !dbg !1626
  unreachable, !dbg !1626

bb27:                                             ; preds = %bb26
  store i32 %_61.0, ptr %i.dbg.spill34, align 4, !dbg !1626
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill34, metadata !1515, metadata !DIExpression()), !dbg !1627
; call ryu::f2s_intrinsics::mul_pow5_inv_div_pow2
  %_62 = call i32 @_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E(i32 %_27.0, i32 %q26, i32 %_61.0), !dbg !1628
  store i32 %_62, ptr %vr, align 4, !dbg !1629
; call ryu::f2s_intrinsics::mul_pow5_inv_div_pow2
  %_63 = call i32 @_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E(i32 %_31.0, i32 %q26, i32 %_61.0), !dbg !1630
  store i32 %_63, ptr %vp, align 4, !dbg !1631
; call ryu::f2s_intrinsics::mul_pow5_inv_div_pow2
  %_64 = call i32 @_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E(i32 %_39.0, i32 %q26, i32 %_61.0), !dbg !1632
  store i32 %_64, ptr %vm, align 4, !dbg !1633
  %71 = icmp eq i32 %q26, 0, !dbg !1634
  br i1 %71, label %bb47, label %bb31, !dbg !1634

panic33:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_38ca012ee5e8e20e9a7c3b1668b8b0cf) #13, !dbg !1626
  unreachable, !dbg !1626

bb47:                                             ; preds = %bb44, %bb32, %bb27
  %_96 = icmp ule i32 %q26, 9, !dbg !1635
  br i1 %_96, label %bb48, label %bb92, !dbg !1635

bb31:                                             ; preds = %bb27
  %_68 = load i32, ptr %vp, align 4, !dbg !1636, !noundef !12
  %_69.0 = sub i32 %_68, 1, !dbg !1637
  %_69.1 = icmp ult i32 %_68, 1, !dbg !1637
  %72 = call i1 @llvm.expect.i1(i1 %_69.1, i1 false), !dbg !1637
  br i1 %72, label %panic35, label %bb32, !dbg !1637

bb32:                                             ; preds = %bb31
  %_66 = udiv i32 %_69.0, 10, !dbg !1637
  %_72 = load i32, ptr %vm, align 4, !dbg !1638, !noundef !12
  %_71 = udiv i32 %_72, 10, !dbg !1638
  %_65 = icmp ule i32 %_66, %_71, !dbg !1637
  br i1 %_65, label %bb35, label %bb47, !dbg !1637

panic35:                                          ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_473cce1f49550d3b707e497bfa0a3211) #13, !dbg !1637
  unreachable, !dbg !1637

bb35:                                             ; preds = %bb32
  %73 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %q26, i32 1), !dbg !1639
  %_79.0 = extractvalue { i32, i1 } %73, 0, !dbg !1639
  %_79.1 = extractvalue { i32, i1 } %73, 1, !dbg !1639
  %74 = call i1 @llvm.expect.i1(i1 %_79.1, i1 false), !dbg !1639
  br i1 %74, label %panic36, label %bb36, !dbg !1639

bb36:                                             ; preds = %bb35
; call ryu::common::pow5bits
  %_76 = call i32 @_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E(i32 %_79.0), !dbg !1640
  %75 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 61, i32 %_76), !dbg !1641
  %_80.0 = extractvalue { i32, i1 } %75, 0, !dbg !1641
  %_80.1 = extractvalue { i32, i1 } %75, 1, !dbg !1641
  %76 = call i1 @llvm.expect.i1(i1 %_80.1, i1 false), !dbg !1641
  br i1 %76, label %panic37, label %bb38, !dbg !1641

panic36:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_18ec4a60e11b3d1366861269a4c89baf) #13, !dbg !1639
  unreachable, !dbg !1639

bb38:                                             ; preds = %bb36
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_80.0, i32 1), !dbg !1641
  %_81.0 = extractvalue { i32, i1 } %77, 0, !dbg !1641
  %_81.1 = extractvalue { i32, i1 } %77, 1, !dbg !1641
  %78 = call i1 @llvm.expect.i1(i1 %_81.1, i1 false), !dbg !1641
  br i1 %78, label %panic38, label %bb39, !dbg !1641

panic37:                                          ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_f6006c282613035085e79596953b7632) #13, !dbg !1641
  unreachable, !dbg !1641

bb39:                                             ; preds = %bb38
  store i32 %_81.0, ptr %l.dbg.spill, align 4, !dbg !1641
  call void @llvm.dbg.declare(metadata ptr %l.dbg.spill, metadata !1517, metadata !DIExpression()), !dbg !1642
  %_85.0 = sub i32 %q26, 1, !dbg !1643
  %_85.1 = icmp ult i32 %q26, 1, !dbg !1643
  %79 = call i1 @llvm.expect.i1(i1 %_85.1, i1 false), !dbg !1643
  br i1 %79, label %panic39, label %bb40, !dbg !1643

panic38:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_f6006c282613035085e79596953b7632) #13, !dbg !1641
  unreachable, !dbg !1641

bb40:                                             ; preds = %bb39
  %_90 = icmp eq i32 %e2, -2147483648, !dbg !1644
  %80 = call i1 @llvm.expect.i1(i1 %_90, i1 false), !dbg !1644
  br i1 %80, label %panic40, label %bb41, !dbg !1644

panic39:                                          ; preds = %bb39
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_3e74163b07bd90010f445bed7931a1bb) #13, !dbg !1643
  unreachable, !dbg !1643

bb41:                                             ; preds = %bb40
  %_89 = sub i32 0, %e2, !dbg !1644
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_89, i32 %q26), !dbg !1644
  %_92.0 = extractvalue { i32, i1 } %81, 0, !dbg !1644
  %_92.1 = extractvalue { i32, i1 } %81, 1, !dbg !1644
  %82 = call i1 @llvm.expect.i1(i1 %_92.1, i1 false), !dbg !1644
  br i1 %82, label %panic41, label %bb42, !dbg !1644

panic40:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_87cda37955f9f4353c434bf351ec10ec) #13, !dbg !1644
  unreachable, !dbg !1644

bb42:                                             ; preds = %bb41
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %_92.0, i32 1), !dbg !1644
  %_93.0 = extractvalue { i32, i1 } %83, 0, !dbg !1644
  %_93.1 = extractvalue { i32, i1 } %83, 1, !dbg !1644
  %84 = call i1 @llvm.expect.i1(i1 %_93.1, i1 false), !dbg !1644
  br i1 %84, label %panic42, label %bb43, !dbg !1644

panic41:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_87cda37955f9f4353c434bf351ec10ec) #13, !dbg !1644
  unreachable, !dbg !1644

bb43:                                             ; preds = %bb42
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_93.0, i32 %_81.0), !dbg !1644
  %_94.0 = extractvalue { i32, i1 } %85, 0, !dbg !1644
  %_94.1 = extractvalue { i32, i1 } %85, 1, !dbg !1644
  %86 = call i1 @llvm.expect.i1(i1 %_94.1, i1 false), !dbg !1644
  br i1 %86, label %panic43, label %bb44, !dbg !1644

panic42:                                          ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_87cda37955f9f4353c434bf351ec10ec) #13, !dbg !1644
  unreachable, !dbg !1644

bb44:                                             ; preds = %bb43
; call ryu::f2s_intrinsics::mul_pow5_inv_div_pow2
  %_83 = call i32 @_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E(i32 %_27.0, i32 %_85.0, i32 %_94.0), !dbg !1645
  %_82 = urem i32 %_83, 10, !dbg !1646
  %87 = trunc i32 %_82 to i8, !dbg !1647
  store i8 %87, ptr %last_removed_digit, align 1, !dbg !1647
  br label %bb47, !dbg !1648

panic43:                                          ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_87cda37955f9f4353c434bf351ec10ec) #13, !dbg !1644
  unreachable, !dbg !1644

bb48:                                             ; preds = %bb47
  %_97 = urem i32 %_27.0, 5, !dbg !1649
  %88 = icmp eq i32 %_97, 0, !dbg !1649
  br i1 %88, label %bb50, label %bb52, !dbg !1649

bb50:                                             ; preds = %bb48
; call ryu::f2s_intrinsics::multiple_of_power_of_5_32
  %_99 = call zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_5_3217h3e39fb323830ec33E(i32 %_27.0, i32 %q26), !dbg !1650
  %89 = zext i1 %_99 to i8, !dbg !1651
  store i8 %89, ptr %vr_is_trailing_zeros, align 1, !dbg !1651
  br label %bb92, !dbg !1652

bb52:                                             ; preds = %bb48
  br i1 %even, label %bb53, label %bb55, !dbg !1653

bb55:                                             ; preds = %bb52
; call ryu::f2s_intrinsics::multiple_of_power_of_5_32
  %_102 = call zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_5_3217h3e39fb323830ec33E(i32 %_31.0, i32 %q26), !dbg !1654
  %_101 = zext i1 %_102 to i32, !dbg !1654
  %90 = load i32, ptr %vp, align 4, !dbg !1655, !noundef !12
  %_103.0 = sub i32 %90, %_101, !dbg !1655
  %_103.1 = icmp ult i32 %90, %_101, !dbg !1655
  %91 = call i1 @llvm.expect.i1(i1 %_103.1, i1 false), !dbg !1655
  br i1 %91, label %panic44, label %bb57, !dbg !1655

bb53:                                             ; preds = %bb52
; call ryu::f2s_intrinsics::multiple_of_power_of_5_32
  %_100 = call zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_5_3217h3e39fb323830ec33E(i32 %_39.0, i32 %q26), !dbg !1656
  %92 = zext i1 %_100 to i8, !dbg !1657
  store i8 %92, ptr %vm_is_trailing_zeros, align 1, !dbg !1657
  br label %bb92, !dbg !1658

bb57:                                             ; preds = %bb55
  store i32 %_103.0, ptr %vp, align 4, !dbg !1655
  br label %bb92, !dbg !1658

panic44:                                          ; preds = %bb55
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_bac8d44bc7a0032c8d54518ea72e9499) #13, !dbg !1655
  unreachable, !dbg !1655

bb93:                                             ; preds = %bb92
  %93 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1659, !range !197, !noundef !12
  %_163 = trunc i8 %93 to i1, !dbg !1659
  br i1 %_163, label %bb94.preheader, label %bb127.preheader, !dbg !1659

bb127.preheader:                                  ; preds = %bb93
  br label %bb127, !dbg !1660

bb94.preheader:                                   ; preds = %bb92, %bb93
  br label %bb94, !dbg !1661

bb94:                                             ; preds = %bb94.preheader, %bb105
  %_166 = load i32, ptr %vp, align 4, !dbg !1661, !noundef !12
  %_165 = udiv i32 %_166, 10, !dbg !1661
  %_169 = load i32, ptr %vm, align 4, !dbg !1662, !noundef !12
  %_168 = udiv i32 %_169, 10, !dbg !1662
  %_164 = icmp ugt i32 %_165, %_168, !dbg !1661
  br i1 %_164, label %bb97, label %bb106, !dbg !1661

bb127:                                            ; preds = %bb127.preheader, %bb135
  %_218 = load i32, ptr %vp, align 4, !dbg !1660, !noundef !12
  %_217 = udiv i32 %_218, 10, !dbg !1660
  %_221 = load i32, ptr %vm, align 4, !dbg !1663, !noundef !12
  %_220 = udiv i32 %_221, 10, !dbg !1663
  %_216 = icmp ugt i32 %_217, %_220, !dbg !1660
  br i1 %_216, label %bb130, label %bb136, !dbg !1660

bb136:                                            ; preds = %bb127
  %_230 = load i32, ptr %vr, align 4, !dbg !1664, !noundef !12
  %_234 = load i32, ptr %vr, align 4, !dbg !1665, !noundef !12
  %_235 = load i32, ptr %vm, align 4, !dbg !1666, !noundef !12
  %_233 = icmp eq i32 %_234, %_235, !dbg !1665
  br i1 %_233, label %bb137, label %bb138, !dbg !1665

bb130:                                            ; preds = %bb127
  %_224 = load i32, ptr %vr, align 4, !dbg !1667, !noundef !12
  %_223 = urem i32 %_224, 10, !dbg !1668
  %94 = trunc i32 %_223 to i8, !dbg !1669
  store i8 %94, ptr %last_removed_digit, align 1, !dbg !1669
  %95 = load i32, ptr %vr, align 4, !dbg !1670, !noundef !12
  %96 = udiv i32 %95, 10, !dbg !1670
  store i32 %96, ptr %vr, align 4, !dbg !1670
  %97 = load i32, ptr %vp, align 4, !dbg !1671, !noundef !12
  %98 = udiv i32 %97, 10, !dbg !1671
  store i32 %98, ptr %vp, align 4, !dbg !1671
  %99 = load i32, ptr %vm, align 4, !dbg !1672, !noundef !12
  %100 = udiv i32 %99, 10, !dbg !1672
  store i32 %100, ptr %vm, align 4, !dbg !1672
  %101 = load i32, ptr %removed, align 4, !dbg !1673, !noundef !12
  %102 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 1), !dbg !1673
  %_229.0 = extractvalue { i32, i1 } %102, 0, !dbg !1673
  %_229.1 = extractvalue { i32, i1 } %102, 1, !dbg !1673
  %103 = call i1 @llvm.expect.i1(i1 %_229.1, i1 false), !dbg !1673
  br i1 %103, label %panic46, label %bb135, !dbg !1673

bb138:                                            ; preds = %bb136
  %_236 = load i8, ptr %last_removed_digit, align 1, !dbg !1674, !noundef !12
  %104 = icmp uge i8 %_236, 5, !dbg !1674
  %105 = zext i1 %104 to i8, !dbg !1674
  store i8 %105, ptr %_232, align 1, !dbg !1674
  br label %bb139, !dbg !1675

bb137:                                            ; preds = %bb136
  store i8 1, ptr %_232, align 1, !dbg !1675
  br label %bb139, !dbg !1675

bb139:                                            ; preds = %bb137, %bb138
  %106 = load i8, ptr %_232, align 1, !dbg !1675, !range !197, !noundef !12
  %107 = trunc i8 %106 to i1, !dbg !1675
  %_231 = zext i1 %107 to i32, !dbg !1675
  %108 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_230, i32 %_231), !dbg !1664
  %_237.0 = extractvalue { i32, i1 } %108, 0, !dbg !1664
  %_237.1 = extractvalue { i32, i1 } %108, 1, !dbg !1664
  %109 = call i1 @llvm.expect.i1(i1 %_237.1, i1 false), !dbg !1664
  br i1 %109, label %panic45, label %bb140, !dbg !1664

bb140:                                            ; preds = %bb139
  store i32 %_237.0, ptr %output, align 4, !dbg !1664
  br label %bb141, !dbg !1676

panic45:                                          ; preds = %bb139
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_db1c3d79a118b184f183501d7ae4f4ce) #13, !dbg !1664
  unreachable, !dbg !1664

bb141:                                            ; preds = %bb126, %bb140
  %_239 = load i32, ptr %e10, align 4, !dbg !1677, !noundef !12
  %_240 = load i32, ptr %removed, align 4, !dbg !1678, !noundef !12
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_239, i32 %_240), !dbg !1677
  %_241.0 = extractvalue { i32, i1 } %110, 0, !dbg !1677
  %_241.1 = extractvalue { i32, i1 } %110, 1, !dbg !1677
  %111 = call i1 @llvm.expect.i1(i1 %_241.1, i1 false), !dbg !1677
  br i1 %111, label %panic49, label %bb142, !dbg !1677

bb135:                                            ; preds = %bb130
  store i32 %_229.0, ptr %removed, align 4, !dbg !1673
  br label %bb127, !dbg !1679

panic46:                                          ; preds = %bb130
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_936c277d70bdb528f576a573639b3669) #13, !dbg !1673
  unreachable, !dbg !1673

bb106:                                            ; preds = %bb94
  %112 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1680, !range !197, !noundef !12
  %_189 = trunc i8 %112 to i1, !dbg !1680
  br i1 %_189, label %bb107.preheader, label %bb115, !dbg !1680

bb107.preheader:                                  ; preds = %bb106
  br label %bb107, !dbg !1681

bb97:                                             ; preds = %bb94
  %_173 = load i32, ptr %vm, align 4, !dbg !1682, !noundef !12
  %_176 = load i32, ptr %vm, align 4, !dbg !1683, !noundef !12
  %_175 = udiv i32 %_176, 10, !dbg !1684
  %113 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_175, i32 10), !dbg !1684
  %_178.0 = extractvalue { i32, i1 } %113, 0, !dbg !1684
  %_178.1 = extractvalue { i32, i1 } %113, 1, !dbg !1684
  %114 = call i1 @llvm.expect.i1(i1 %_178.1, i1 false), !dbg !1684
  br i1 %114, label %panic50, label %bb99, !dbg !1684

bb115.loopexit:                                   ; preds = %bb107
  br label %bb115, !dbg !1685

bb115:                                            ; preds = %bb115.loopexit, %bb106
  %115 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1685, !range !197, !noundef !12
  %_202 = trunc i8 %115 to i1, !dbg !1685
  br i1 %_202, label %bb116, label %bb120, !dbg !1685

bb107:                                            ; preds = %bb107.preheader, %bb114
  %_191 = load i32, ptr %vm, align 4, !dbg !1681, !noundef !12
  %_190 = urem i32 %_191, 10, !dbg !1681
  %116 = icmp eq i32 %_190, 0, !dbg !1681
  br i1 %116, label %bb109, label %bb115.loopexit, !dbg !1681

bb109:                                            ; preds = %bb107
  %_194 = load i8, ptr %last_removed_digit, align 1, !dbg !1686, !noundef !12
  %_193 = icmp eq i8 %_194, 0, !dbg !1686
  %117 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1687, !range !197, !noundef !12
  %118 = trunc i8 %117 to i1, !dbg !1687
  %119 = and i1 %118, %_193, !dbg !1687
  %120 = zext i1 %119 to i8, !dbg !1687
  store i8 %120, ptr %vr_is_trailing_zeros, align 1, !dbg !1687
  %_196 = load i32, ptr %vr, align 4, !dbg !1688, !noundef !12
  %_195 = urem i32 %_196, 10, !dbg !1689
  %121 = trunc i32 %_195 to i8, !dbg !1690
  store i8 %121, ptr %last_removed_digit, align 1, !dbg !1690
  %122 = load i32, ptr %vr, align 4, !dbg !1691, !noundef !12
  %123 = udiv i32 %122, 10, !dbg !1691
  store i32 %123, ptr %vr, align 4, !dbg !1691
  %124 = load i32, ptr %vp, align 4, !dbg !1692, !noundef !12
  %125 = udiv i32 %124, 10, !dbg !1692
  store i32 %125, ptr %vp, align 4, !dbg !1692
  %126 = load i32, ptr %vm, align 4, !dbg !1693, !noundef !12
  %127 = udiv i32 %126, 10, !dbg !1693
  store i32 %127, ptr %vm, align 4, !dbg !1693
  %128 = load i32, ptr %removed, align 4, !dbg !1694, !noundef !12
  %129 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 1), !dbg !1694
  %_201.0 = extractvalue { i32, i1 } %129, 0, !dbg !1694
  %_201.1 = extractvalue { i32, i1 } %129, 1, !dbg !1694
  %130 = call i1 @llvm.expect.i1(i1 %_201.1, i1 false), !dbg !1694
  br i1 %130, label %panic47, label %bb114, !dbg !1694

bb114:                                            ; preds = %bb109
  store i32 %_201.0, ptr %removed, align 4, !dbg !1694
  br label %bb107, !dbg !1695

panic47:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b073df6047be0075926b51fcbede90d1) #13, !dbg !1694
  unreachable, !dbg !1694

bb120:                                            ; preds = %bb119, %bb117, %bb116, %bb115
  %_207 = load i32, ptr %vr, align 4, !dbg !1696, !noundef !12
  %_211 = load i32, ptr %vr, align 4, !dbg !1697, !noundef !12
  %_212 = load i32, ptr %vm, align 4, !dbg !1698, !noundef !12
  %_210 = icmp eq i32 %_211, %_212, !dbg !1697
  br i1 %_210, label %bb121, label %bb124, !dbg !1697

bb116:                                            ; preds = %bb115
  %_203 = load i8, ptr %last_removed_digit, align 1, !dbg !1699, !noundef !12
  %131 = icmp eq i8 %_203, 5, !dbg !1699
  br i1 %131, label %bb117, label %bb120, !dbg !1699

bb117:                                            ; preds = %bb116
  %_205 = load i32, ptr %vr, align 4, !dbg !1700, !noundef !12
  %_204 = urem i32 %_205, 2, !dbg !1700
  %132 = icmp eq i32 %_204, 0, !dbg !1700
  br i1 %132, label %bb119, label %bb120, !dbg !1700

bb119:                                            ; preds = %bb117
  store i8 4, ptr %last_removed_digit, align 1, !dbg !1701
  br label %bb120, !dbg !1702

bb124:                                            ; preds = %bb122, %bb120
  %_214 = load i8, ptr %last_removed_digit, align 1, !dbg !1703, !noundef !12
  %133 = icmp uge i8 %_214, 5, !dbg !1703
  %134 = zext i1 %133 to i8, !dbg !1703
  store i8 %134, ptr %_209, align 1, !dbg !1703
  br label %bb125, !dbg !1704

bb121:                                            ; preds = %bb120
  br i1 %even, label %bb122, label %bb123, !dbg !1705

bb123:                                            ; preds = %bb122, %bb121
  store i8 1, ptr %_209, align 1, !dbg !1704
  br label %bb125, !dbg !1704

bb122:                                            ; preds = %bb121
  %135 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1706, !range !197, !noundef !12
  %_213 = trunc i8 %135 to i1, !dbg !1706
  br i1 %_213, label %bb124, label %bb123, !dbg !1706

bb125:                                            ; preds = %bb124, %bb123
  %136 = load i8, ptr %_209, align 1, !dbg !1704, !range !197, !noundef !12
  %137 = trunc i8 %136 to i1, !dbg !1704
  %_208 = zext i1 %137 to i32, !dbg !1704
  %138 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %_207, i32 %_208), !dbg !1696
  %_215.0 = extractvalue { i32, i1 } %138, 0, !dbg !1696
  %_215.1 = extractvalue { i32, i1 } %138, 1, !dbg !1696
  %139 = call i1 @llvm.expect.i1(i1 %_215.1, i1 false), !dbg !1696
  br i1 %139, label %panic48, label %bb126, !dbg !1696

bb126:                                            ; preds = %bb125
  store i32 %_215.0, ptr %output, align 4, !dbg !1696
  br label %bb141, !dbg !1676

panic48:                                          ; preds = %bb125
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_de7da9cb4d5ddeeca07284d24db3dd7d) #13, !dbg !1696
  unreachable, !dbg !1696

bb142:                                            ; preds = %bb141
  store i32 %_241.0, ptr %exp.dbg.spill, align 4, !dbg !1677
  call void @llvm.dbg.declare(metadata ptr %exp.dbg.spill, metadata !1531, metadata !DIExpression()), !dbg !1707
  %_242 = load i32, ptr %output, align 4, !dbg !1708, !noundef !12
  store i32 %_242, ptr %_0, align 4, !dbg !1709
  %140 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !1709
  store i32 %_241.0, ptr %140, align 4, !dbg !1709
  %141 = load i32, ptr %_0, align 4, !dbg !1710, !noundef !12
  %142 = getelementptr inbounds i8, ptr %_0, i64 4, !dbg !1710
  %143 = load i32, ptr %142, align 4, !dbg !1710, !noundef !12
  %144 = insertvalue { i32, i32 } poison, i32 %141, 0, !dbg !1710
  %145 = insertvalue { i32, i32 } %144, i32 %143, 1, !dbg !1710
  ret { i32, i32 } %145, !dbg !1710

panic49:                                          ; preds = %bb141
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_402687a25544ad3e1f0e0be61968008c) #13, !dbg !1677
  unreachable, !dbg !1677

bb99:                                             ; preds = %bb97
  %_179.0 = sub i32 %_173, %_178.0, !dbg !1682
  %_179.1 = icmp ult i32 %_173, %_178.0, !dbg !1682
  %146 = call i1 @llvm.expect.i1(i1 %_179.1, i1 false), !dbg !1682
  br i1 %146, label %panic51, label %bb100, !dbg !1682

panic50:                                          ; preds = %bb97
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_16304998a6ce59a0e53cabb302e17a41) #13, !dbg !1684
  unreachable, !dbg !1684

bb100:                                            ; preds = %bb99
  %_171 = icmp eq i32 %_179.0, 0, !dbg !1682
  %147 = load i8, ptr %vm_is_trailing_zeros, align 1, !dbg !1711, !range !197, !noundef !12
  %148 = trunc i8 %147 to i1, !dbg !1711
  %149 = and i1 %148, %_171, !dbg !1711
  %150 = zext i1 %149 to i8, !dbg !1711
  store i8 %150, ptr %vm_is_trailing_zeros, align 1, !dbg !1711
  %_181 = load i8, ptr %last_removed_digit, align 1, !dbg !1712, !noundef !12
  %_180 = icmp eq i8 %_181, 0, !dbg !1712
  %151 = load i8, ptr %vr_is_trailing_zeros, align 1, !dbg !1713, !range !197, !noundef !12
  %152 = trunc i8 %151 to i1, !dbg !1713
  %153 = and i1 %152, %_180, !dbg !1713
  %154 = zext i1 %153 to i8, !dbg !1713
  store i8 %154, ptr %vr_is_trailing_zeros, align 1, !dbg !1713
  %_183 = load i32, ptr %vr, align 4, !dbg !1714, !noundef !12
  %_182 = urem i32 %_183, 10, !dbg !1715
  %155 = trunc i32 %_182 to i8, !dbg !1716
  store i8 %155, ptr %last_removed_digit, align 1, !dbg !1716
  %156 = load i32, ptr %vr, align 4, !dbg !1717, !noundef !12
  %157 = udiv i32 %156, 10, !dbg !1717
  store i32 %157, ptr %vr, align 4, !dbg !1717
  %158 = load i32, ptr %vp, align 4, !dbg !1718, !noundef !12
  %159 = udiv i32 %158, 10, !dbg !1718
  store i32 %159, ptr %vp, align 4, !dbg !1718
  %160 = load i32, ptr %vm, align 4, !dbg !1719, !noundef !12
  %161 = udiv i32 %160, 10, !dbg !1719
  store i32 %161, ptr %vm, align 4, !dbg !1719
  %162 = load i32, ptr %removed, align 4, !dbg !1720, !noundef !12
  %163 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 1), !dbg !1720
  %_188.0 = extractvalue { i32, i1 } %163, 0, !dbg !1720
  %_188.1 = extractvalue { i32, i1 } %163, 1, !dbg !1720
  %164 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false), !dbg !1720
  br i1 %164, label %panic52, label %bb105, !dbg !1720

panic51:                                          ; preds = %bb99
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_975a370bf692fb82ca8b6238f51855a8) #13, !dbg !1682
  unreachable, !dbg !1682

bb105:                                            ; preds = %bb100
  store i32 %_188.0, ptr %removed, align 4, !dbg !1720
  br label %bb94, !dbg !1721

panic52:                                          ; preds = %bb100
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_128b33664658987191e3f576d60b0a14) #13, !dbg !1720
  unreachable, !dbg !1720
}

; ryu::f2s_intrinsics::pow5factor_32
; Function Attrs: uwtable
define internal i32 @_ZN3ryu14f2s_intrinsics13pow5factor_3217h2d9b4ed801d8661bE(i32 %0) unnamed_addr #4 !dbg !1722 {
start:
  %r.dbg.spill = alloca i32, align 4
  %q.dbg.spill = alloca i32, align 4
  %count = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %0, ptr %value, align 4
  call void @llvm.dbg.declare(metadata ptr %value, metadata !1726, metadata !DIExpression()), !dbg !1733
  call void @llvm.dbg.declare(metadata ptr %count, metadata !1727, metadata !DIExpression()), !dbg !1734
  store i32 0, ptr %count, align 4, !dbg !1735
  br label %bb1, !dbg !1736

bb1:                                              ; preds = %bb9, %start
  br label %bb2, !dbg !1737

bb2:                                              ; preds = %bb1
  %_4 = load i32, ptr %value, align 4, !dbg !1738, !noundef !12
  %1 = icmp eq i32 %_4, 0, !dbg !1738
  br i1 %1, label %bb3, label %bb4, !dbg !1738

bb3:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_8a0c4e5a56ab0d518bd01c780582ddb7, i64 28, ptr align 8 @alloc_747ee4e36b1d18866c8b58ddf51b1367) #13, !dbg !1737
  unreachable, !dbg !1737

bb4:                                              ; preds = %bb2
  %_7 = load i32, ptr %value, align 4, !dbg !1739, !noundef !12
  %q = udiv i32 %_7, 5, !dbg !1739
  store i32 %q, ptr %q.dbg.spill, align 4, !dbg !1739
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill, metadata !1729, metadata !DIExpression()), !dbg !1740
  %_10 = load i32, ptr %value, align 4, !dbg !1741, !noundef !12
  %r = urem i32 %_10, 5, !dbg !1741
  store i32 %r, ptr %r.dbg.spill, align 4, !dbg !1741
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1742
  %2 = icmp eq i32 %r, 0, !dbg !1743
  br i1 %2, label %bb8, label %bb7, !dbg !1743

bb8:                                              ; preds = %bb4
  store i32 %q, ptr %value, align 4, !dbg !1744
  %3 = load i32, ptr %count, align 4, !dbg !1745, !noundef !12
  %4 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %3, i32 1), !dbg !1745
  %_12.0 = extractvalue { i32, i1 } %4, 0, !dbg !1745
  %_12.1 = extractvalue { i32, i1 } %4, 1, !dbg !1745
  %5 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !1745
  br i1 %5, label %panic, label %bb9, !dbg !1745

bb7:                                              ; preds = %bb4
  %_0 = load i32, ptr %count, align 4, !dbg !1746, !noundef !12
  ret i32 %_0, !dbg !1747

bb9:                                              ; preds = %bb8
  store i32 %_12.0, ptr %count, align 4, !dbg !1745
  br label %bb1, !dbg !1736

panic:                                            ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_bc26bf15c3c71ab3e5e7d5528aafe8fd) #13, !dbg !1745
  unreachable, !dbg !1745
}

; ryu::f2s_intrinsics::multiple_of_power_of_5_32
; Function Attrs: uwtable
define internal zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_5_3217h3e39fb323830ec33E(i32 %value, i32 %p) unnamed_addr #4 !dbg !1748 {
start:
  %p.dbg.spill = alloca i32, align 4
  %value.dbg.spill = alloca i32, align 4
  store i32 %value, ptr %value.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill, metadata !1752, metadata !DIExpression()), !dbg !1754
  store i32 %p, ptr %p.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1753, metadata !DIExpression()), !dbg !1755
; call ryu::f2s_intrinsics::pow5factor_32
  %_3 = call i32 @_ZN3ryu14f2s_intrinsics13pow5factor_3217h2d9b4ed801d8661bE(i32 %value), !dbg !1756
  %_0 = icmp uge i32 %_3, %p, !dbg !1756
  ret i1 %_0, !dbg !1757
}

; ryu::f2s_intrinsics::multiple_of_power_of_2_32
; Function Attrs: uwtable
define internal zeroext i1 @_ZN3ryu14f2s_intrinsics25multiple_of_power_of_2_3217h50fc3469b5fdb11cE(i32 %value, i32 %p) unnamed_addr #4 !dbg !1758 {
start:
  %p.dbg.spill = alloca i32, align 4
  %value.dbg.spill = alloca i32, align 4
  store i32 %value, ptr %value.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %value.dbg.spill, metadata !1760, metadata !DIExpression()), !dbg !1762
  store i32 %p, ptr %p.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %p.dbg.spill, metadata !1761, metadata !DIExpression()), !dbg !1763
  %_6 = icmp ult i32 %p, 32, !dbg !1764
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !1764
  br i1 %0, label %bb1, label %panic, !dbg !1764

bb1:                                              ; preds = %start
  %1 = and i32 %p, 31, !dbg !1764
  %_5 = shl i32 1, %1, !dbg !1764
  %_7.0 = sub i32 %_5, 1, !dbg !1765
  %_7.1 = icmp ult i32 %_5, 1, !dbg !1765
  %2 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false), !dbg !1765
  br i1 %2, label %panic1, label %bb2, !dbg !1765

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.4, i64 35, ptr align 8 @alloc_a365c96a6efc30d0af04b71fdf3e2472) #13, !dbg !1764
  unreachable, !dbg !1764

bb2:                                              ; preds = %bb1
  %_3 = and i32 %value, %_7.0, !dbg !1766
  %_0 = icmp eq i32 %_3, 0, !dbg !1766
  ret i1 %_0, !dbg !1767

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_308a3964890639794c6468e7ae25347a) #13, !dbg !1765
  unreachable, !dbg !1765
}

; ryu::f2s_intrinsics::mul_shift_32
; Function Attrs: uwtable
define internal i32 @_ZN3ryu14f2s_intrinsics12mul_shift_3217ha04b4c5d9bada906E(i32 %m, i64 %factor, i32 %shift) unnamed_addr #4 !dbg !1768 {
start:
  %shifted_sum.dbg.spill = alloca i64, align 8
  %sum.dbg.spill = alloca i64, align 8
  %bits1.dbg.spill = alloca i64, align 8
  %bits0.dbg.spill = alloca i64, align 8
  %factor_hi.dbg.spill = alloca i32, align 4
  %factor_lo.dbg.spill = alloca i32, align 4
  %shift.dbg.spill = alloca i32, align 4
  %factor.dbg.spill = alloca i64, align 8
  %m.dbg.spill = alloca i32, align 4
  store i32 %m, ptr %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %m.dbg.spill, metadata !1772, metadata !DIExpression()), !dbg !1787
  store i64 %factor, ptr %factor.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %factor.dbg.spill, metadata !1773, metadata !DIExpression()), !dbg !1788
  store i32 %shift, ptr %shift.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %shift.dbg.spill, metadata !1774, metadata !DIExpression()), !dbg !1789
  br label %bb1, !dbg !1790

bb1:                                              ; preds = %start
  %_5 = icmp sgt i32 %shift, 32, !dbg !1791
  br i1 %_5, label %bb3, label %bb2, !dbg !1791

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_89e434bd83ea4ddcbe69a51842618d26, i64 28, ptr align 8 @alloc_4bc9bac3a5c1f5fd36a3471e7966a876) #13, !dbg !1790
  unreachable, !dbg !1790

bb3:                                              ; preds = %bb1
  %factor_lo = trunc i64 %factor to i32, !dbg !1792
  store i32 %factor_lo, ptr %factor_lo.dbg.spill, align 4, !dbg !1792
  call void @llvm.dbg.declare(metadata ptr %factor_lo.dbg.spill, metadata !1775, metadata !DIExpression()), !dbg !1793
  %_9 = lshr i64 %factor, 32, !dbg !1794
  %factor_hi = trunc i64 %_9 to i32, !dbg !1794
  store i32 %factor_hi, ptr %factor_hi.dbg.spill, align 4, !dbg !1794
  call void @llvm.dbg.declare(metadata ptr %factor_hi.dbg.spill, metadata !1777, metadata !DIExpression()), !dbg !1795
  %_13 = zext i32 %m to i64, !dbg !1796
  %_14 = zext i32 %factor_lo to i64, !dbg !1797
  %0 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_13, i64 %_14), !dbg !1796
  %_15.0 = extractvalue { i64, i1 } %0, 0, !dbg !1796
  %_15.1 = extractvalue { i64, i1 } %0, 1, !dbg !1796
  %1 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !1796
  br i1 %1, label %panic, label %bb5, !dbg !1796

bb5:                                              ; preds = %bb3
  store i64 %_15.0, ptr %bits0.dbg.spill, align 8, !dbg !1796
  call void @llvm.dbg.declare(metadata ptr %bits0.dbg.spill, metadata !1779, metadata !DIExpression()), !dbg !1798
  %_17 = zext i32 %m to i64, !dbg !1799
  %_18 = zext i32 %factor_hi to i64, !dbg !1800
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_17, i64 %_18), !dbg !1799
  %_19.0 = extractvalue { i64, i1 } %2, 0, !dbg !1799
  %_19.1 = extractvalue { i64, i1 } %2, 1, !dbg !1799
  %3 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !1799
  br i1 %3, label %panic1, label %bb6, !dbg !1799

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_3b10f0a93fc2b7adc9ed29e43b7bbe0d) #13, !dbg !1796
  unreachable, !dbg !1796

bb6:                                              ; preds = %bb5
  store i64 %_19.0, ptr %bits1.dbg.spill, align 8, !dbg !1799
  call void @llvm.dbg.declare(metadata ptr %bits1.dbg.spill, metadata !1781, metadata !DIExpression()), !dbg !1801
  %_21 = lshr i64 %_15.0, 32, !dbg !1802
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_21, i64 %_19.0), !dbg !1802
  %_24.0 = extractvalue { i64, i1 } %4, 0, !dbg !1802
  %_24.1 = extractvalue { i64, i1 } %4, 1, !dbg !1802
  %5 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !1802
  br i1 %5, label %panic2, label %bb8, !dbg !1802

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_cb5a4b52932f02f834320a763e06a77a) #13, !dbg !1799
  unreachable, !dbg !1799

bb8:                                              ; preds = %bb6
  store i64 %_24.0, ptr %sum.dbg.spill, align 8, !dbg !1802
  call void @llvm.dbg.declare(metadata ptr %sum.dbg.spill, metadata !1783, metadata !DIExpression()), !dbg !1803
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %shift, i32 32), !dbg !1804
  %_27.0 = extractvalue { i32, i1 } %6, 0, !dbg !1804
  %_27.1 = extractvalue { i32, i1 } %6, 1, !dbg !1804
  %7 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !1804
  br i1 %7, label %panic3, label %bb9, !dbg !1804

panic2:                                           ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_062f298a4c3347aeed43c8731f819591) #13, !dbg !1802
  unreachable, !dbg !1802

bb9:                                              ; preds = %bb8
  %_29 = icmp ult i32 %_27.0, 64, !dbg !1805
  %8 = call i1 @llvm.expect.i1(i1 %_29, i1 true), !dbg !1805
  br i1 %8, label %bb10, label %panic4, !dbg !1805

panic3:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_96d4a9d1d9245207f613641a58068a57) #13, !dbg !1804
  unreachable, !dbg !1804

bb10:                                             ; preds = %bb9
  %9 = zext i32 %_27.0 to i64, !dbg !1805
  %10 = and i64 %9, 63, !dbg !1805
  %shifted_sum = lshr i64 %_24.0, %10, !dbg !1805
  store i64 %shifted_sum, ptr %shifted_sum.dbg.spill, align 8, !dbg !1805
  call void @llvm.dbg.declare(metadata ptr %shifted_sum.dbg.spill, metadata !1785, metadata !DIExpression()), !dbg !1806
  br label %bb11, !dbg !1807

panic4:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_a9823afff4bf3076156fa618e5d3c0c0) #13, !dbg !1805
  unreachable, !dbg !1805

bb11:                                             ; preds = %bb10
  %_32 = zext i32 -1 to i64, !dbg !1808
  %_31 = icmp ule i64 %shifted_sum, %_32, !dbg !1809
  br i1 %_31, label %bb14, label %bb13, !dbg !1809

bb13:                                             ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_762f247df9999597ab977b03c72ab39e, i64 56, ptr align 8 @alloc_65ad0dfd110122d7ff764a96351efcaf) #13, !dbg !1807
  unreachable, !dbg !1807

bb14:                                             ; preds = %bb11
  %_0 = trunc i64 %shifted_sum to i32, !dbg !1810
  ret i32 %_0, !dbg !1811
}

; ryu::f2s_intrinsics::mul_pow5_inv_div_pow2
; Function Attrs: uwtable
define internal i32 @_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E(i32 %m, i32 %q, i32 %j) unnamed_addr #4 !dbg !1812 {
start:
  %j.dbg.spill = alloca i32, align 4
  %q.dbg.spill = alloca i32, align 4
  %m.dbg.spill = alloca i32, align 4
  store i32 %m, ptr %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %m.dbg.spill, metadata !1816, metadata !DIExpression()), !dbg !1819
  store i32 %q, ptr %q.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %q.dbg.spill, metadata !1817, metadata !DIExpression()), !dbg !1820
  store i32 %j, ptr %j.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !1818, metadata !DIExpression()), !dbg !1821
  br label %bb1, !dbg !1822

bb1:                                              ; preds = %start
  %_5 = icmp ult i32 %q, 342, !dbg !1823
  br i1 %_5, label %bb3, label %bb2, !dbg !1823

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_f6c1d02023744ade68d309b45cffa5ec, i64 61, ptr align 8 @alloc_71f31cd9c31d1366d16f631d890bcef8) #13, !dbg !1822
  unreachable, !dbg !1822

bb3:                                              ; preds = %bb1
  %_16 = zext i32 %q to i64, !dbg !1824
; call core::slice::<impl [T]>::get_unchecked
  %_13 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E"(ptr align 8 @_ZN3ryu14d2s_full_table21DOUBLE_POW5_INV_SPLIT17h2dcda7d89d272cddE, i64 342, i64 %_16), !dbg !1825
  %0 = getelementptr inbounds i8, ptr %_13, i64 8, !dbg !1825
  %_12 = load i64, ptr %0, align 8, !dbg !1825, !noundef !12
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_12, i64 1), !dbg !1825
  %_17.0 = extractvalue { i64, i1 } %1, 0, !dbg !1825
  %_17.1 = extractvalue { i64, i1 } %1, 1, !dbg !1825
  %2 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !1825
  br i1 %2, label %panic, label %bb5, !dbg !1825

bb5:                                              ; preds = %bb3
; call ryu::f2s_intrinsics::mul_shift_32
  %_0 = call i32 @_ZN3ryu14f2s_intrinsics12mul_shift_3217ha04b4c5d9bada906E(i32 %m, i64 %_17.0, i32 %j), !dbg !1826
  ret i32 %_0, !dbg !1827

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5414758f89afb6b02067e4ee7d30f464) #13, !dbg !1825
  unreachable, !dbg !1825
}

; ryu::f2s_intrinsics::mul_pow5_div_pow2
; Function Attrs: uwtable
define internal i32 @_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E(i32 %m, i32 %i, i32 %j) unnamed_addr #4 !dbg !1828 {
start:
  %j.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %m.dbg.spill = alloca i32, align 4
  store i32 %m, ptr %m.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %m.dbg.spill, metadata !1830, metadata !DIExpression()), !dbg !1833
  store i32 %i, ptr %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !1831, metadata !DIExpression()), !dbg !1834
  store i32 %j, ptr %j.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %j.dbg.spill, metadata !1832, metadata !DIExpression()), !dbg !1835
  br label %bb1, !dbg !1836

bb1:                                              ; preds = %start
  %_5 = icmp ult i32 %i, 326, !dbg !1837
  br i1 %_5, label %bb3, label %bb2, !dbg !1837

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_61cc5df38fe70c3693fc074b9d56369b, i64 57, ptr align 8 @alloc_c144c45452d58ae518c43f1adc0ff22d) #13, !dbg !1836
  unreachable, !dbg !1836

bb3:                                              ; preds = %bb1
  %_15 = zext i32 %i to i64, !dbg !1838
; call core::slice::<impl [T]>::get_unchecked
  %_12 = call align 8 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E"(ptr align 8 @_ZN3ryu14d2s_full_table17DOUBLE_POW5_SPLIT17hec9cc8677c8b52d4E, i64 326, i64 %_15), !dbg !1839
  %0 = getelementptr inbounds i8, ptr %_12, i64 8, !dbg !1839
  %_11 = load i64, ptr %0, align 8, !dbg !1839, !noundef !12
; call ryu::f2s_intrinsics::mul_shift_32
  %_0 = call i32 @_ZN3ryu14f2s_intrinsics12mul_shift_3217ha04b4c5d9bada906E(i32 %m, i64 %_11, i32 %j), !dbg !1840
  ret i32 %_0, !dbg !1841
}

; ryu::pretty::exponent::write_exponent3
; Function Attrs: uwtable
define internal i64 @_ZN3ryu6pretty8exponent15write_exponent317h0c554d8ce0ef1884E(i64 %0, ptr %1) unnamed_addr #4 !dbg !1842 {
start:
  %self.dbg.spill.i26 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i25 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i22 = alloca i64, align 8
  %self.dbg.spill.i23 = alloca ptr, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca ptr, align 8
  %count.dbg.spill.i15 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %dst.dbg.spill.i13 = alloca ptr, align 8
  %src.dbg.spill.i14 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %d.dbg.spill10 = alloca ptr, align 8
  %d.dbg.spill = alloca ptr, align 8
  %sign.dbg.spill = alloca i8, align 1
  %_0 = alloca i64, align 8
  %result = alloca ptr, align 8
  %k = alloca i64, align 8
  store i64 %0, ptr %k, align 8
  store ptr %1, ptr %result, align 8
  call void @llvm.dbg.declare(metadata ptr %k, metadata !1850, metadata !DIExpression()), !dbg !1858
  call void @llvm.dbg.declare(metadata ptr %result, metadata !1851, metadata !DIExpression()), !dbg !1859
  %_4 = load i64, ptr %k, align 8, !dbg !1860, !noundef !12
  %sign = icmp slt i64 %_4, 0, !dbg !1860
  %2 = zext i1 %sign to i8, !dbg !1860
  store i8 %2, ptr %sign.dbg.spill, align 1, !dbg !1860
  call void @llvm.dbg.declare(metadata ptr %sign.dbg.spill, metadata !1852, metadata !DIExpression()), !dbg !1861
  br i1 %sign, label %bb1, label %bb4, !dbg !1862

bb4:                                              ; preds = %bb3, %start
  br label %bb5, !dbg !1863

bb1:                                              ; preds = %start
  %3 = load ptr, ptr %result, align 8, !dbg !1864, !noundef !12
  store i8 45, ptr %3, align 1, !dbg !1864
  %_6 = load ptr, ptr %result, align 8, !dbg !1865, !noundef !12
  store ptr %_6, ptr %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i17, metadata !1866, metadata !DIExpression()), !dbg !1875
  store i64 1, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !1874, metadata !DIExpression()), !dbg !1877
  %_0.i18 = getelementptr inbounds i8, ptr %_6, i64 1, !dbg !1878
  store ptr %_0.i18, ptr %result, align 8, !dbg !1879
  %_7 = load i64, ptr %k, align 8, !dbg !1880, !noundef !12
  %_8 = icmp eq i64 %_7, -9223372036854775808, !dbg !1881
  %4 = call i1 @llvm.expect.i1(i1 %_8, i1 false), !dbg !1881
  br i1 %4, label %panic, label %bb3, !dbg !1881

bb3:                                              ; preds = %bb1
  %5 = sub i64 0, %_7, !dbg !1882
  store i64 %5, ptr %k, align 8, !dbg !1882
  br label %bb4, !dbg !1883

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_feb0d971b758a93ac55636f56eabdfcc) #13, !dbg !1881
  unreachable, !dbg !1881

bb5:                                              ; preds = %bb4
  %_11 = load i64, ptr %k, align 8, !dbg !1884, !noundef !12
  %_10 = icmp slt i64 %_11, 1000, !dbg !1884
  br i1 %_10, label %bb7, label %bb6, !dbg !1884

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_74c2609db300af735d6cf9cfb551df8c, i64 26, ptr align 8 @alloc_36a991333bc0dfadfd3e58d5ddb63a44) #13, !dbg !1863
  unreachable, !dbg !1863

bb7:                                              ; preds = %bb5
  %_14 = load i64, ptr %k, align 8, !dbg !1885, !noundef !12
  %_13 = icmp sge i64 %_14, 100, !dbg !1885
  br i1 %_13, label %bb8, label %bb20, !dbg !1885

bb20:                                             ; preds = %bb7
  %_40 = load i64, ptr %k, align 8, !dbg !1886, !noundef !12
  %_39 = icmp sge i64 %_40, 10, !dbg !1886
  br i1 %_39, label %bb21, label %bb27, !dbg !1886

bb8:                                              ; preds = %bb7
  %_17 = load i64, ptr %k, align 8, !dbg !1887, !noundef !12
  %_20 = icmp eq i64 %_17, -9223372036854775808, !dbg !1888
  %_21 = and i1 false, %_20, !dbg !1888
  %6 = call i1 @llvm.expect.i1(i1 %_21, i1 false), !dbg !1888
  br i1 %6, label %panic5, label %bb10, !dbg !1888

bb27:                                             ; preds = %bb20
  %_53 = load i64, ptr %k, align 8, !dbg !1889, !noundef !12
  %_52 = trunc i64 %_53 to i8, !dbg !1889
  %7 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_52), !dbg !1890
  %_54.0 = extractvalue { i8, i1 } %7, 0, !dbg !1890
  %_54.1 = extractvalue { i8, i1 } %7, 1, !dbg !1890
  %8 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !1890
  br i1 %8, label %panic1, label %bb28, !dbg !1890

bb21:                                             ; preds = %bb20
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i26, align 8
  %9 = getelementptr inbounds i8, ptr %self.dbg.spill.i26, i64 8
  store i64 200, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i26, metadata !1891, metadata !DIExpression()), !dbg !1900
  %_46 = load i64, ptr %k, align 8, !dbg !1902, !noundef !12
  %10 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_46, i64 2), !dbg !1902
  %_47.0 = extractvalue { i64, i1 } %10, 0, !dbg !1902
  %_47.1 = extractvalue { i64, i1 } %10, 1, !dbg !1902
  %11 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false), !dbg !1902
  br i1 %11, label %panic3, label %bb23, !dbg !1902

bb28:                                             ; preds = %bb27
  %12 = load ptr, ptr %result, align 8, !dbg !1903, !noundef !12
  store i8 %_54.0, ptr %12, align 1, !dbg !1903
  %_55 = zext i1 %sign to i64, !dbg !1904
  %13 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_55, i64 1), !dbg !1904
  %_56.0 = extractvalue { i64, i1 } %13, 0, !dbg !1904
  %_56.1 = extractvalue { i64, i1 } %13, 1, !dbg !1904
  %14 = call i1 @llvm.expect.i1(i1 %_56.1, i1 false), !dbg !1904
  br i1 %14, label %panic2, label %bb29, !dbg !1904

panic1:                                           ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_a41e8e6e3a8eb89c397dc381547f76f4) #13, !dbg !1890
  unreachable, !dbg !1890

bb29:                                             ; preds = %bb28
  store i64 %_56.0, ptr %_0, align 8, !dbg !1904
  br label %bb30, !dbg !1905

panic2:                                           ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_4acf5bd955aa1bdfc622af006c2a2152) #13, !dbg !1904
  unreachable, !dbg !1904

bb30:                                             ; preds = %bb19, %bb26, %bb29
  %15 = load i64, ptr %_0, align 8, !dbg !1906, !noundef !12
  ret i64 %15, !dbg !1906

bb23:                                             ; preds = %bb21
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i23, metadata !1907, metadata !DIExpression()), !dbg !1913
  store i64 %_47.0, ptr %count.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i22, metadata !1912, metadata !DIExpression()), !dbg !1915
  %_0.i24 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_47.0, !dbg !1916
  store ptr %_0.i24, ptr %d.dbg.spill, align 8, !dbg !1917
  call void @llvm.dbg.declare(metadata ptr %d.dbg.spill, metadata !1856, metadata !DIExpression()), !dbg !1918
  %_49 = load ptr, ptr %result, align 8, !dbg !1919, !noundef !12
  store ptr %_0.i24, ptr %src.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i14, metadata !1920, metadata !DIExpression()), !dbg !1927
  store ptr %_49, ptr %dst.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i13, metadata !1925, metadata !DIExpression()), !dbg !1929
  store i64 2, ptr %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i12, metadata !1926, metadata !DIExpression()), !dbg !1930
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i24, ptr %_49, i64 1, i64 1, i64 2) #14, !dbg !1931
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_49, ptr align 1 %_0.i24, i64 2, i1 false), !dbg !1932
  %_50 = zext i1 %sign to i64, !dbg !1933
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_50, i64 2), !dbg !1933
  %_51.0 = extractvalue { i64, i1 } %16, 0, !dbg !1933
  %_51.1 = extractvalue { i64, i1 } %16, 1, !dbg !1933
  %17 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !1933
  br i1 %17, label %panic4, label %bb26, !dbg !1933

panic3:                                           ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_4a8a6025beb5539a28048bd8498765eb) #13, !dbg !1902
  unreachable, !dbg !1902

bb26:                                             ; preds = %bb23
  store i64 %_51.0, ptr %_0, align 8, !dbg !1933
  br label %bb30, !dbg !1905

panic4:                                           ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_725b710c02ccbbf7e1f89a63c930d674) #13, !dbg !1933
  unreachable, !dbg !1933

bb10:                                             ; preds = %bb8
  %_16 = sdiv i64 %_17, 100, !dbg !1888
  %_15 = trunc i64 %_16 to i8, !dbg !1888
  %18 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_15), !dbg !1934
  %_22.0 = extractvalue { i8, i1 } %18, 0, !dbg !1934
  %_22.1 = extractvalue { i8, i1 } %18, 1, !dbg !1934
  %19 = call i1 @llvm.expect.i1(i1 %_22.1, i1 false), !dbg !1934
  br i1 %19, label %panic6, label %bb11, !dbg !1934

panic5:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.6, i64 31, ptr align 8 @alloc_b197fd0294cf9006ea9d9bf0c7a1f326) #13, !dbg !1888
  unreachable, !dbg !1888

bb11:                                             ; preds = %bb10
  %20 = load ptr, ptr %result, align 8, !dbg !1935, !noundef !12
  store i8 %_22.0, ptr %20, align 1, !dbg !1935
  %21 = load i64, ptr %k, align 8, !dbg !1936, !noundef !12
  %_25 = icmp eq i64 %21, -9223372036854775808, !dbg !1936
  %_26 = and i1 false, %_25, !dbg !1936
  %22 = call i1 @llvm.expect.i1(i1 %_26, i1 false), !dbg !1936
  br i1 %22, label %panic7, label %bb13, !dbg !1936

panic6:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_ae6cfce2fdd02e205d884af24a139bfc) #13, !dbg !1934
  unreachable, !dbg !1934

bb13:                                             ; preds = %bb11
  %23 = load i64, ptr %k, align 8, !dbg !1936, !noundef !12
  %24 = srem i64 %23, 100, !dbg !1936
  store i64 %24, ptr %k, align 8, !dbg !1936
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i25, align 8
  %25 = getelementptr inbounds i8, ptr %self.dbg.spill.i25, i64 8
  store i64 200, ptr %25, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i25, metadata !1891, metadata !DIExpression()), !dbg !1937
  %_32 = load i64, ptr %k, align 8, !dbg !1939, !noundef !12
  %26 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_32, i64 2), !dbg !1939
  %_33.0 = extractvalue { i64, i1 } %26, 0, !dbg !1939
  %_33.1 = extractvalue { i64, i1 } %26, 1, !dbg !1939
  %27 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false), !dbg !1939
  br i1 %27, label %panic8, label %bb15, !dbg !1939

panic7:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.7, i64 48, ptr align 8 @alloc_8230b5b42f5a3fe2ec9d9f978efb5c01) #13, !dbg !1936
  unreachable, !dbg !1936

bb15:                                             ; preds = %bb13
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i20, metadata !1907, metadata !DIExpression()), !dbg !1940
  store i64 %_33.0, ptr %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i19, metadata !1912, metadata !DIExpression()), !dbg !1942
  %_0.i21 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_33.0, !dbg !1943
  store ptr %_0.i21, ptr %d.dbg.spill10, align 8, !dbg !1944
  call void @llvm.dbg.declare(metadata ptr %d.dbg.spill10, metadata !1854, metadata !DIExpression()), !dbg !1945
  %_36 = load ptr, ptr %result, align 8, !dbg !1946, !noundef !12
  store ptr %_36, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !1947
  store i64 1, ptr %count.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i15, metadata !1874, metadata !DIExpression()), !dbg !1949
  %_0.i = getelementptr inbounds i8, ptr %_36, i64 1, !dbg !1950
  store ptr %_0.i21, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !1951
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !1953
  store i64 2, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !1954
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i21, ptr %_0.i, i64 1, i64 1, i64 2) #14, !dbg !1955
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i, ptr align 1 %_0.i21, i64 2, i1 false), !dbg !1956
  %_37 = zext i1 %sign to i64, !dbg !1957
  %28 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_37, i64 3), !dbg !1957
  %_38.0 = extractvalue { i64, i1 } %28, 0, !dbg !1957
  %_38.1 = extractvalue { i64, i1 } %28, 1, !dbg !1957
  %29 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false), !dbg !1957
  br i1 %29, label %panic11, label %bb19, !dbg !1957

panic8:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_067f5c44999c2a01d9b912b4b26e06d5) #13, !dbg !1939
  unreachable, !dbg !1939

bb19:                                             ; preds = %bb15
  store i64 %_38.0, ptr %_0, align 8, !dbg !1957
  br label %bb30, !dbg !1958

panic11:                                          ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_3b2c66c06c3a855d0d9a744ab60bc545) #13, !dbg !1957
  unreachable, !dbg !1957
}

; ryu::pretty::exponent::write_exponent2
; Function Attrs: uwtable
define internal i64 @_ZN3ryu6pretty8exponent15write_exponent217h573026d0e452213dE(i64 %0, ptr %1) unnamed_addr #4 !dbg !1959 {
start:
  %self.dbg.spill.i9 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i6 = alloca i64, align 8
  %self.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %d.dbg.spill = alloca ptr, align 8
  %sign.dbg.spill = alloca i8, align 1
  %_0 = alloca i64, align 8
  %result = alloca ptr, align 8
  %k = alloca i64, align 8
  store i64 %0, ptr %k, align 8
  store ptr %1, ptr %result, align 8
  call void @llvm.dbg.declare(metadata ptr %k, metadata !1961, metadata !DIExpression()), !dbg !1967
  call void @llvm.dbg.declare(metadata ptr %result, metadata !1962, metadata !DIExpression()), !dbg !1968
  %_4 = load i64, ptr %k, align 8, !dbg !1969, !noundef !12
  %sign = icmp slt i64 %_4, 0, !dbg !1969
  %2 = zext i1 %sign to i8, !dbg !1969
  store i8 %2, ptr %sign.dbg.spill, align 1, !dbg !1969
  call void @llvm.dbg.declare(metadata ptr %sign.dbg.spill, metadata !1963, metadata !DIExpression()), !dbg !1970
  br i1 %sign, label %bb1, label %bb4, !dbg !1971

bb4:                                              ; preds = %bb3, %start
  br label %bb5, !dbg !1972

bb1:                                              ; preds = %start
  %3 = load ptr, ptr %result, align 8, !dbg !1973, !noundef !12
  store i8 45, ptr %3, align 1, !dbg !1973
  %_6 = load ptr, ptr %result, align 8, !dbg !1974, !noundef !12
  store ptr %_6, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !1975
  store i64 1, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1874, metadata !DIExpression()), !dbg !1977
  %_0.i = getelementptr inbounds i8, ptr %_6, i64 1, !dbg !1978
  store ptr %_0.i, ptr %result, align 8, !dbg !1979
  %_7 = load i64, ptr %k, align 8, !dbg !1980, !noundef !12
  %_8 = icmp eq i64 %_7, -9223372036854775808, !dbg !1981
  %4 = call i1 @llvm.expect.i1(i1 %_8, i1 false), !dbg !1981
  br i1 %4, label %panic, label %bb3, !dbg !1981

bb3:                                              ; preds = %bb1
  %5 = sub i64 0, %_7, !dbg !1982
  store i64 %5, ptr %k, align 8, !dbg !1982
  br label %bb4, !dbg !1983

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.3, i64 31, ptr align 8 @alloc_0fe7cdb3a3b5cda82fb6cf973f86ef10) #13, !dbg !1981
  unreachable, !dbg !1981

bb5:                                              ; preds = %bb4
  %_11 = load i64, ptr %k, align 8, !dbg !1984, !noundef !12
  %_10 = icmp slt i64 %_11, 100, !dbg !1984
  br i1 %_10, label %bb7, label %bb6, !dbg !1984

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_b9deeb25023c903d9fda7100cd346ade, i64 25, ptr align 8 @alloc_d5ad4f4b934c6bfd4027502f5c10f148) #13, !dbg !1972
  unreachable, !dbg !1972

bb7:                                              ; preds = %bb5
  %_14 = load i64, ptr %k, align 8, !dbg !1985, !noundef !12
  %_13 = icmp sge i64 %_14, 10, !dbg !1985
  br i1 %_13, label %bb8, label %bb14, !dbg !1985

bb14:                                             ; preds = %bb7
  %_27 = load i64, ptr %k, align 8, !dbg !1986, !noundef !12
  %_26 = trunc i64 %_27 to i8, !dbg !1986
  %6 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_26), !dbg !1987
  %_28.0 = extractvalue { i8, i1 } %6, 0, !dbg !1987
  %_28.1 = extractvalue { i8, i1 } %6, 1, !dbg !1987
  %7 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !1987
  br i1 %7, label %panic1, label %bb15, !dbg !1987

bb8:                                              ; preds = %bb7
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i9, align 8
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i9, i64 8
  store i64 200, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i9, metadata !1891, metadata !DIExpression()), !dbg !1988
  %_20 = load i64, ptr %k, align 8, !dbg !1990, !noundef !12
  %9 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %_20, i64 2), !dbg !1990
  %_21.0 = extractvalue { i64, i1 } %9, 0, !dbg !1990
  %_21.1 = extractvalue { i64, i1 } %9, 1, !dbg !1990
  %10 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !1990
  br i1 %10, label %panic3, label %bb10, !dbg !1990

bb15:                                             ; preds = %bb14
  %11 = load ptr, ptr %result, align 8, !dbg !1991, !noundef !12
  store i8 %_28.0, ptr %11, align 1, !dbg !1991
  %_29 = zext i1 %sign to i64, !dbg !1992
  %12 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_29, i64 1), !dbg !1992
  %_30.0 = extractvalue { i64, i1 } %12, 0, !dbg !1992
  %_30.1 = extractvalue { i64, i1 } %12, 1, !dbg !1992
  %13 = call i1 @llvm.expect.i1(i1 %_30.1, i1 false), !dbg !1992
  br i1 %13, label %panic2, label %bb16, !dbg !1992

panic1:                                           ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_419f1081c539c2e6be35a7f236b5e4fa) #13, !dbg !1987
  unreachable, !dbg !1987

bb16:                                             ; preds = %bb15
  store i64 %_30.0, ptr %_0, align 8, !dbg !1992
  br label %bb17, !dbg !1993

panic2:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_48c8627a1bb5b268d18f942fc36b4e91) #13, !dbg !1992
  unreachable, !dbg !1992

bb17:                                             ; preds = %bb13, %bb16
  %14 = load i64, ptr %_0, align 8, !dbg !1994, !noundef !12
  ret i64 %14, !dbg !1994

bb10:                                             ; preds = %bb8
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i7, metadata !1907, metadata !DIExpression()), !dbg !1995
  store i64 %_21.0, ptr %count.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i6, metadata !1912, metadata !DIExpression()), !dbg !1997
  %_0.i8 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_21.0, !dbg !1998
  store ptr %_0.i8, ptr %d.dbg.spill, align 8, !dbg !1999
  call void @llvm.dbg.declare(metadata ptr %d.dbg.spill, metadata !1965, metadata !DIExpression()), !dbg !2000
  %_23 = load ptr, ptr %result, align 8, !dbg !2001, !noundef !12
  store ptr %_0.i8, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !2002
  store ptr %_23, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !2004
  store i64 2, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !2005
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i8, ptr %_23, i64 1, i64 1, i64 2) #14, !dbg !2006
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_23, ptr align 1 %_0.i8, i64 2, i1 false), !dbg !2007
  %_24 = zext i1 %sign to i64, !dbg !2008
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_24, i64 2), !dbg !2008
  %_25.0 = extractvalue { i64, i1 } %15, 0, !dbg !2008
  %_25.1 = extractvalue { i64, i1 } %15, 1, !dbg !2008
  %16 = call i1 @llvm.expect.i1(i1 %_25.1, i1 false), !dbg !2008
  br i1 %16, label %panic4, label %bb13, !dbg !2008

panic3:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_7ec504308673cc511119f92188de360a) #13, !dbg !1990
  unreachable, !dbg !1990

bb13:                                             ; preds = %bb10
  store i64 %_25.0, ptr %_0, align 8, !dbg !2008
  br label %bb17, !dbg !1993

panic4:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_41e6abc0d5ba917f6fbf45e3ba5e99bc) #13, !dbg !2008
  unreachable, !dbg !2008
}

; ryu::pretty::mantissa::write_mantissa_long
; Function Attrs: uwtable
define internal void @_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E(i64 %0, ptr %1) unnamed_addr #4 !dbg !2009 {
start:
  %self.dbg.spill.i39 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i38 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i37 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i36 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i33 = alloca i64, align 8
  %self.dbg.spill.i34 = alloca ptr, align 8
  %count.dbg.spill.i30 = alloca i64, align 8
  %self.dbg.spill.i31 = alloca ptr, align 8
  %count.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca ptr, align 8
  %count.dbg.spill.i24 = alloca i64, align 8
  %self.dbg.spill.i25 = alloca ptr, align 8
  %count.dbg.spill.i21 = alloca i64, align 8
  %self.dbg.spill.i22 = alloca ptr, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i19 = alloca ptr, align 8
  %count.dbg.spill.i15 = alloca i64, align 8
  %self.dbg.spill.i16 = alloca ptr, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %self.dbg.spill.i13 = alloca ptr, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %dst.dbg.spill.i9 = alloca ptr, align 8
  %src.dbg.spill.i10 = alloca ptr, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %dst.dbg.spill.i6 = alloca ptr, align 8
  %src.dbg.spill.i7 = alloca ptr, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %dst.dbg.spill.i3 = alloca ptr, align 8
  %src.dbg.spill.i4 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %d1.dbg.spill = alloca i32, align 4
  %d0.dbg.spill = alloca i32, align 4
  %c1.dbg.spill = alloca i32, align 4
  %c0.dbg.spill = alloca i32, align 4
  %d.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %output2 = alloca i32, align 4
  %result = alloca ptr, align 8
  %output = alloca i64, align 8
  store i64 %0, ptr %output, align 8
  store ptr %1, ptr %result, align 8
  call void @llvm.dbg.declare(metadata ptr %output, metadata !2015, metadata !DIExpression()), !dbg !2031
  call void @llvm.dbg.declare(metadata ptr %result, metadata !2016, metadata !DIExpression()), !dbg !2032
  call void @llvm.dbg.declare(metadata ptr %output2, metadata !2017, metadata !DIExpression()), !dbg !2033
  %_4 = load i64, ptr %output, align 8, !dbg !2034, !noundef !12
  %_3 = lshr i64 %_4, 32, !dbg !2035
  %2 = icmp eq i64 %_3, 0, !dbg !2035
  br i1 %2, label %bb35, label %bb2, !dbg !2035

bb35:                                             ; preds = %bb5, %start
  %_80 = load i64, ptr %output, align 8, !dbg !2036, !noundef !12
  %_79 = trunc i64 %_80 to i32, !dbg !2036
  %_81 = load ptr, ptr %result, align 8, !dbg !2037, !noundef !12
; call ryu::pretty::mantissa::write_mantissa
  call void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %_79, ptr %_81), !dbg !2038
  ret void, !dbg !2039

bb2:                                              ; preds = %start
  %_9 = load i64, ptr %output, align 8, !dbg !2040, !noundef !12
  %_12 = load i64, ptr %output, align 8, !dbg !2041, !noundef !12
  %_11 = udiv i64 %_12, 100000000, !dbg !2042
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 100000000, i64 %_11), !dbg !2043
  %_14.0 = extractvalue { i64, i1 } %3, 0, !dbg !2043
  %_14.1 = extractvalue { i64, i1 } %3, 1, !dbg !2043
  %4 = call i1 @llvm.expect.i1(i1 %_14.1, i1 false), !dbg !2043
  br i1 %4, label %panic, label %bb4, !dbg !2043

bb4:                                              ; preds = %bb2
  %_15.0 = sub i64 %_9, %_14.0, !dbg !2044
  %_15.1 = icmp ult i64 %_9, %_14.0, !dbg !2044
  %5 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false), !dbg !2044
  br i1 %5, label %panic1, label %bb5, !dbg !2044

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_fe229c9d38cfbedd70d1c42e4d940f28) #13, !dbg !2043
  unreachable, !dbg !2043

bb5:                                              ; preds = %bb4
  %6 = trunc i64 %_15.0 to i32, !dbg !2044
  store i32 %6, ptr %output2, align 4, !dbg !2044
  %7 = load i64, ptr %output, align 8, !dbg !2045, !noundef !12
  %8 = udiv i64 %7, 100000000, !dbg !2045
  store i64 %8, ptr %output, align 8, !dbg !2045
  %_18 = load i32, ptr %output2, align 4, !dbg !2046, !noundef !12
  %c = urem i32 %_18, 10000, !dbg !2046
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !2046
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2019, metadata !DIExpression()), !dbg !2047
  %9 = load i32, ptr %output2, align 4, !dbg !2048, !noundef !12
  %10 = udiv i32 %9, 10000, !dbg !2048
  store i32 %10, ptr %output2, align 4, !dbg !2048
  %_22 = load i32, ptr %output2, align 4, !dbg !2049, !noundef !12
  %d = urem i32 %_22, 10000, !dbg !2049
  store i32 %d, ptr %d.dbg.spill, align 4, !dbg !2049
  call void @llvm.dbg.declare(metadata ptr %d.dbg.spill, metadata !2021, metadata !DIExpression()), !dbg !2050
  %_25 = urem i32 %c, 100, !dbg !2051
  %c0 = shl i32 %_25, 1, !dbg !2051
  store i32 %c0, ptr %c0.dbg.spill, align 4, !dbg !2051
  call void @llvm.dbg.declare(metadata ptr %c0.dbg.spill, metadata !2023, metadata !DIExpression()), !dbg !2052
  %_30 = udiv i32 %c, 100, !dbg !2053
  %c1 = shl i32 %_30, 1, !dbg !2053
  store i32 %c1, ptr %c1.dbg.spill, align 4, !dbg !2053
  call void @llvm.dbg.declare(metadata ptr %c1.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2054
  %_35 = urem i32 %d, 100, !dbg !2055
  %d0 = shl i32 %_35, 1, !dbg !2055
  store i32 %d0, ptr %d0.dbg.spill, align 4, !dbg !2055
  call void @llvm.dbg.declare(metadata ptr %d0.dbg.spill, metadata !2027, metadata !DIExpression()), !dbg !2056
  %_40 = udiv i32 %d, 100, !dbg !2057
  %d1 = shl i32 %_40, 1, !dbg !2057
  store i32 %d1, ptr %d1.dbg.spill, align 4, !dbg !2057
  call void @llvm.dbg.declare(metadata ptr %d1.dbg.spill, metadata !2029, metadata !DIExpression()), !dbg !2058
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i39, align 8
  %11 = getelementptr inbounds i8, ptr %self.dbg.spill.i39, i64 8
  store i64 200, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !1891, metadata !DIExpression()), !dbg !2059
  %_49 = zext i32 %c0 to i64, !dbg !2061
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i34, metadata !1907, metadata !DIExpression()), !dbg !2062
  store i64 %_49, ptr %count.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i33, metadata !1912, metadata !DIExpression()), !dbg !2064
  %_0.i35 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_49, !dbg !2065
  %_51 = load ptr, ptr %result, align 8, !dbg !2066, !noundef !12
  store ptr %_51, ptr %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i22, metadata !1866, metadata !DIExpression()), !dbg !2067
  store i64 -2, ptr %count.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i21, metadata !1874, metadata !DIExpression()), !dbg !2069
  %_0.i23 = getelementptr inbounds i8, ptr %_51, i64 -2, !dbg !2070
  store ptr %_0.i35, ptr %src.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i10, metadata !1920, metadata !DIExpression()), !dbg !2071
  store ptr %_0.i23, ptr %dst.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i9, metadata !1925, metadata !DIExpression()), !dbg !2073
  store i64 2, ptr %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i8, metadata !1926, metadata !DIExpression()), !dbg !2074
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i35, ptr %_0.i23, i64 1, i64 1, i64 2) #14, !dbg !2075
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i23, ptr align 1 %_0.i35, i64 2, i1 false), !dbg !2076
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i38, align 8
  %12 = getelementptr inbounds i8, ptr %self.dbg.spill.i38, i64 8
  store i64 200, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i38, metadata !1891, metadata !DIExpression()), !dbg !2077
  %_57 = zext i32 %c1 to i64, !dbg !2079
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i31, metadata !1907, metadata !DIExpression()), !dbg !2080
  store i64 %_57, ptr %count.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i30, metadata !1912, metadata !DIExpression()), !dbg !2082
  %_0.i32 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_57, !dbg !2083
  %_59 = load ptr, ptr %result, align 8, !dbg !2084, !noundef !12
  store ptr %_59, ptr %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i19, metadata !1866, metadata !DIExpression()), !dbg !2085
  store i64 -4, ptr %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i18, metadata !1874, metadata !DIExpression()), !dbg !2087
  %_0.i20 = getelementptr inbounds i8, ptr %_59, i64 -4, !dbg !2088
  store ptr %_0.i32, ptr %src.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i7, metadata !1920, metadata !DIExpression()), !dbg !2089
  store ptr %_0.i20, ptr %dst.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i6, metadata !1925, metadata !DIExpression()), !dbg !2091
  store i64 2, ptr %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i5, metadata !1926, metadata !DIExpression()), !dbg !2092
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i32, ptr %_0.i20, i64 1, i64 1, i64 2) #14, !dbg !2093
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i20, ptr align 1 %_0.i32, i64 2, i1 false), !dbg !2094
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i37, align 8
  %13 = getelementptr inbounds i8, ptr %self.dbg.spill.i37, i64 8
  store i64 200, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i37, metadata !1891, metadata !DIExpression()), !dbg !2095
  %_65 = zext i32 %d0 to i64, !dbg !2097
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i28, metadata !1907, metadata !DIExpression()), !dbg !2098
  store i64 %_65, ptr %count.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i27, metadata !1912, metadata !DIExpression()), !dbg !2100
  %_0.i29 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_65, !dbg !2101
  %_67 = load ptr, ptr %result, align 8, !dbg !2102, !noundef !12
  store ptr %_67, ptr %self.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i16, metadata !1866, metadata !DIExpression()), !dbg !2103
  store i64 -6, ptr %count.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i15, metadata !1874, metadata !DIExpression()), !dbg !2105
  %_0.i17 = getelementptr inbounds i8, ptr %_67, i64 -6, !dbg !2106
  store ptr %_0.i29, ptr %src.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i4, metadata !1920, metadata !DIExpression()), !dbg !2107
  store ptr %_0.i17, ptr %dst.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i3, metadata !1925, metadata !DIExpression()), !dbg !2109
  store i64 2, ptr %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i2, metadata !1926, metadata !DIExpression()), !dbg !2110
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i29, ptr %_0.i17, i64 1, i64 1, i64 2) #14, !dbg !2111
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i17, ptr align 1 %_0.i29, i64 2, i1 false), !dbg !2112
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i36, align 8
  %14 = getelementptr inbounds i8, ptr %self.dbg.spill.i36, i64 8
  store i64 200, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i36, metadata !1891, metadata !DIExpression()), !dbg !2113
  %_73 = zext i32 %d1 to i64, !dbg !2115
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i25, metadata !1907, metadata !DIExpression()), !dbg !2116
  store i64 %_73, ptr %count.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i24, metadata !1912, metadata !DIExpression()), !dbg !2118
  %_0.i26 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_73, !dbg !2119
  %_75 = load ptr, ptr %result, align 8, !dbg !2120, !noundef !12
  store ptr %_75, ptr %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i13, metadata !1866, metadata !DIExpression()), !dbg !2121
  store i64 -8, ptr %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i12, metadata !1874, metadata !DIExpression()), !dbg !2123
  %_0.i14 = getelementptr inbounds i8, ptr %_75, i64 -8, !dbg !2124
  store ptr %_0.i26, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !2125
  store ptr %_0.i14, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !2127
  store i64 2, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !2128
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i26, ptr %_0.i14, i64 1, i64 1, i64 2) #14, !dbg !2129
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i14, ptr align 1 %_0.i26, i64 2, i1 false), !dbg !2130
  %_77 = load ptr, ptr %result, align 8, !dbg !2131, !noundef !12
  store ptr %_77, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !2132
  store i64 -8, ptr %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i11, metadata !1874, metadata !DIExpression()), !dbg !2134
  %_0.i = getelementptr inbounds i8, ptr %_77, i64 -8, !dbg !2135
  store ptr %_0.i, ptr %result, align 8, !dbg !2136
  br label %bb35, !dbg !2137

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_46ad6c976901a05c3f83d1906d8f9d3d) #13, !dbg !2044
  unreachable, !dbg !2044
}

; ryu::pretty::mantissa::write_mantissa
; Function Attrs: uwtable
define internal void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %0, ptr %1) unnamed_addr #4 !dbg !2138 {
start:
  %self.dbg.spill.i50 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i49 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i48 = alloca { ptr, i64 }, align 8
  %self.dbg.spill.i47 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %self.dbg.spill.i45 = alloca ptr, align 8
  %count.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca ptr, align 8
  %count.dbg.spill.i38 = alloca i64, align 8
  %self.dbg.spill.i39 = alloca ptr, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca ptr, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca ptr, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca ptr, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca ptr, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca ptr, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca ptr, align 8
  %count.dbg.spill.i17 = alloca i64, align 8
  %self.dbg.spill.i18 = alloca ptr, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %dst.dbg.spill.i14 = alloca ptr, align 8
  %src.dbg.spill.i15 = alloca ptr, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %dst.dbg.spill.i11 = alloca ptr, align 8
  %src.dbg.spill.i12 = alloca ptr, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %dst.dbg.spill.i8 = alloca ptr, align 8
  %src.dbg.spill.i9 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %c1.dbg.spill = alloca i32, align 4
  %c0.dbg.spill = alloca i32, align 4
  %c.dbg.spill5 = alloca i32, align 4
  %c.dbg.spill2 = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %result = alloca ptr, align 8
  %output = alloca i32, align 4
  store i32 %0, ptr %output, align 4
  store ptr %1, ptr %result, align 8
  call void @llvm.dbg.declare(metadata ptr %output, metadata !2142, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata ptr %result, metadata !2143, metadata !DIExpression()), !dbg !2155
  br label %bb1, !dbg !2156

bb1:                                              ; preds = %bb5, %start
  %_4 = load i32, ptr %output, align 4, !dbg !2157, !noundef !12
  %_3 = icmp uge i32 %_4, 10000, !dbg !2157
  br i1 %_3, label %bb2, label %bb20, !dbg !2157

bb20:                                             ; preds = %bb1
  %_43 = load i32, ptr %output, align 4, !dbg !2158, !noundef !12
  %_42 = icmp uge i32 %_43, 100, !dbg !2158
  br i1 %_42, label %bb21, label %bb30, !dbg !2158

bb2:                                              ; preds = %bb1
  %_6 = load i32, ptr %output, align 4, !dbg !2159, !noundef !12
  %_9 = load i32, ptr %output, align 4, !dbg !2160, !noundef !12
  %_8 = udiv i32 %_9, 10000, !dbg !2161
  %2 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 10000, i32 %_8), !dbg !2162
  %_11.0 = extractvalue { i32, i1 } %2, 0, !dbg !2162
  %_11.1 = extractvalue { i32, i1 } %2, 1, !dbg !2162
  %3 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !2162
  br i1 %3, label %panic3, label %bb4, !dbg !2162

bb30:                                             ; preds = %bb21, %bb20
  %_62 = load i32, ptr %output, align 4, !dbg !2163, !noundef !12
  %_61 = icmp uge i32 %_62, 10, !dbg !2163
  br i1 %_61, label %bb31, label %bb36, !dbg !2163

bb21:                                             ; preds = %bb20
  %_46 = load i32, ptr %output, align 4, !dbg !2164, !noundef !12
  %_45 = urem i32 %_46, 100, !dbg !2165
  %c = shl i32 %_45, 1, !dbg !2165
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !2165
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !2150, metadata !DIExpression()), !dbg !2166
  %4 = load i32, ptr %output, align 4, !dbg !2167, !noundef !12
  %5 = udiv i32 %4, 100, !dbg !2167
  store i32 %5, ptr %output, align 4, !dbg !2167
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i50, align 8
  %6 = getelementptr inbounds i8, ptr %self.dbg.spill.i50, i64 8
  store i64 200, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i50, metadata !1891, metadata !DIExpression()), !dbg !2168
  %_56 = zext i32 %c to i64, !dbg !2170
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i45, metadata !1907, metadata !DIExpression()), !dbg !2171
  store i64 %_56, ptr %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i44, metadata !1912, metadata !DIExpression()), !dbg !2173
  %_0.i46 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_56, !dbg !2174
  %_58 = load ptr, ptr %result, align 8, !dbg !2175, !noundef !12
  store ptr %_58, ptr %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i33, metadata !1866, metadata !DIExpression()), !dbg !2176
  store i64 -2, ptr %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i32, metadata !1874, metadata !DIExpression()), !dbg !2178
  %_0.i34 = getelementptr inbounds i8, ptr %_58, i64 -2, !dbg !2179
  store ptr %_0.i46, ptr %src.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i15, metadata !1920, metadata !DIExpression()), !dbg !2180
  store ptr %_0.i34, ptr %dst.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i14, metadata !1925, metadata !DIExpression()), !dbg !2182
  store i64 2, ptr %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i13, metadata !1926, metadata !DIExpression()), !dbg !2183
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i46, ptr %_0.i34, i64 1, i64 1, i64 2) #14, !dbg !2184
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i34, ptr align 1 %_0.i46, i64 2, i1 false), !dbg !2185
  %_60 = load ptr, ptr %result, align 8, !dbg !2186, !noundef !12
  store ptr %_60, ptr %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i30, metadata !1866, metadata !DIExpression()), !dbg !2187
  store i64 -2, ptr %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i29, metadata !1874, metadata !DIExpression()), !dbg !2189
  %_0.i31 = getelementptr inbounds i8, ptr %_60, i64 -2, !dbg !2190
  store ptr %_0.i31, ptr %result, align 8, !dbg !2191
  br label %bb30, !dbg !2192

bb36:                                             ; preds = %bb30
  %_76 = load i32, ptr %output, align 4, !dbg !2193, !noundef !12
  %_75 = trunc i32 %_76 to i8, !dbg !2193
  %7 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_75), !dbg !2194
  %_77.0 = extractvalue { i8, i1 } %7, 0, !dbg !2194
  %_77.1 = extractvalue { i8, i1 } %7, 1, !dbg !2194
  %8 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false), !dbg !2194
  br i1 %8, label %panic, label %bb37, !dbg !2194

bb31:                                             ; preds = %bb30
  %_64 = load i32, ptr %output, align 4, !dbg !2195, !noundef !12
  %c1 = shl i32 %_64, 1, !dbg !2195
  store i32 %c1, ptr %c.dbg.spill2, align 4, !dbg !2195
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill2, metadata !2152, metadata !DIExpression()), !dbg !2196
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i49, align 8
  %9 = getelementptr inbounds i8, ptr %self.dbg.spill.i49, i64 8
  store i64 200, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i49, metadata !1891, metadata !DIExpression()), !dbg !2197
  %_72 = zext i32 %c1 to i64, !dbg !2199
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i42, metadata !1907, metadata !DIExpression()), !dbg !2200
  store i64 %_72, ptr %count.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i41, metadata !1912, metadata !DIExpression()), !dbg !2202
  %_0.i43 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_72, !dbg !2203
  %_74 = load ptr, ptr %result, align 8, !dbg !2204, !noundef !12
  store ptr %_74, ptr %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i24, metadata !1866, metadata !DIExpression()), !dbg !2205
  store i64 -2, ptr %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i23, metadata !1874, metadata !DIExpression()), !dbg !2207
  %_0.i25 = getelementptr inbounds i8, ptr %_74, i64 -2, !dbg !2208
  store ptr %_0.i43, ptr %src.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i12, metadata !1920, metadata !DIExpression()), !dbg !2209
  store ptr %_0.i25, ptr %dst.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i11, metadata !1925, metadata !DIExpression()), !dbg !2211
  store i64 2, ptr %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i10, metadata !1926, metadata !DIExpression()), !dbg !2212
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i43, ptr %_0.i25, i64 1, i64 1, i64 2) #14, !dbg !2213
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i25, ptr align 1 %_0.i43, i64 2, i1 false), !dbg !2214
  br label %bb39, !dbg !2215

bb37:                                             ; preds = %bb36
  %_79 = load ptr, ptr %result, align 8, !dbg !2216, !noundef !12
  store ptr %_79, ptr %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i27, metadata !1866, metadata !DIExpression()), !dbg !2217
  store i64 -1, ptr %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i26, metadata !1874, metadata !DIExpression()), !dbg !2219
  %_0.i28 = getelementptr inbounds i8, ptr %_79, i64 -1, !dbg !2220
  store i8 %_77.0, ptr %_0.i28, align 1, !dbg !2221
  br label %bb39, !dbg !2222

panic:                                            ; preds = %bb36
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e7897fbc9f623d5ce19c34aa7672651e) #13, !dbg !2194
  unreachable, !dbg !2194

bb39:                                             ; preds = %bb31, %bb37
  ret void, !dbg !2223

bb4:                                              ; preds = %bb2
  %_12.0 = sub i32 %_6, %_11.0, !dbg !2159
  %_12.1 = icmp ult i32 %_6, %_11.0, !dbg !2159
  %10 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !2159
  br i1 %10, label %panic4, label %bb5, !dbg !2159

panic3:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.0, i64 33, ptr align 8 @alloc_e94f33cf110ccf233dc7a7ca8e7f95e1) #13, !dbg !2162
  unreachable, !dbg !2162

bb5:                                              ; preds = %bb4
  store i32 %_12.0, ptr %c.dbg.spill5, align 4, !dbg !2159
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill5, metadata !2144, metadata !DIExpression()), !dbg !2224
  %11 = load i32, ptr %output, align 4, !dbg !2225, !noundef !12
  %12 = udiv i32 %11, 10000, !dbg !2225
  store i32 %12, ptr %output, align 4, !dbg !2225
  %_15 = urem i32 %_12.0, 100, !dbg !2226
  %c0 = shl i32 %_15, 1, !dbg !2226
  store i32 %c0, ptr %c0.dbg.spill, align 4, !dbg !2226
  call void @llvm.dbg.declare(metadata ptr %c0.dbg.spill, metadata !2146, metadata !DIExpression()), !dbg !2227
  %_20 = udiv i32 %_12.0, 100, !dbg !2228
  %c16 = shl i32 %_20, 1, !dbg !2228
  store i32 %c16, ptr %c1.dbg.spill, align 4, !dbg !2228
  call void @llvm.dbg.declare(metadata ptr %c1.dbg.spill, metadata !2148, metadata !DIExpression()), !dbg !2229
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i48, align 8
  %13 = getelementptr inbounds i8, ptr %self.dbg.spill.i48, i64 8
  store i64 200, ptr %13, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i48, metadata !1891, metadata !DIExpression()), !dbg !2230
  %_29 = zext i32 %c0 to i64, !dbg !2232
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i39, metadata !1907, metadata !DIExpression()), !dbg !2233
  store i64 %_29, ptr %count.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i38, metadata !1912, metadata !DIExpression()), !dbg !2235
  %_0.i40 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_29, !dbg !2236
  %_31 = load ptr, ptr %result, align 8, !dbg !2237, !noundef !12
  store ptr %_31, ptr %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i21, metadata !1866, metadata !DIExpression()), !dbg !2238
  store i64 -2, ptr %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i20, metadata !1874, metadata !DIExpression()), !dbg !2240
  %_0.i22 = getelementptr inbounds i8, ptr %_31, i64 -2, !dbg !2241
  store ptr %_0.i40, ptr %src.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i9, metadata !1920, metadata !DIExpression()), !dbg !2242
  store ptr %_0.i22, ptr %dst.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i8, metadata !1925, metadata !DIExpression()), !dbg !2244
  store i64 2, ptr %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i7, metadata !1926, metadata !DIExpression()), !dbg !2245
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i40, ptr %_0.i22, i64 1, i64 1, i64 2) #14, !dbg !2246
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i22, ptr align 1 %_0.i40, i64 2, i1 false), !dbg !2247
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i47, align 8
  %14 = getelementptr inbounds i8, ptr %self.dbg.spill.i47, i64 8
  store i64 200, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i47, metadata !1891, metadata !DIExpression()), !dbg !2248
  %_37 = zext i32 %c16 to i64, !dbg !2250
  store ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, ptr %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i36, metadata !1907, metadata !DIExpression()), !dbg !2251
  store i64 %_37, ptr %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i35, metadata !1912, metadata !DIExpression()), !dbg !2253
  %_0.i37 = getelementptr inbounds i8, ptr @_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE, i64 %_37, !dbg !2254
  %_39 = load ptr, ptr %result, align 8, !dbg !2255, !noundef !12
  store ptr %_39, ptr %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i18, metadata !1866, metadata !DIExpression()), !dbg !2256
  store i64 -4, ptr %count.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i17, metadata !1874, metadata !DIExpression()), !dbg !2258
  %_0.i19 = getelementptr inbounds i8, ptr %_39, i64 -4, !dbg !2259
  store ptr %_0.i37, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !2260
  store ptr %_0.i19, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !2262
  store i64 2, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !2263
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr %_0.i37, ptr %_0.i19, i64 1, i64 1, i64 2) #14, !dbg !2264
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i19, ptr align 1 %_0.i37, i64 2, i1 false), !dbg !2265
  %_41 = load ptr, ptr %result, align 8, !dbg !2266, !noundef !12
  store ptr %_41, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !2267
  store i64 -4, ptr %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i16, metadata !1874, metadata !DIExpression()), !dbg !2269
  %_0.i = getelementptr inbounds i8, ptr %_41, i64 -4, !dbg !2270
  store ptr %_0.i, ptr %result, align 8, !dbg !2271
  br label %bb1, !dbg !2156

panic4:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_2e65d08331b125af7d295364da7b047f) #13, !dbg !2159
  unreachable, !dbg !2159
}

; ryu::pretty::format64
; Function Attrs: uwtable
define i64 @_ZN3ryu6pretty8format6417h610eefc912eeb013E(double %f, ptr %result) unnamed_addr #4 !dbg !2272 {
start:
  %self.dbg.spill.i113 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i110 = alloca i64, align 8
  %self.dbg.spill.i111 = alloca ptr, align 8
  %count.dbg.spill.i107 = alloca i64, align 8
  %self.dbg.spill.i108 = alloca ptr, align 8
  %count.dbg.spill.i104 = alloca i64, align 8
  %self.dbg.spill.i105 = alloca ptr, align 8
  %count.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca ptr, align 8
  %count.dbg.spill.i98 = alloca i64, align 8
  %self.dbg.spill.i99 = alloca ptr, align 8
  %count.dbg.spill.i95 = alloca i64, align 8
  %self.dbg.spill.i96 = alloca ptr, align 8
  %count.dbg.spill.i92 = alloca i64, align 8
  %self.dbg.spill.i93 = alloca ptr, align 8
  %count.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca ptr, align 8
  %count.dbg.spill.i86 = alloca i64, align 8
  %self.dbg.spill.i87 = alloca ptr, align 8
  %count.dbg.spill.i83 = alloca i64, align 8
  %self.dbg.spill.i84 = alloca ptr, align 8
  %count.dbg.spill.i80 = alloca i64, align 8
  %self.dbg.spill.i81 = alloca ptr, align 8
  %count.dbg.spill.i77 = alloca i64, align 8
  %self.dbg.spill.i78 = alloca ptr, align 8
  %count.dbg.spill.i74 = alloca i64, align 8
  %self.dbg.spill.i75 = alloca ptr, align 8
  %count.dbg.spill.i71 = alloca i64, align 8
  %self.dbg.spill.i72 = alloca ptr, align 8
  %count.dbg.spill.i68 = alloca i64, align 8
  %self.dbg.spill.i69 = alloca ptr, align 8
  %count.dbg.spill.i65 = alloca i64, align 8
  %self.dbg.spill.i66 = alloca ptr, align 8
  %count.dbg.spill.i62 = alloca i64, align 8
  %self.dbg.spill.i63 = alloca ptr, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca ptr, align 8
  %count.dbg.spill.i56 = alloca i64, align 8
  %self.dbg.spill.i57 = alloca ptr, align 8
  %count.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca ptr, align 8
  %count.dbg.spill.i50 = alloca i64, align 8
  %self.dbg.spill.i51 = alloca ptr, align 8
  %count.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i46 = alloca i64, align 8
  %dst.dbg.spill.i47 = alloca ptr, align 8
  %src.dbg.spill.i48 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill44 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %offset.dbg.spill = alloca i64, align 8
  %kk.dbg.spill = alloca i64, align 8
  %k.dbg.spill = alloca i64, align 8
  %length.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca %"d2s::FloatingDecimal64", align 8
  %ieee_exponent.dbg.spill = alloca i32, align 4
  %ieee_mantissa.dbg.spill = alloca i64, align 8
  %sign.dbg.spill = alloca i8, align 1
  %bits.dbg.spill = alloca i64, align 8
  %result.dbg.spill = alloca ptr, align 8
  %f.dbg.spill = alloca double, align 8
  %_121 = alloca %"core::option::Option<isize>", align 8
  %iter1 = alloca %"core::ops::range::Range<isize>", align 8
  %_119 = alloca %"core::ops::range::Range<isize>", align 8
  %_55 = alloca %"core::option::Option<isize>", align 8
  %iter = alloca %"core::ops::range::Range<isize>", align 8
  %_53 = alloca %"core::ops::range::Range<isize>", align 8
  %index = alloca i64, align 8
  %_0 = alloca i64, align 8
  store double %f, ptr %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !2277, metadata !DIExpression()), !dbg !2307
  store ptr %result, ptr %result.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !2278, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.declare(metadata ptr %index, metadata !2287, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2297, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !2303, metadata !DIExpression()), !dbg !2311
; call core::f64::<impl f64>::to_bits
  %bits = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h87803c219b16c1eeE"(double %f), !dbg !2312
  store i64 %bits, ptr %bits.dbg.spill, align 8, !dbg !2312
  call void @llvm.dbg.declare(metadata ptr %bits.dbg.spill, metadata !2279, metadata !DIExpression()), !dbg !2313
  %0 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 52, i32 11), !dbg !2314
  %_8.0 = extractvalue { i32, i1 } %0, 0, !dbg !2314
  %_8.1 = extractvalue { i32, i1 } %0, 1, !dbg !2314
  %1 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2314
  br i1 %1, label %panic, label %bb2, !dbg !2314

bb2:                                              ; preds = %start
  %_9 = icmp ult i32 %_8.0, 64, !dbg !2315
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2315
  br i1 %2, label %bb3, label %panic2, !dbg !2315

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_25f1f2914227c68578163459de2cb513) #13, !dbg !2314
  unreachable, !dbg !2314

bb3:                                              ; preds = %bb2
  %3 = zext i32 %_8.0 to i64, !dbg !2315
  %4 = and i64 %3, 63, !dbg !2315
  %_6 = lshr i64 %bits, %4, !dbg !2315
  %_5 = and i64 %_6, 1, !dbg !2316
  %sign = icmp ne i64 %_5, 0, !dbg !2316
  %5 = zext i1 %sign to i8, !dbg !2316
  store i8 %5, ptr %sign.dbg.spill, align 1, !dbg !2316
  call void @llvm.dbg.declare(metadata ptr %sign.dbg.spill, metadata !2281, metadata !DIExpression()), !dbg !2317
  %ieee_mantissa = and i64 %bits, 4503599627370495, !dbg !2318
  store i64 %ieee_mantissa, ptr %ieee_mantissa.dbg.spill, align 8, !dbg !2318
  call void @llvm.dbg.declare(metadata ptr %ieee_mantissa.dbg.spill, metadata !2283, metadata !DIExpression()), !dbg !2319
  %_17 = lshr i64 %bits, 52, !dbg !2320
  %_16 = trunc i64 %_17 to i32, !dbg !2320
  %ieee_exponent = and i32 %_16, 2047, !dbg !2320
  store i32 %ieee_exponent, ptr %ieee_exponent.dbg.spill, align 4, !dbg !2320
  call void @llvm.dbg.declare(metadata ptr %ieee_exponent.dbg.spill, metadata !2285, metadata !DIExpression()), !dbg !2321
  store i64 0, ptr %index, align 8, !dbg !2322
  br i1 %sign, label %bb9, label %bb11, !dbg !2323

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_899df9b4d4ba37011a32c76ba57f27fe) #13, !dbg !2315
  unreachable, !dbg !2315

bb11:                                             ; preds = %bb10, %bb3
  %6 = icmp eq i32 %ieee_exponent, 0, !dbg !2324
  br i1 %6, label %bb12, label %bb18, !dbg !2324

bb9:                                              ; preds = %bb3
  store i8 45, ptr %result, align 1, !dbg !2325
  %7 = load i64, ptr %index, align 8, !dbg !2326, !noundef !12
  %8 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 1), !dbg !2326
  %_24.0 = extractvalue { i64, i1 } %8, 0, !dbg !2326
  %_24.1 = extractvalue { i64, i1 } %8, 1, !dbg !2326
  %9 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !2326
  br i1 %9, label %panic3, label %bb10, !dbg !2326

bb10:                                             ; preds = %bb9
  store i64 %_24.0, ptr %index, align 8, !dbg !2326
  br label %bb11, !dbg !2327

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_afb1acaf358b5c9646dde4c3ccc54ef1) #13, !dbg !2326
  unreachable, !dbg !2326

bb12:                                             ; preds = %bb11
  %10 = icmp eq i64 %ieee_mantissa, 0, !dbg !2328
  br i1 %10, label %bb13, label %bb18, !dbg !2328

bb18:                                             ; preds = %bb12, %bb11
; call ryu::d2s::d2d
  %11 = call { i64, i32 } @_ZN3ryu3d2s3d2d17heeaf98c7cc011aeaE(i64 %ieee_mantissa, i32 %ieee_exponent), !dbg !2329
  %v.0 = extractvalue { i64, i32 } %11, 0, !dbg !2329
  %v.1 = extractvalue { i64, i32 } %11, 1, !dbg !2329
  store i64 %v.0, ptr %v.dbg.spill, align 8, !dbg !2329
  %12 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 8, !dbg !2329
  store i32 %v.1, ptr %12, align 8, !dbg !2329
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2289, metadata !DIExpression()), !dbg !2330
; call ryu::d2s::decimal_length17
  %_35 = call i32 @_ZN3ryu3d2s16decimal_length1717he889d407549ead65E(i64 %v.0), !dbg !2331
  %length = zext i32 %_35 to i64, !dbg !2331
  store i64 %length, ptr %length.dbg.spill, align 8, !dbg !2331
  call void @llvm.dbg.declare(metadata ptr %length.dbg.spill, metadata !2291, metadata !DIExpression()), !dbg !2332
  %k = sext i32 %v.1 to i64, !dbg !2333
  store i64 %k, ptr %k.dbg.spill, align 8, !dbg !2333
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill, metadata !2293, metadata !DIExpression()), !dbg !2334
  %13 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %length, i64 %k), !dbg !2335
  %_40.0 = extractvalue { i64, i1 } %13, 0, !dbg !2335
  %_40.1 = extractvalue { i64, i1 } %13, 1, !dbg !2335
  %14 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !2335
  br i1 %14, label %panic5, label %bb21, !dbg !2335

bb13:                                             ; preds = %bb12
  store ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %self.dbg.spill.i113, align 8
  %15 = getelementptr inbounds i8, ptr %self.dbg.spill.i113, i64 8
  store i64 3, ptr %15, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i113, metadata !1891, metadata !DIExpression()), !dbg !2336
  %_30 = load i64, ptr %index, align 8, !dbg !2338, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i111, metadata !1866, metadata !DIExpression()), !dbg !2339
  store i64 %_30, ptr %count.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i110, metadata !1874, metadata !DIExpression()), !dbg !2341
  %_0.i112 = getelementptr inbounds i8, ptr %result, i64 %_30, !dbg !2342
  store ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !2343
  store ptr %_0.i112, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !2345
  store i64 3, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !2346
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %_0.i112, i64 1, i64 1, i64 3) #14, !dbg !2347
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i112, ptr align 1 @alloc_3eb9269319b653ee3300e6da2b545429, i64 3, i1 false), !dbg !2348
  %_31 = zext i1 %sign to i64, !dbg !2349
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_31, i64 3), !dbg !2349
  %_32.0 = extractvalue { i64, i1 } %16, 0, !dbg !2349
  %_32.1 = extractvalue { i64, i1 } %16, 1, !dbg !2349
  %17 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !2349
  br i1 %17, label %panic4, label %bb17, !dbg !2349

bb17:                                             ; preds = %bb13
  store i64 %_32.0, ptr %_0, align 8, !dbg !2349
  br label %bb113, !dbg !2350

panic4:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c2e737bfeda28ac63dac6e08d642b1e6) #13, !dbg !2349
  unreachable, !dbg !2349

bb113:                                            ; preds = %bb44, %bb59, %bb79, %bb112, %bb91, %bb17
  %18 = load i64, ptr %_0, align 8, !dbg !2350, !noundef !12
  ret i64 %18, !dbg !2350

bb21:                                             ; preds = %bb18
  store i64 %_40.0, ptr %kk.dbg.spill, align 8, !dbg !2335
  call void @llvm.dbg.declare(metadata ptr %kk.dbg.spill, metadata !2295, metadata !DIExpression()), !dbg !2351
  br label %bb22, !dbg !2352

panic5:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_70c1faef5cfb7a2477799d012a7f96de) #13, !dbg !2335
  unreachable, !dbg !2335

bb22:                                             ; preds = %bb21
  %_42 = icmp sge i64 %k, -324, !dbg !2353
  br i1 %_42, label %bb24, label %bb23, !dbg !2353

bb23:                                             ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_6b032195130f2a22d8556410ea5d0865, i64 27, ptr align 8 @alloc_b9dd5eba6b03387703853d9defe10530) #13, !dbg !2352
  unreachable, !dbg !2352

bb24:                                             ; preds = %bb22
  %_44 = icmp sle i64 0, %k, !dbg !2354
  br i1 %_44, label %bb25, label %bb45, !dbg !2354

bb45:                                             ; preds = %bb25, %bb24
  %_79 = icmp slt i64 0, %_40.0, !dbg !2355
  br i1 %_79, label %bb46, label %bb60, !dbg !2355

bb25:                                             ; preds = %bb24
  %_45 = icmp sle i64 %_40.0, 16, !dbg !2356
  br i1 %_45, label %bb26, label %bb45, !dbg !2356

bb26:                                             ; preds = %bb25
  %_50 = load i64, ptr %index, align 8, !dbg !2357, !noundef !12
  %19 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_50, i64 %length), !dbg !2357
  %_51.0 = extractvalue { i64, i1 } %19, 0, !dbg !2357
  %_51.1 = extractvalue { i64, i1 } %19, 1, !dbg !2357
  %20 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !2357
  br i1 %20, label %panic37, label %bb27, !dbg !2357

bb60:                                             ; preds = %bb46, %bb45
  %_108 = icmp slt i64 -5, %_40.0, !dbg !2358
  br i1 %_108, label %bb61, label %bb80, !dbg !2358

bb46:                                             ; preds = %bb45
  %_80 = icmp sle i64 %_40.0, 16, !dbg !2359
  br i1 %_80, label %bb47, label %bb60, !dbg !2359

bb47:                                             ; preds = %bb46
  %_86 = load i64, ptr %index, align 8, !dbg !2360, !noundef !12
  %21 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_86, i64 %length), !dbg !2360
  %_87.0 = extractvalue { i64, i1 } %21, 0, !dbg !2360
  %_87.1 = extractvalue { i64, i1 } %21, 1, !dbg !2360
  %22 = call i1 @llvm.expect.i1(i1 %_87.1, i1 false), !dbg !2360
  br i1 %22, label %panic31, label %bb48, !dbg !2360

bb80:                                             ; preds = %bb61, %bb60
  %23 = icmp eq i64 %length, 1, !dbg !2361
  br i1 %23, label %bb81, label %bb92, !dbg !2361

bb61:                                             ; preds = %bb60
  %_109 = icmp sle i64 %_40.0, 0, !dbg !2362
  br i1 %_109, label %bb62, label %bb80, !dbg !2362

bb62:                                             ; preds = %bb61
  %_111 = load i64, ptr %index, align 8, !dbg !2363, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i81, metadata !1866, metadata !DIExpression()), !dbg !2364
  store i64 %_111, ptr %count.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i80, metadata !1874, metadata !DIExpression()), !dbg !2366
  %_0.i82 = getelementptr inbounds i8, ptr %result, i64 %_111, !dbg !2367
  store i8 48, ptr %_0.i82, align 1, !dbg !2368
  %_114 = load i64, ptr %index, align 8, !dbg !2369, !noundef !12
  %24 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_114, i64 1), !dbg !2369
  %_115.0 = extractvalue { i64, i1 } %24, 0, !dbg !2369
  %_115.1 = extractvalue { i64, i1 } %24, 1, !dbg !2369
  %25 = call i1 @llvm.expect.i1(i1 %_115.1, i1 false), !dbg !2369
  br i1 %25, label %panic24, label %bb64, !dbg !2369

bb81:                                             ; preds = %bb80
  %_144 = trunc i64 %v.0 to i8, !dbg !2370
  %26 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_144), !dbg !2371
  %_146.0 = extractvalue { i8, i1 } %26, 0, !dbg !2371
  %_146.1 = extractvalue { i8, i1 } %26, 1, !dbg !2371
  %27 = call i1 @llvm.expect.i1(i1 %_146.1, i1 false), !dbg !2371
  br i1 %27, label %panic6, label %bb82, !dbg !2371

bb92:                                             ; preds = %bb80
  %_170 = load i64, ptr %index, align 8, !dbg !2372, !noundef !12
  %28 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_170, i64 %length), !dbg !2372
  %_171.0 = extractvalue { i64, i1 } %28, 0, !dbg !2372
  %_171.1 = extractvalue { i64, i1 } %28, 1, !dbg !2372
  %29 = call i1 @llvm.expect.i1(i1 %_171.1, i1 false), !dbg !2372
  br i1 %29, label %panic12, label %bb93, !dbg !2372

bb82:                                             ; preds = %bb81
  %_148 = load i64, ptr %index, align 8, !dbg !2373, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i108, metadata !1866, metadata !DIExpression()), !dbg !2374
  store i64 %_148, ptr %count.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i107, metadata !1874, metadata !DIExpression()), !dbg !2376
  %_0.i109 = getelementptr inbounds i8, ptr %result, i64 %_148, !dbg !2377
  store i8 %_146.0, ptr %_0.i109, align 1, !dbg !2378
  %_151 = load i64, ptr %index, align 8, !dbg !2379, !noundef !12
  %30 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_151, i64 1), !dbg !2379
  %_152.0 = extractvalue { i64, i1 } %30, 0, !dbg !2379
  %_152.1 = extractvalue { i64, i1 } %30, 1, !dbg !2379
  %31 = call i1 @llvm.expect.i1(i1 %_152.1, i1 false), !dbg !2379
  br i1 %31, label %panic7, label %bb84, !dbg !2379

panic6:                                           ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_647f032d2c58de9421683abf1dbae4e6) #13, !dbg !2371
  unreachable, !dbg !2371

bb84:                                             ; preds = %bb82
  store ptr %result, ptr %self.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i105, metadata !1866, metadata !DIExpression()), !dbg !2380
  store i64 %_152.0, ptr %count.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i104, metadata !1874, metadata !DIExpression()), !dbg !2382
  %_0.i106 = getelementptr inbounds i8, ptr %result, i64 %_152.0, !dbg !2383
  store i8 101, ptr %_0.i106, align 1, !dbg !2384
  %_155 = load i64, ptr %index, align 8, !dbg !2385, !noundef !12
  %32 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_155, i64 2), !dbg !2385
  %_156.0 = extractvalue { i64, i1 } %32, 0, !dbg !2385
  %_156.1 = extractvalue { i64, i1 } %32, 1, !dbg !2385
  %33 = call i1 @llvm.expect.i1(i1 %_156.1, i1 false), !dbg !2385
  br i1 %33, label %panic8, label %bb86, !dbg !2385

panic7:                                           ; preds = %bb82
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0aef3e730f1efb25f22ae2bc2167e071) #13, !dbg !2379
  unreachable, !dbg !2379

bb86:                                             ; preds = %bb84
  %34 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_40.0, i64 1), !dbg !2386
  %_159.0 = extractvalue { i64, i1 } %34, 0, !dbg !2386
  %_159.1 = extractvalue { i64, i1 } %34, 1, !dbg !2386
  %35 = call i1 @llvm.expect.i1(i1 %_159.1, i1 false), !dbg !2386
  br i1 %35, label %panic9, label %bb87, !dbg !2386

panic8:                                           ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_10aa189d23d62e0f67b996694701ae1e) #13, !dbg !2385
  unreachable, !dbg !2385

bb87:                                             ; preds = %bb86
  %_162 = load i64, ptr %index, align 8, !dbg !2387, !noundef !12
  %36 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_162, i64 2), !dbg !2387
  %_163.0 = extractvalue { i64, i1 } %36, 0, !dbg !2387
  %_163.1 = extractvalue { i64, i1 } %36, 1, !dbg !2387
  %37 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false), !dbg !2387
  br i1 %37, label %panic10, label %bb88, !dbg !2387

panic9:                                           ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_ab40335d15b8948a13351f4120f212ca) #13, !dbg !2386
  unreachable, !dbg !2386

bb88:                                             ; preds = %bb87
  store ptr %result, ptr %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i102, metadata !1866, metadata !DIExpression()), !dbg !2388
  store i64 %_163.0, ptr %count.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i101, metadata !1874, metadata !DIExpression()), !dbg !2390
  %_0.i103 = getelementptr inbounds i8, ptr %result, i64 %_163.0, !dbg !2391
; call ryu::pretty::exponent::write_exponent3
  %_157 = call i64 @_ZN3ryu6pretty8exponent15write_exponent317h0c554d8ce0ef1884E(i64 %_159.0, ptr %_0.i103), !dbg !2392
  %38 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_156.0, i64 %_157), !dbg !2385
  %_164.0 = extractvalue { i64, i1 } %38, 0, !dbg !2385
  %_164.1 = extractvalue { i64, i1 } %38, 1, !dbg !2385
  %39 = call i1 @llvm.expect.i1(i1 %_164.1, i1 false), !dbg !2385
  br i1 %39, label %panic11, label %bb91, !dbg !2385

panic10:                                          ; preds = %bb87
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_962e01f7d79e7aa4deb1ea54163a1615) #13, !dbg !2387
  unreachable, !dbg !2387

bb91:                                             ; preds = %bb88
  store i64 %_164.0, ptr %_0, align 8, !dbg !2385
  br label %bb113, !dbg !2393

panic11:                                          ; preds = %bb88
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_10aa189d23d62e0f67b996694701ae1e) #13, !dbg !2385
  unreachable, !dbg !2385

bb93:                                             ; preds = %bb92
  %40 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_171.0, i64 1), !dbg !2372
  %_172.0 = extractvalue { i64, i1 } %40, 0, !dbg !2372
  %_172.1 = extractvalue { i64, i1 } %40, 1, !dbg !2372
  %41 = call i1 @llvm.expect.i1(i1 %_172.1, i1 false), !dbg !2372
  br i1 %41, label %panic13, label %bb94, !dbg !2372

panic12:                                          ; preds = %bb92
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_70af2b46c08d05e895a48124c543c99b) #13, !dbg !2372
  unreachable, !dbg !2372

bb94:                                             ; preds = %bb93
  store ptr %result, ptr %self.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i99, metadata !1866, metadata !DIExpression()), !dbg !2394
  store i64 %_172.0, ptr %count.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i98, metadata !1874, metadata !DIExpression()), !dbg !2396
  %_0.i100 = getelementptr inbounds i8, ptr %result, i64 %_172.0, !dbg !2397
; call ryu::pretty::mantissa::write_mantissa_long
  call void @_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E(i64 %v.0, ptr %_0.i100), !dbg !2398
  %_176 = load i64, ptr %index, align 8, !dbg !2399, !noundef !12
  %42 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_176, i64 1), !dbg !2399
  %_177.0 = extractvalue { i64, i1 } %42, 0, !dbg !2399
  %_177.1 = extractvalue { i64, i1 } %42, 1, !dbg !2399
  %43 = call i1 @llvm.expect.i1(i1 %_177.1, i1 false), !dbg !2399
  br i1 %43, label %panic14, label %bb97, !dbg !2399

panic13:                                          ; preds = %bb93
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_70af2b46c08d05e895a48124c543c99b) #13, !dbg !2372
  unreachable, !dbg !2372

bb97:                                             ; preds = %bb94
  store ptr %result, ptr %self.dbg.spill.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i96, metadata !1866, metadata !DIExpression()), !dbg !2400
  store i64 %_177.0, ptr %count.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i95, metadata !1874, metadata !DIExpression()), !dbg !2402
  %_0.i97 = getelementptr inbounds i8, ptr %result, i64 %_177.0, !dbg !2403
  %_173 = load i8, ptr %_0.i97, align 1, !dbg !2404, !noundef !12
  %_179 = load i64, ptr %index, align 8, !dbg !2405, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i93, metadata !1866, metadata !DIExpression()), !dbg !2406
  store i64 %_179, ptr %count.dbg.spill.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i92, metadata !1874, metadata !DIExpression()), !dbg !2408
  %_0.i94 = getelementptr inbounds i8, ptr %result, i64 %_179, !dbg !2409
  store i8 %_173, ptr %_0.i94, align 1, !dbg !2410
  %_182 = load i64, ptr %index, align 8, !dbg !2411, !noundef !12
  %44 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_182, i64 1), !dbg !2411
  %_183.0 = extractvalue { i64, i1 } %44, 0, !dbg !2411
  %_183.1 = extractvalue { i64, i1 } %44, 1, !dbg !2411
  %45 = call i1 @llvm.expect.i1(i1 %_183.1, i1 false), !dbg !2411
  br i1 %45, label %panic15, label %bb100, !dbg !2411

panic14:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_c170ab98e7c40b04590f36e73dc0afd2) #13, !dbg !2399
  unreachable, !dbg !2399

bb100:                                            ; preds = %bb97
  store ptr %result, ptr %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i90, metadata !1866, metadata !DIExpression()), !dbg !2412
  store i64 %_183.0, ptr %count.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i89, metadata !1874, metadata !DIExpression()), !dbg !2414
  %_0.i91 = getelementptr inbounds i8, ptr %result, i64 %_183.0, !dbg !2415
  store i8 46, ptr %_0.i91, align 1, !dbg !2416
  %_187 = load i64, ptr %index, align 8, !dbg !2417, !noundef !12
  %46 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_187, i64 %length), !dbg !2417
  %_188.0 = extractvalue { i64, i1 } %46, 0, !dbg !2417
  %_188.1 = extractvalue { i64, i1 } %46, 1, !dbg !2417
  %47 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false), !dbg !2417
  br i1 %47, label %panic16, label %bb102, !dbg !2417

panic15:                                          ; preds = %bb97
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6f2b319f7b35c4cbe42138dd8d526db4) #13, !dbg !2411
  unreachable, !dbg !2411

bb102:                                            ; preds = %bb100
  %48 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_188.0, i64 1), !dbg !2417
  %_189.0 = extractvalue { i64, i1 } %48, 0, !dbg !2417
  %_189.1 = extractvalue { i64, i1 } %48, 1, !dbg !2417
  %49 = call i1 @llvm.expect.i1(i1 %_189.1, i1 false), !dbg !2417
  br i1 %49, label %panic17, label %bb103, !dbg !2417

panic16:                                          ; preds = %bb100
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b82baa7c20815ef68341e89eef0e1887) #13, !dbg !2417
  unreachable, !dbg !2417

bb103:                                            ; preds = %bb102
  store ptr %result, ptr %self.dbg.spill.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i87, metadata !1866, metadata !DIExpression()), !dbg !2418
  store i64 %_189.0, ptr %count.dbg.spill.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i86, metadata !1874, metadata !DIExpression()), !dbg !2420
  %_0.i88 = getelementptr inbounds i8, ptr %result, i64 %_189.0, !dbg !2421
  store i8 101, ptr %_0.i88, align 1, !dbg !2422
  %_193 = load i64, ptr %index, align 8, !dbg !2423, !noundef !12
  %50 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_193, i64 %length), !dbg !2423
  %_195.0 = extractvalue { i64, i1 } %50, 0, !dbg !2423
  %_195.1 = extractvalue { i64, i1 } %50, 1, !dbg !2423
  %51 = call i1 @llvm.expect.i1(i1 %_195.1, i1 false), !dbg !2423
  br i1 %51, label %panic18, label %bb105, !dbg !2423

panic17:                                          ; preds = %bb102
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b82baa7c20815ef68341e89eef0e1887) #13, !dbg !2417
  unreachable, !dbg !2417

bb105:                                            ; preds = %bb103
  %52 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_195.0, i64 2), !dbg !2423
  %_196.0 = extractvalue { i64, i1 } %52, 0, !dbg !2423
  %_196.1 = extractvalue { i64, i1 } %52, 1, !dbg !2423
  %53 = call i1 @llvm.expect.i1(i1 %_196.1, i1 false), !dbg !2423
  br i1 %53, label %panic19, label %bb106, !dbg !2423

panic18:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_eaf76a821b9b50c317409e046dfbb053) #13, !dbg !2423
  unreachable, !dbg !2423

bb106:                                            ; preds = %bb105
  %54 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_40.0, i64 1), !dbg !2424
  %_199.0 = extractvalue { i64, i1 } %54, 0, !dbg !2424
  %_199.1 = extractvalue { i64, i1 } %54, 1, !dbg !2424
  %55 = call i1 @llvm.expect.i1(i1 %_199.1, i1 false), !dbg !2424
  br i1 %55, label %panic20, label %bb107, !dbg !2424

panic19:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_eaf76a821b9b50c317409e046dfbb053) #13, !dbg !2423
  unreachable, !dbg !2423

bb107:                                            ; preds = %bb106
  %_203 = load i64, ptr %index, align 8, !dbg !2425, !noundef !12
  %56 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_203, i64 %length), !dbg !2425
  %_204.0 = extractvalue { i64, i1 } %56, 0, !dbg !2425
  %_204.1 = extractvalue { i64, i1 } %56, 1, !dbg !2425
  %57 = call i1 @llvm.expect.i1(i1 %_204.1, i1 false), !dbg !2425
  br i1 %57, label %panic21, label %bb108, !dbg !2425

panic20:                                          ; preds = %bb106
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_98ef727f3717e5d04591ee62dcd085c6) #13, !dbg !2424
  unreachable, !dbg !2424

bb108:                                            ; preds = %bb107
  %58 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_204.0, i64 2), !dbg !2425
  %_205.0 = extractvalue { i64, i1 } %58, 0, !dbg !2425
  %_205.1 = extractvalue { i64, i1 } %58, 1, !dbg !2425
  %59 = call i1 @llvm.expect.i1(i1 %_205.1, i1 false), !dbg !2425
  br i1 %59, label %panic22, label %bb109, !dbg !2425

panic21:                                          ; preds = %bb107
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_431aead480d433b450bcee308582eb9d) #13, !dbg !2425
  unreachable, !dbg !2425

bb109:                                            ; preds = %bb108
  store ptr %result, ptr %self.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i84, metadata !1866, metadata !DIExpression()), !dbg !2426
  store i64 %_205.0, ptr %count.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i83, metadata !1874, metadata !DIExpression()), !dbg !2428
  %_0.i85 = getelementptr inbounds i8, ptr %result, i64 %_205.0, !dbg !2429
; call ryu::pretty::exponent::write_exponent3
  %_197 = call i64 @_ZN3ryu6pretty8exponent15write_exponent317h0c554d8ce0ef1884E(i64 %_199.0, ptr %_0.i85), !dbg !2430
  %60 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_196.0, i64 %_197), !dbg !2423
  %_206.0 = extractvalue { i64, i1 } %60, 0, !dbg !2423
  %_206.1 = extractvalue { i64, i1 } %60, 1, !dbg !2423
  %61 = call i1 @llvm.expect.i1(i1 %_206.1, i1 false), !dbg !2423
  br i1 %61, label %panic23, label %bb112, !dbg !2423

panic22:                                          ; preds = %bb108
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_431aead480d433b450bcee308582eb9d) #13, !dbg !2425
  unreachable, !dbg !2425

bb112:                                            ; preds = %bb109
  store i64 %_206.0, ptr %_0, align 8, !dbg !2423
  br label %bb113, !dbg !2393

panic23:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_eaf76a821b9b50c317409e046dfbb053) #13, !dbg !2423
  unreachable, !dbg !2423

bb64:                                             ; preds = %bb62
  store ptr %result, ptr %self.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i78, metadata !1866, metadata !DIExpression()), !dbg !2431
  store i64 %_115.0, ptr %count.dbg.spill.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i77, metadata !1874, metadata !DIExpression()), !dbg !2433
  %_0.i79 = getelementptr inbounds i8, ptr %result, i64 %_115.0, !dbg !2434
  store i8 46, ptr %_0.i79, align 1, !dbg !2435
  %62 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 2, i64 %_40.0), !dbg !2436
  %_117.0 = extractvalue { i64, i1 } %62, 0, !dbg !2436
  %_117.1 = extractvalue { i64, i1 } %62, 1, !dbg !2436
  %63 = call i1 @llvm.expect.i1(i1 %_117.1, i1 false), !dbg !2436
  br i1 %63, label %panic25, label %bb66, !dbg !2436

panic24:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_93774f00a4af8980e1eef86f9d0a3756) #13, !dbg !2369
  unreachable, !dbg !2369

bb66:                                             ; preds = %bb64
  store i64 %_117.0, ptr %offset.dbg.spill, align 8, !dbg !2436
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !2301, metadata !DIExpression()), !dbg !2437
  store i64 2, ptr %_119, align 8, !dbg !2438
  %64 = getelementptr inbounds i8, ptr %_119, i64 8, !dbg !2438
  store i64 %_117.0, ptr %64, align 8, !dbg !2438
  %65 = load i64, ptr %_119, align 8, !dbg !2438, !noundef !12
  %66 = getelementptr inbounds i8, ptr %_119, i64 8, !dbg !2438
  %67 = load i64, ptr %66, align 8, !dbg !2438, !noundef !12
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %68 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE"(i64 %65, i64 %67), !dbg !2438
  %_118.0 = extractvalue { i64, i64 } %68, 0, !dbg !2438
  %_118.1 = extractvalue { i64, i64 } %68, 1, !dbg !2438
  store i64 %_118.0, ptr %iter1, align 8, !dbg !2438
  %69 = getelementptr inbounds i8, ptr %iter1, i64 8, !dbg !2438
  store i64 %_118.1, ptr %69, align 8, !dbg !2438
  br label %bb68, !dbg !2439

panic25:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_1a18bc689be4b43acdbecc534108ef4c) #13, !dbg !2436
  unreachable, !dbg !2436

bb68:                                             ; preds = %bb72, %bb66
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %70 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E"(ptr align 8 %iter1), !dbg !2311
  %71 = extractvalue { i64, i64 } %70, 0, !dbg !2311
  %72 = extractvalue { i64, i64 } %70, 1, !dbg !2311
  store i64 %71, ptr %_121, align 8, !dbg !2311
  %73 = getelementptr inbounds i8, ptr %_121, i64 8, !dbg !2311
  store i64 %72, ptr %73, align 8, !dbg !2311
  %_123 = load i64, ptr %_121, align 8, !dbg !2311, !range !695, !noundef !12
  %74 = icmp eq i64 %_123, 0, !dbg !2311
  br i1 %74, label %bb71, label %bb70, !dbg !2311

bb71:                                             ; preds = %bb68
  %_134 = load i64, ptr %index, align 8, !dbg !2440, !noundef !12
  %75 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_134, i64 %length), !dbg !2440
  %_135.0 = extractvalue { i64, i1 } %75, 0, !dbg !2440
  %_135.1 = extractvalue { i64, i1 } %75, 1, !dbg !2440
  %76 = call i1 @llvm.expect.i1(i1 %_135.1, i1 false), !dbg !2440
  br i1 %76, label %panic26, label %bb74, !dbg !2440

bb70:                                             ; preds = %bb68
  %77 = getelementptr inbounds i8, ptr %_121, i64 8, !dbg !2441
  %i = load i64, ptr %77, align 8, !dbg !2441, !noundef !12
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2441
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2305, metadata !DIExpression()), !dbg !2442
  %_127 = load i64, ptr %index, align 8, !dbg !2443, !noundef !12
  %78 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_127, i64 %i), !dbg !2443
  %_128.0 = extractvalue { i64, i1 } %78, 0, !dbg !2443
  %_128.1 = extractvalue { i64, i1 } %78, 1, !dbg !2443
  %79 = call i1 @llvm.expect.i1(i1 %_128.1, i1 false), !dbg !2443
  br i1 %79, label %panic30, label %bb72, !dbg !2443

bb74:                                             ; preds = %bb71
  %80 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_135.0, i64 %_117.0), !dbg !2440
  %_136.0 = extractvalue { i64, i1 } %80, 0, !dbg !2440
  %_136.1 = extractvalue { i64, i1 } %80, 1, !dbg !2440
  %81 = call i1 @llvm.expect.i1(i1 %_136.1, i1 false), !dbg !2440
  br i1 %81, label %panic27, label %bb75, !dbg !2440

panic26:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_389ec59f3d1c81cf133722cfb9702901) #13, !dbg !2440
  unreachable, !dbg !2440

bb75:                                             ; preds = %bb74
  store ptr %result, ptr %self.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i75, metadata !1866, metadata !DIExpression()), !dbg !2444
  store i64 %_136.0, ptr %count.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i74, metadata !1874, metadata !DIExpression()), !dbg !2446
  %_0.i76 = getelementptr inbounds i8, ptr %result, i64 %_136.0, !dbg !2447
; call ryu::pretty::mantissa::write_mantissa_long
  call void @_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E(i64 %v.0, ptr %_0.i76), !dbg !2448
  %_139 = load i64, ptr %index, align 8, !dbg !2449, !noundef !12
  %82 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_139, i64 %length), !dbg !2449
  %_141.0 = extractvalue { i64, i1 } %82, 0, !dbg !2449
  %_141.1 = extractvalue { i64, i1 } %82, 1, !dbg !2449
  %83 = call i1 @llvm.expect.i1(i1 %_141.1, i1 false), !dbg !2449
  br i1 %83, label %panic28, label %bb78, !dbg !2449

panic27:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_389ec59f3d1c81cf133722cfb9702901) #13, !dbg !2440
  unreachable, !dbg !2440

bb78:                                             ; preds = %bb75
  %84 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_141.0, i64 %_117.0), !dbg !2449
  %_143.0 = extractvalue { i64, i1 } %84, 0, !dbg !2449
  %_143.1 = extractvalue { i64, i1 } %84, 1, !dbg !2449
  %85 = call i1 @llvm.expect.i1(i1 %_143.1, i1 false), !dbg !2449
  br i1 %85, label %panic29, label %bb79, !dbg !2449

panic28:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8cb5734c769e3eaca01f37c40da6202a) #13, !dbg !2449
  unreachable, !dbg !2449

bb79:                                             ; preds = %bb78
  store i64 %_143.0, ptr %_0, align 8, !dbg !2449
  br label %bb113, !dbg !2450

panic29:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8cb5734c769e3eaca01f37c40da6202a) #13, !dbg !2449
  unreachable, !dbg !2449

bb72:                                             ; preds = %bb70
  store ptr %result, ptr %self.dbg.spill.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i72, metadata !1866, metadata !DIExpression()), !dbg !2451
  store i64 %_128.0, ptr %count.dbg.spill.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i71, metadata !1874, metadata !DIExpression()), !dbg !2453
  %_0.i73 = getelementptr inbounds i8, ptr %result, i64 %_128.0, !dbg !2454
  store i8 48, ptr %_0.i73, align 1, !dbg !2455
  br label %bb68, !dbg !2439

panic30:                                          ; preds = %bb70
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e263836092bbdd5599c87dab7e88e104) #13, !dbg !2443
  unreachable, !dbg !2443

bb48:                                             ; preds = %bb47
  %86 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_87.0, i64 1), !dbg !2360
  %_88.0 = extractvalue { i64, i1 } %86, 0, !dbg !2360
  %_88.1 = extractvalue { i64, i1 } %86, 1, !dbg !2360
  %87 = call i1 @llvm.expect.i1(i1 %_88.1, i1 false), !dbg !2360
  br i1 %87, label %panic32, label %bb49, !dbg !2360

panic31:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_508fc5a772a4a7a5a96bf39259863296) #13, !dbg !2360
  unreachable, !dbg !2360

bb49:                                             ; preds = %bb48
  store ptr %result, ptr %self.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i69, metadata !1866, metadata !DIExpression()), !dbg !2456
  store i64 %_88.0, ptr %count.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i68, metadata !1874, metadata !DIExpression()), !dbg !2458
  %_0.i70 = getelementptr inbounds i8, ptr %result, i64 %_88.0, !dbg !2459
; call ryu::pretty::mantissa::write_mantissa_long
  call void @_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E(i64 %v.0, ptr %_0.i70), !dbg !2460
  %_93 = load i64, ptr %index, align 8, !dbg !2461, !noundef !12
  %88 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_93, i64 1), !dbg !2461
  %_94.0 = extractvalue { i64, i1 } %88, 0, !dbg !2461
  %_94.1 = extractvalue { i64, i1 } %88, 1, !dbg !2461
  %89 = call i1 @llvm.expect.i1(i1 %_94.1, i1 false), !dbg !2461
  br i1 %89, label %panic33, label %bb52, !dbg !2461

panic32:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_508fc5a772a4a7a5a96bf39259863296) #13, !dbg !2360
  unreachable, !dbg !2360

bb52:                                             ; preds = %bb49
  store ptr %result, ptr %self.dbg.spill.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i66, metadata !1866, metadata !DIExpression()), !dbg !2462
  store i64 %_94.0, ptr %count.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i65, metadata !1874, metadata !DIExpression()), !dbg !2464
  %_0.i67 = getelementptr inbounds i8, ptr %result, i64 %_94.0, !dbg !2465
  %_96 = load i64, ptr %index, align 8, !dbg !2466, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i63, metadata !1866, metadata !DIExpression()), !dbg !2467
  store i64 %_96, ptr %count.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i62, metadata !1874, metadata !DIExpression()), !dbg !2469
  %_0.i64 = getelementptr inbounds i8, ptr %result, i64 %_96, !dbg !2470
  store ptr %_0.i67, ptr %src.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i48, metadata !2471, metadata !DIExpression()), !dbg !2476
  store ptr %_0.i64, ptr %dst.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i47, metadata !2474, metadata !DIExpression()), !dbg !2478
  store i64 %_40.0, ptr %count.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i46, metadata !2475, metadata !DIExpression()), !dbg !2479
; call core::intrinsics::copy::precondition_check
  call void @_ZN4core10intrinsics4copy18precondition_check17h17007366dc948817E(ptr %_0.i67, ptr %_0.i64, i64 1) #14, !dbg !2480
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %_0.i64, ptr align 1 %_0.i67, i64 %_40.0, i1 false), !dbg !2481
  %_100 = load i64, ptr %index, align 8, !dbg !2482, !noundef !12
  %90 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_100, i64 %_40.0), !dbg !2482
  %_101.0 = extractvalue { i64, i1 } %90, 0, !dbg !2482
  %_101.1 = extractvalue { i64, i1 } %90, 1, !dbg !2482
  %91 = call i1 @llvm.expect.i1(i1 %_101.1, i1 false), !dbg !2482
  br i1 %91, label %panic34, label %bb56, !dbg !2482

panic33:                                          ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_3b4e3eb3bbf2ba580f063ac09256cb3b) #13, !dbg !2461
  unreachable, !dbg !2461

bb56:                                             ; preds = %bb52
  store ptr %result, ptr %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i60, metadata !1866, metadata !DIExpression()), !dbg !2483
  store i64 %_101.0, ptr %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i59, metadata !1874, metadata !DIExpression()), !dbg !2485
  %_0.i61 = getelementptr inbounds i8, ptr %result, i64 %_101.0, !dbg !2486
  store i8 46, ptr %_0.i61, align 1, !dbg !2487
  %_104 = load i64, ptr %index, align 8, !dbg !2488, !noundef !12
  %92 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_104, i64 %length), !dbg !2488
  %_106.0 = extractvalue { i64, i1 } %92, 0, !dbg !2488
  %_106.1 = extractvalue { i64, i1 } %92, 1, !dbg !2488
  %93 = call i1 @llvm.expect.i1(i1 %_106.1, i1 false), !dbg !2488
  br i1 %93, label %panic35, label %bb58, !dbg !2488

panic34:                                          ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_58994bb0b3faa9d52df204d8aeb426d0) #13, !dbg !2482
  unreachable, !dbg !2482

bb58:                                             ; preds = %bb56
  %94 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_106.0, i64 1), !dbg !2488
  %_107.0 = extractvalue { i64, i1 } %94, 0, !dbg !2488
  %_107.1 = extractvalue { i64, i1 } %94, 1, !dbg !2488
  %95 = call i1 @llvm.expect.i1(i1 %_107.1, i1 false), !dbg !2488
  br i1 %95, label %panic36, label %bb59, !dbg !2488

panic35:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b9e6d3068585ff4db1f56a6d900e8a79) #13, !dbg !2488
  unreachable, !dbg !2488

bb59:                                             ; preds = %bb58
  store i64 %_107.0, ptr %_0, align 8, !dbg !2488
  br label %bb113, !dbg !2489

panic36:                                          ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b9e6d3068585ff4db1f56a6d900e8a79) #13, !dbg !2488
  unreachable, !dbg !2488

bb27:                                             ; preds = %bb26
  store ptr %result, ptr %self.dbg.spill.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i57, metadata !1866, metadata !DIExpression()), !dbg !2490
  store i64 %_51.0, ptr %count.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i56, metadata !1874, metadata !DIExpression()), !dbg !2492
  %_0.i58 = getelementptr inbounds i8, ptr %result, i64 %_51.0, !dbg !2493
; call ryu::pretty::mantissa::write_mantissa_long
  call void @_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E(i64 %v.0, ptr %_0.i58), !dbg !2494
  store i64 %length, ptr %_53, align 8, !dbg !2495
  %96 = getelementptr inbounds i8, ptr %_53, i64 8, !dbg !2495
  store i64 %_40.0, ptr %96, align 8, !dbg !2495
  %97 = load i64, ptr %_53, align 8, !dbg !2495, !noundef !12
  %98 = getelementptr inbounds i8, ptr %_53, i64 8, !dbg !2495
  %99 = load i64, ptr %98, align 8, !dbg !2495, !noundef !12
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %100 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE"(i64 %97, i64 %99), !dbg !2495
  %_52.0 = extractvalue { i64, i64 } %100, 0, !dbg !2495
  %_52.1 = extractvalue { i64, i64 } %100, 1, !dbg !2495
  store i64 %_52.0, ptr %iter, align 8, !dbg !2495
  %101 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !2495
  store i64 %_52.1, ptr %101, align 8, !dbg !2495
  br label %bb31, !dbg !2496

panic37:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_2dff8ecebb050fdf08a081277e2235c0) #13, !dbg !2357
  unreachable, !dbg !2357

bb31:                                             ; preds = %bb36, %bb27
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %102 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E"(ptr align 8 %iter), !dbg !2310
  %103 = extractvalue { i64, i64 } %102, 0, !dbg !2310
  %104 = extractvalue { i64, i64 } %102, 1, !dbg !2310
  store i64 %103, ptr %_55, align 8, !dbg !2310
  %105 = getelementptr inbounds i8, ptr %_55, i64 8, !dbg !2310
  store i64 %104, ptr %105, align 8, !dbg !2310
  %_57 = load i64, ptr %_55, align 8, !dbg !2310, !range !695, !noundef !12
  %106 = icmp eq i64 %_57, 0, !dbg !2310
  br i1 %106, label %bb35, label %bb34, !dbg !2310

bb35:                                             ; preds = %bb31
  %_65 = load i64, ptr %index, align 8, !dbg !2497, !noundef !12
  %107 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_65, i64 %_40.0), !dbg !2497
  %_66.0 = extractvalue { i64, i1 } %107, 0, !dbg !2497
  %_66.1 = extractvalue { i64, i1 } %107, 1, !dbg !2497
  %108 = call i1 @llvm.expect.i1(i1 %_66.1, i1 false), !dbg !2497
  br i1 %108, label %panic38, label %bb38, !dbg !2497

bb34:                                             ; preds = %bb31
  %109 = getelementptr inbounds i8, ptr %_55, i64 8, !dbg !2498
  %i43 = load i64, ptr %109, align 8, !dbg !2498, !noundef !12
  store i64 %i43, ptr %i.dbg.spill44, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill44, metadata !2299, metadata !DIExpression()), !dbg !2499
  %_61 = load i64, ptr %index, align 8, !dbg !2500, !noundef !12
  %110 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_61, i64 %i43), !dbg !2500
  %_62.0 = extractvalue { i64, i1 } %110, 0, !dbg !2500
  %_62.1 = extractvalue { i64, i1 } %110, 1, !dbg !2500
  %111 = call i1 @llvm.expect.i1(i1 %_62.1, i1 false), !dbg !2500
  br i1 %111, label %panic45, label %bb36, !dbg !2500

bb38:                                             ; preds = %bb35
  store ptr %result, ptr %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i54, metadata !1866, metadata !DIExpression()), !dbg !2501
  store i64 %_66.0, ptr %count.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i53, metadata !1874, metadata !DIExpression()), !dbg !2503
  %_0.i55 = getelementptr inbounds i8, ptr %result, i64 %_66.0, !dbg !2504
  store i8 46, ptr %_0.i55, align 1, !dbg !2505
  %_70 = load i64, ptr %index, align 8, !dbg !2506, !noundef !12
  %112 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_70, i64 %_40.0), !dbg !2506
  %_71.0 = extractvalue { i64, i1 } %112, 0, !dbg !2506
  %_71.1 = extractvalue { i64, i1 } %112, 1, !dbg !2506
  %113 = call i1 @llvm.expect.i1(i1 %_71.1, i1 false), !dbg !2506
  br i1 %113, label %panic39, label %bb40, !dbg !2506

panic38:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_268964ab7f97fa4448cd5566ad1180ea) #13, !dbg !2497
  unreachable, !dbg !2497

bb40:                                             ; preds = %bb38
  %114 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_71.0, i64 1), !dbg !2506
  %_72.0 = extractvalue { i64, i1 } %114, 0, !dbg !2506
  %_72.1 = extractvalue { i64, i1 } %114, 1, !dbg !2506
  %115 = call i1 @llvm.expect.i1(i1 %_72.1, i1 false), !dbg !2506
  br i1 %115, label %panic40, label %bb41, !dbg !2506

panic39:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5bcda4fdd36efa045062ff8eaa319fc7) #13, !dbg !2506
  unreachable, !dbg !2506

bb41:                                             ; preds = %bb40
  store ptr %result, ptr %self.dbg.spill.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i51, metadata !1866, metadata !DIExpression()), !dbg !2507
  store i64 %_72.0, ptr %count.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i50, metadata !1874, metadata !DIExpression()), !dbg !2509
  %_0.i52 = getelementptr inbounds i8, ptr %result, i64 %_72.0, !dbg !2510
  store i8 48, ptr %_0.i52, align 1, !dbg !2511
  %_75 = load i64, ptr %index, align 8, !dbg !2512, !noundef !12
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_75, i64 %_40.0), !dbg !2512
  %_77.0 = extractvalue { i64, i1 } %116, 0, !dbg !2512
  %_77.1 = extractvalue { i64, i1 } %116, 1, !dbg !2512
  %117 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false), !dbg !2512
  br i1 %117, label %panic41, label %bb43, !dbg !2512

panic40:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_5bcda4fdd36efa045062ff8eaa319fc7) #13, !dbg !2506
  unreachable, !dbg !2506

bb43:                                             ; preds = %bb41
  %118 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_77.0, i64 2), !dbg !2512
  %_78.0 = extractvalue { i64, i1 } %118, 0, !dbg !2512
  %_78.1 = extractvalue { i64, i1 } %118, 1, !dbg !2512
  %119 = call i1 @llvm.expect.i1(i1 %_78.1, i1 false), !dbg !2512
  br i1 %119, label %panic42, label %bb44, !dbg !2512

panic41:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6c2cd21a49da83ad98b84496d8844f0e) #13, !dbg !2512
  unreachable, !dbg !2512

bb44:                                             ; preds = %bb43
  store i64 %_78.0, ptr %_0, align 8, !dbg !2512
  br label %bb113, !dbg !2513

panic42:                                          ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6c2cd21a49da83ad98b84496d8844f0e) #13, !dbg !2512
  unreachable, !dbg !2512

bb36:                                             ; preds = %bb34
  store ptr %result, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !2514
  store i64 %_62.0, ptr %count.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i49, metadata !1874, metadata !DIExpression()), !dbg !2516
  %_0.i = getelementptr inbounds i8, ptr %result, i64 %_62.0, !dbg !2517
  store i8 48, ptr %_0.i, align 1, !dbg !2518
  br label %bb31, !dbg !2496

panic45:                                          ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0246f2d8c62afc3704117e1e9396c104) #13, !dbg !2500
  unreachable, !dbg !2500

bb33:                                             ; No predecessors!
  unreachable, !dbg !2310
}

; ryu::pretty::format32
; Function Attrs: uwtable
define i64 @_ZN3ryu6pretty8format3217hd024972d83518103E(float %f, ptr %result) unnamed_addr #4 !dbg !2519 {
start:
  %self.dbg.spill.i113 = alloca { ptr, i64 }, align 8
  %count.dbg.spill.i110 = alloca i64, align 8
  %self.dbg.spill.i111 = alloca ptr, align 8
  %count.dbg.spill.i107 = alloca i64, align 8
  %self.dbg.spill.i108 = alloca ptr, align 8
  %count.dbg.spill.i104 = alloca i64, align 8
  %self.dbg.spill.i105 = alloca ptr, align 8
  %count.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca ptr, align 8
  %count.dbg.spill.i98 = alloca i64, align 8
  %self.dbg.spill.i99 = alloca ptr, align 8
  %count.dbg.spill.i95 = alloca i64, align 8
  %self.dbg.spill.i96 = alloca ptr, align 8
  %count.dbg.spill.i92 = alloca i64, align 8
  %self.dbg.spill.i93 = alloca ptr, align 8
  %count.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca ptr, align 8
  %count.dbg.spill.i86 = alloca i64, align 8
  %self.dbg.spill.i87 = alloca ptr, align 8
  %count.dbg.spill.i83 = alloca i64, align 8
  %self.dbg.spill.i84 = alloca ptr, align 8
  %count.dbg.spill.i80 = alloca i64, align 8
  %self.dbg.spill.i81 = alloca ptr, align 8
  %count.dbg.spill.i77 = alloca i64, align 8
  %self.dbg.spill.i78 = alloca ptr, align 8
  %count.dbg.spill.i74 = alloca i64, align 8
  %self.dbg.spill.i75 = alloca ptr, align 8
  %count.dbg.spill.i71 = alloca i64, align 8
  %self.dbg.spill.i72 = alloca ptr, align 8
  %count.dbg.spill.i68 = alloca i64, align 8
  %self.dbg.spill.i69 = alloca ptr, align 8
  %count.dbg.spill.i65 = alloca i64, align 8
  %self.dbg.spill.i66 = alloca ptr, align 8
  %count.dbg.spill.i62 = alloca i64, align 8
  %self.dbg.spill.i63 = alloca ptr, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca ptr, align 8
  %count.dbg.spill.i56 = alloca i64, align 8
  %self.dbg.spill.i57 = alloca ptr, align 8
  %count.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca ptr, align 8
  %count.dbg.spill.i50 = alloca i64, align 8
  %self.dbg.spill.i51 = alloca ptr, align 8
  %count.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i = alloca ptr, align 8
  %count.dbg.spill.i46 = alloca i64, align 8
  %dst.dbg.spill.i47 = alloca ptr, align 8
  %src.dbg.spill.i48 = alloca ptr, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %dst.dbg.spill.i = alloca ptr, align 8
  %src.dbg.spill.i = alloca ptr, align 8
  %i.dbg.spill44 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %offset.dbg.spill = alloca i64, align 8
  %kk.dbg.spill = alloca i64, align 8
  %k.dbg.spill = alloca i64, align 8
  %length.dbg.spill = alloca i64, align 8
  %v.dbg.spill = alloca %"f2s::FloatingDecimal32", align 4
  %ieee_exponent.dbg.spill = alloca i32, align 4
  %ieee_mantissa.dbg.spill = alloca i32, align 4
  %sign.dbg.spill = alloca i8, align 1
  %bits.dbg.spill = alloca i32, align 4
  %result.dbg.spill = alloca ptr, align 8
  %f.dbg.spill = alloca float, align 4
  %_120 = alloca %"core::option::Option<isize>", align 8
  %iter1 = alloca %"core::ops::range::Range<isize>", align 8
  %_118 = alloca %"core::ops::range::Range<isize>", align 8
  %_54 = alloca %"core::option::Option<isize>", align 8
  %iter = alloca %"core::ops::range::Range<isize>", align 8
  %_52 = alloca %"core::ops::range::Range<isize>", align 8
  %index = alloca i64, align 8
  %_0 = alloca i64, align 8
  store float %f, ptr %f.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %f.dbg.spill, metadata !2523, metadata !DIExpression()), !dbg !2553
  store ptr %result, ptr %result.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %result.dbg.spill, metadata !2524, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.declare(metadata ptr %index, metadata !2533, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.declare(metadata ptr %iter, metadata !2543, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.declare(metadata ptr %iter1, metadata !2549, metadata !DIExpression()), !dbg !2557
; call core::f32::<impl f32>::to_bits
  %bits = call i32 @"_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17he35d6ad522d304caE"(float %f), !dbg !2558
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !2558
  call void @llvm.dbg.declare(metadata ptr %bits.dbg.spill, metadata !2525, metadata !DIExpression()), !dbg !2559
  %0 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 23, i32 8), !dbg !2560
  %_8.0 = extractvalue { i32, i1 } %0, 0, !dbg !2560
  %_8.1 = extractvalue { i32, i1 } %0, 1, !dbg !2560
  %1 = call i1 @llvm.expect.i1(i1 %_8.1, i1 false), !dbg !2560
  br i1 %1, label %panic, label %bb2, !dbg !2560

bb2:                                              ; preds = %start
  %_9 = icmp ult i32 %_8.0, 32, !dbg !2561
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !2561
  br i1 %2, label %bb3, label %panic2, !dbg !2561

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_de2b1923cb7df6b03e198151dc589ded) #13, !dbg !2560
  unreachable, !dbg !2560

bb3:                                              ; preds = %bb2
  %3 = and i32 %_8.0, 31, !dbg !2561
  %_6 = lshr i32 %bits, %3, !dbg !2561
  %_5 = and i32 %_6, 1, !dbg !2562
  %sign = icmp ne i32 %_5, 0, !dbg !2562
  %4 = zext i1 %sign to i8, !dbg !2562
  store i8 %4, ptr %sign.dbg.spill, align 1, !dbg !2562
  call void @llvm.dbg.declare(metadata ptr %sign.dbg.spill, metadata !2527, metadata !DIExpression()), !dbg !2563
  %ieee_mantissa = and i32 %bits, 8388607, !dbg !2564
  store i32 %ieee_mantissa, ptr %ieee_mantissa.dbg.spill, align 4, !dbg !2564
  call void @llvm.dbg.declare(metadata ptr %ieee_mantissa.dbg.spill, metadata !2529, metadata !DIExpression()), !dbg !2565
  %_16 = lshr i32 %bits, 23, !dbg !2566
  %ieee_exponent = and i32 %_16, 255, !dbg !2566
  store i32 %ieee_exponent, ptr %ieee_exponent.dbg.spill, align 4, !dbg !2566
  call void @llvm.dbg.declare(metadata ptr %ieee_exponent.dbg.spill, metadata !2531, metadata !DIExpression()), !dbg !2567
  store i64 0, ptr %index, align 8, !dbg !2568
  br i1 %sign, label %bb9, label %bb11, !dbg !2569

panic2:                                           ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.5, i64 36, ptr align 8 @alloc_be4df936555c915d0a19f77f311d4053) #13, !dbg !2561
  unreachable, !dbg !2561

bb11:                                             ; preds = %bb10, %bb3
  %5 = icmp eq i32 %ieee_exponent, 0, !dbg !2570
  br i1 %5, label %bb12, label %bb18, !dbg !2570

bb9:                                              ; preds = %bb3
  store i8 45, ptr %result, align 1, !dbg !2571
  %6 = load i64, ptr %index, align 8, !dbg !2572, !noundef !12
  %7 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 1), !dbg !2572
  %_23.0 = extractvalue { i64, i1 } %7, 0, !dbg !2572
  %_23.1 = extractvalue { i64, i1 } %7, 1, !dbg !2572
  %8 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !2572
  br i1 %8, label %panic3, label %bb10, !dbg !2572

bb10:                                             ; preds = %bb9
  store i64 %_23.0, ptr %index, align 8, !dbg !2572
  br label %bb11, !dbg !2573

panic3:                                           ; preds = %bb9
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_62b7eb59d0f8ed5ca50fd5bd1b0b5354) #13, !dbg !2572
  unreachable, !dbg !2572

bb12:                                             ; preds = %bb11
  %9 = icmp eq i32 %ieee_mantissa, 0, !dbg !2574
  br i1 %9, label %bb13, label %bb18, !dbg !2574

bb18:                                             ; preds = %bb12, %bb11
; call ryu::f2s::f2d
  %10 = call { i32, i32 } @_ZN3ryu3f2s3f2d17hc9fc6dfcf037e500E(i32 %ieee_mantissa, i32 %ieee_exponent), !dbg !2575
  %v.0 = extractvalue { i32, i32 } %10, 0, !dbg !2575
  %v.1 = extractvalue { i32, i32 } %10, 1, !dbg !2575
  store i32 %v.0, ptr %v.dbg.spill, align 4, !dbg !2575
  %11 = getelementptr inbounds i8, ptr %v.dbg.spill, i64 4, !dbg !2575
  store i32 %v.1, ptr %11, align 4, !dbg !2575
  call void @llvm.dbg.declare(metadata ptr %v.dbg.spill, metadata !2535, metadata !DIExpression()), !dbg !2576
; call ryu::common::decimal_length9
  %_34 = call i32 @_ZN3ryu6common15decimal_length917he93f7bd74fb523f6E(i32 %v.0), !dbg !2577
  %length = zext i32 %_34 to i64, !dbg !2577
  store i64 %length, ptr %length.dbg.spill, align 8, !dbg !2577
  call void @llvm.dbg.declare(metadata ptr %length.dbg.spill, metadata !2537, metadata !DIExpression()), !dbg !2578
  %k = sext i32 %v.1 to i64, !dbg !2579
  store i64 %k, ptr %k.dbg.spill, align 8, !dbg !2579
  call void @llvm.dbg.declare(metadata ptr %k.dbg.spill, metadata !2539, metadata !DIExpression()), !dbg !2580
  %12 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %length, i64 %k), !dbg !2581
  %_39.0 = extractvalue { i64, i1 } %12, 0, !dbg !2581
  %_39.1 = extractvalue { i64, i1 } %12, 1, !dbg !2581
  %13 = call i1 @llvm.expect.i1(i1 %_39.1, i1 false), !dbg !2581
  br i1 %13, label %panic5, label %bb21, !dbg !2581

bb13:                                             ; preds = %bb12
  store ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %self.dbg.spill.i113, align 8
  %14 = getelementptr inbounds i8, ptr %self.dbg.spill.i113, i64 8
  store i64 3, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i113, metadata !1891, metadata !DIExpression()), !dbg !2582
  %_29 = load i64, ptr %index, align 8, !dbg !2584, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i111, metadata !1866, metadata !DIExpression()), !dbg !2585
  store i64 %_29, ptr %count.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i110, metadata !1874, metadata !DIExpression()), !dbg !2587
  %_0.i112 = getelementptr inbounds i8, ptr %result, i64 %_29, !dbg !2588
  store ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %src.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i, metadata !1920, metadata !DIExpression()), !dbg !2589
  store ptr %_0.i112, ptr %dst.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i, metadata !1925, metadata !DIExpression()), !dbg !2591
  store i64 3, ptr %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i, metadata !1926, metadata !DIExpression()), !dbg !2592
; call core::intrinsics::copy_nonoverlapping::precondition_check
  call void @_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E(ptr @alloc_3eb9269319b653ee3300e6da2b545429, ptr %_0.i112, i64 1, i64 1, i64 3) #14, !dbg !2593
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %_0.i112, ptr align 1 @alloc_3eb9269319b653ee3300e6da2b545429, i64 3, i1 false), !dbg !2594
  %_30 = zext i1 %sign to i64, !dbg !2595
  %15 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_30, i64 3), !dbg !2595
  %_31.0 = extractvalue { i64, i1 } %15, 0, !dbg !2595
  %_31.1 = extractvalue { i64, i1 } %15, 1, !dbg !2595
  %16 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !2595
  br i1 %16, label %panic4, label %bb17, !dbg !2595

bb17:                                             ; preds = %bb13
  store i64 %_31.0, ptr %_0, align 8, !dbg !2595
  br label %bb113, !dbg !2596

panic4:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_6494673d6e4f5c76e5584b44dbea428b) #13, !dbg !2595
  unreachable, !dbg !2595

bb113:                                            ; preds = %bb44, %bb59, %bb79, %bb112, %bb91, %bb17
  %17 = load i64, ptr %_0, align 8, !dbg !2596, !noundef !12
  ret i64 %17, !dbg !2596

bb21:                                             ; preds = %bb18
  store i64 %_39.0, ptr %kk.dbg.spill, align 8, !dbg !2581
  call void @llvm.dbg.declare(metadata ptr %kk.dbg.spill, metadata !2541, metadata !DIExpression()), !dbg !2597
  br label %bb22, !dbg !2598

panic5:                                           ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_9e0dc1f8d3e634602fee5d837c151a01) #13, !dbg !2581
  unreachable, !dbg !2581

bb22:                                             ; preds = %bb21
  %_41 = icmp sge i64 %k, -45, !dbg !2599
  br i1 %_41, label %bb24, label %bb23, !dbg !2599

bb23:                                             ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @alloc_e7f75bd69c63639eb6ac04609381d8c1, i64 26, ptr align 8 @alloc_3c89b3531b76a986d8c857e967f7cef6) #13, !dbg !2598
  unreachable, !dbg !2598

bb24:                                             ; preds = %bb22
  %_43 = icmp sle i64 0, %k, !dbg !2600
  br i1 %_43, label %bb25, label %bb45, !dbg !2600

bb45:                                             ; preds = %bb25, %bb24
  %_78 = icmp slt i64 0, %_39.0, !dbg !2601
  br i1 %_78, label %bb46, label %bb60, !dbg !2601

bb25:                                             ; preds = %bb24
  %_44 = icmp sle i64 %_39.0, 13, !dbg !2602
  br i1 %_44, label %bb26, label %bb45, !dbg !2602

bb26:                                             ; preds = %bb25
  %_49 = load i64, ptr %index, align 8, !dbg !2603, !noundef !12
  %18 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_49, i64 %length), !dbg !2603
  %_50.0 = extractvalue { i64, i1 } %18, 0, !dbg !2603
  %_50.1 = extractvalue { i64, i1 } %18, 1, !dbg !2603
  %19 = call i1 @llvm.expect.i1(i1 %_50.1, i1 false), !dbg !2603
  br i1 %19, label %panic37, label %bb27, !dbg !2603

bb60:                                             ; preds = %bb46, %bb45
  %_107 = icmp slt i64 -6, %_39.0, !dbg !2604
  br i1 %_107, label %bb61, label %bb80, !dbg !2604

bb46:                                             ; preds = %bb45
  %_79 = icmp sle i64 %_39.0, 13, !dbg !2605
  br i1 %_79, label %bb47, label %bb60, !dbg !2605

bb47:                                             ; preds = %bb46
  %_85 = load i64, ptr %index, align 8, !dbg !2606, !noundef !12
  %20 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_85, i64 %length), !dbg !2606
  %_86.0 = extractvalue { i64, i1 } %20, 0, !dbg !2606
  %_86.1 = extractvalue { i64, i1 } %20, 1, !dbg !2606
  %21 = call i1 @llvm.expect.i1(i1 %_86.1, i1 false), !dbg !2606
  br i1 %21, label %panic31, label %bb48, !dbg !2606

bb80:                                             ; preds = %bb61, %bb60
  %22 = icmp eq i64 %length, 1, !dbg !2607
  br i1 %22, label %bb81, label %bb92, !dbg !2607

bb61:                                             ; preds = %bb60
  %_108 = icmp sle i64 %_39.0, 0, !dbg !2608
  br i1 %_108, label %bb62, label %bb80, !dbg !2608

bb62:                                             ; preds = %bb61
  %_110 = load i64, ptr %index, align 8, !dbg !2609, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i81, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i81, metadata !1866, metadata !DIExpression()), !dbg !2610
  store i64 %_110, ptr %count.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i80, metadata !1874, metadata !DIExpression()), !dbg !2612
  %_0.i82 = getelementptr inbounds i8, ptr %result, i64 %_110, !dbg !2613
  store i8 48, ptr %_0.i82, align 1, !dbg !2614
  %_113 = load i64, ptr %index, align 8, !dbg !2615, !noundef !12
  %23 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_113, i64 1), !dbg !2615
  %_114.0 = extractvalue { i64, i1 } %23, 0, !dbg !2615
  %_114.1 = extractvalue { i64, i1 } %23, 1, !dbg !2615
  %24 = call i1 @llvm.expect.i1(i1 %_114.1, i1 false), !dbg !2615
  br i1 %24, label %panic24, label %bb64, !dbg !2615

bb81:                                             ; preds = %bb80
  %_143 = trunc i32 %v.0 to i8, !dbg !2616
  %25 = call { i8, i1 } @llvm.uadd.with.overflow.i8(i8 48, i8 %_143), !dbg !2617
  %_145.0 = extractvalue { i8, i1 } %25, 0, !dbg !2617
  %_145.1 = extractvalue { i8, i1 } %25, 1, !dbg !2617
  %26 = call i1 @llvm.expect.i1(i1 %_145.1, i1 false), !dbg !2617
  br i1 %26, label %panic6, label %bb82, !dbg !2617

bb92:                                             ; preds = %bb80
  %_169 = load i64, ptr %index, align 8, !dbg !2618, !noundef !12
  %27 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_169, i64 %length), !dbg !2618
  %_170.0 = extractvalue { i64, i1 } %27, 0, !dbg !2618
  %_170.1 = extractvalue { i64, i1 } %27, 1, !dbg !2618
  %28 = call i1 @llvm.expect.i1(i1 %_170.1, i1 false), !dbg !2618
  br i1 %28, label %panic12, label %bb93, !dbg !2618

bb82:                                             ; preds = %bb81
  %_147 = load i64, ptr %index, align 8, !dbg !2619, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i108, metadata !1866, metadata !DIExpression()), !dbg !2620
  store i64 %_147, ptr %count.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i107, metadata !1874, metadata !DIExpression()), !dbg !2622
  %_0.i109 = getelementptr inbounds i8, ptr %result, i64 %_147, !dbg !2623
  store i8 %_145.0, ptr %_0.i109, align 1, !dbg !2624
  %_150 = load i64, ptr %index, align 8, !dbg !2625, !noundef !12
  %29 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_150, i64 1), !dbg !2625
  %_151.0 = extractvalue { i64, i1 } %29, 0, !dbg !2625
  %_151.1 = extractvalue { i64, i1 } %29, 1, !dbg !2625
  %30 = call i1 @llvm.expect.i1(i1 %_151.1, i1 false), !dbg !2625
  br i1 %30, label %panic7, label %bb84, !dbg !2625

panic6:                                           ; preds = %bb81
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8002c0f7d74f7d085856e37af2ee0d1d) #13, !dbg !2617
  unreachable, !dbg !2617

bb84:                                             ; preds = %bb82
  store ptr %result, ptr %self.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i105, metadata !1866, metadata !DIExpression()), !dbg !2626
  store i64 %_151.0, ptr %count.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i104, metadata !1874, metadata !DIExpression()), !dbg !2628
  %_0.i106 = getelementptr inbounds i8, ptr %result, i64 %_151.0, !dbg !2629
  store i8 101, ptr %_0.i106, align 1, !dbg !2630
  %_154 = load i64, ptr %index, align 8, !dbg !2631, !noundef !12
  %31 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_154, i64 2), !dbg !2631
  %_155.0 = extractvalue { i64, i1 } %31, 0, !dbg !2631
  %_155.1 = extractvalue { i64, i1 } %31, 1, !dbg !2631
  %32 = call i1 @llvm.expect.i1(i1 %_155.1, i1 false), !dbg !2631
  br i1 %32, label %panic8, label %bb86, !dbg !2631

panic7:                                           ; preds = %bb82
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_96b2feb1717fc911e72dce38dc775073) #13, !dbg !2625
  unreachable, !dbg !2625

bb86:                                             ; preds = %bb84
  %33 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_39.0, i64 1), !dbg !2632
  %_158.0 = extractvalue { i64, i1 } %33, 0, !dbg !2632
  %_158.1 = extractvalue { i64, i1 } %33, 1, !dbg !2632
  %34 = call i1 @llvm.expect.i1(i1 %_158.1, i1 false), !dbg !2632
  br i1 %34, label %panic9, label %bb87, !dbg !2632

panic8:                                           ; preds = %bb84
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0cbb71e3d6801399b56717fa659f9ced) #13, !dbg !2631
  unreachable, !dbg !2631

bb87:                                             ; preds = %bb86
  %_161 = load i64, ptr %index, align 8, !dbg !2633, !noundef !12
  %35 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_161, i64 2), !dbg !2633
  %_162.0 = extractvalue { i64, i1 } %35, 0, !dbg !2633
  %_162.1 = extractvalue { i64, i1 } %35, 1, !dbg !2633
  %36 = call i1 @llvm.expect.i1(i1 %_162.1, i1 false), !dbg !2633
  br i1 %36, label %panic10, label %bb88, !dbg !2633

panic9:                                           ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_f4b2c099160828c09519b2d752da5d04) #13, !dbg !2632
  unreachable, !dbg !2632

bb88:                                             ; preds = %bb87
  store ptr %result, ptr %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i102, metadata !1866, metadata !DIExpression()), !dbg !2634
  store i64 %_162.0, ptr %count.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i101, metadata !1874, metadata !DIExpression()), !dbg !2636
  %_0.i103 = getelementptr inbounds i8, ptr %result, i64 %_162.0, !dbg !2637
; call ryu::pretty::exponent::write_exponent2
  %_156 = call i64 @_ZN3ryu6pretty8exponent15write_exponent217h573026d0e452213dE(i64 %_158.0, ptr %_0.i103), !dbg !2638
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_155.0, i64 %_156), !dbg !2631
  %_163.0 = extractvalue { i64, i1 } %37, 0, !dbg !2631
  %_163.1 = extractvalue { i64, i1 } %37, 1, !dbg !2631
  %38 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false), !dbg !2631
  br i1 %38, label %panic11, label %bb91, !dbg !2631

panic10:                                          ; preds = %bb87
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d6726ba146b9638b124b14843139989f) #13, !dbg !2633
  unreachable, !dbg !2633

bb91:                                             ; preds = %bb88
  store i64 %_163.0, ptr %_0, align 8, !dbg !2631
  br label %bb113, !dbg !2639

panic11:                                          ; preds = %bb88
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0cbb71e3d6801399b56717fa659f9ced) #13, !dbg !2631
  unreachable, !dbg !2631

bb93:                                             ; preds = %bb92
  %39 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_170.0, i64 1), !dbg !2618
  %_171.0 = extractvalue { i64, i1 } %39, 0, !dbg !2618
  %_171.1 = extractvalue { i64, i1 } %39, 1, !dbg !2618
  %40 = call i1 @llvm.expect.i1(i1 %_171.1, i1 false), !dbg !2618
  br i1 %40, label %panic13, label %bb94, !dbg !2618

panic12:                                          ; preds = %bb92
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_80db5c6f5f3e5adebda81a39257a3339) #13, !dbg !2618
  unreachable, !dbg !2618

bb94:                                             ; preds = %bb93
  store ptr %result, ptr %self.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i99, metadata !1866, metadata !DIExpression()), !dbg !2640
  store i64 %_171.0, ptr %count.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i98, metadata !1874, metadata !DIExpression()), !dbg !2642
  %_0.i100 = getelementptr inbounds i8, ptr %result, i64 %_171.0, !dbg !2643
; call ryu::pretty::mantissa::write_mantissa
  call void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %v.0, ptr %_0.i100), !dbg !2644
  %_175 = load i64, ptr %index, align 8, !dbg !2645, !noundef !12
  %41 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_175, i64 1), !dbg !2645
  %_176.0 = extractvalue { i64, i1 } %41, 0, !dbg !2645
  %_176.1 = extractvalue { i64, i1 } %41, 1, !dbg !2645
  %42 = call i1 @llvm.expect.i1(i1 %_176.1, i1 false), !dbg !2645
  br i1 %42, label %panic14, label %bb97, !dbg !2645

panic13:                                          ; preds = %bb93
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_80db5c6f5f3e5adebda81a39257a3339) #13, !dbg !2618
  unreachable, !dbg !2618

bb97:                                             ; preds = %bb94
  store ptr %result, ptr %self.dbg.spill.i96, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i96, metadata !1866, metadata !DIExpression()), !dbg !2646
  store i64 %_176.0, ptr %count.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i95, metadata !1874, metadata !DIExpression()), !dbg !2648
  %_0.i97 = getelementptr inbounds i8, ptr %result, i64 %_176.0, !dbg !2649
  %_172 = load i8, ptr %_0.i97, align 1, !dbg !2650, !noundef !12
  %_178 = load i64, ptr %index, align 8, !dbg !2651, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i93, metadata !1866, metadata !DIExpression()), !dbg !2652
  store i64 %_178, ptr %count.dbg.spill.i92, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i92, metadata !1874, metadata !DIExpression()), !dbg !2654
  %_0.i94 = getelementptr inbounds i8, ptr %result, i64 %_178, !dbg !2655
  store i8 %_172, ptr %_0.i94, align 1, !dbg !2656
  %_181 = load i64, ptr %index, align 8, !dbg !2657, !noundef !12
  %43 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_181, i64 1), !dbg !2657
  %_182.0 = extractvalue { i64, i1 } %43, 0, !dbg !2657
  %_182.1 = extractvalue { i64, i1 } %43, 1, !dbg !2657
  %44 = call i1 @llvm.expect.i1(i1 %_182.1, i1 false), !dbg !2657
  br i1 %44, label %panic15, label %bb100, !dbg !2657

panic14:                                          ; preds = %bb94
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d0fa8e0ff7931106f6c0d26fea7af7da) #13, !dbg !2645
  unreachable, !dbg !2645

bb100:                                            ; preds = %bb97
  store ptr %result, ptr %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i90, metadata !1866, metadata !DIExpression()), !dbg !2658
  store i64 %_182.0, ptr %count.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i89, metadata !1874, metadata !DIExpression()), !dbg !2660
  %_0.i91 = getelementptr inbounds i8, ptr %result, i64 %_182.0, !dbg !2661
  store i8 46, ptr %_0.i91, align 1, !dbg !2662
  %_186 = load i64, ptr %index, align 8, !dbg !2663, !noundef !12
  %45 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_186, i64 %length), !dbg !2663
  %_187.0 = extractvalue { i64, i1 } %45, 0, !dbg !2663
  %_187.1 = extractvalue { i64, i1 } %45, 1, !dbg !2663
  %46 = call i1 @llvm.expect.i1(i1 %_187.1, i1 false), !dbg !2663
  br i1 %46, label %panic16, label %bb102, !dbg !2663

panic15:                                          ; preds = %bb97
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_b0fcb2e275af27d41d24074c31f76c91) #13, !dbg !2657
  unreachable, !dbg !2657

bb102:                                            ; preds = %bb100
  %47 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_187.0, i64 1), !dbg !2663
  %_188.0 = extractvalue { i64, i1 } %47, 0, !dbg !2663
  %_188.1 = extractvalue { i64, i1 } %47, 1, !dbg !2663
  %48 = call i1 @llvm.expect.i1(i1 %_188.1, i1 false), !dbg !2663
  br i1 %48, label %panic17, label %bb103, !dbg !2663

panic16:                                          ; preds = %bb100
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0a6845d76a30ccffdf6df698b4b4f37c) #13, !dbg !2663
  unreachable, !dbg !2663

bb103:                                            ; preds = %bb102
  store ptr %result, ptr %self.dbg.spill.i87, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i87, metadata !1866, metadata !DIExpression()), !dbg !2664
  store i64 %_188.0, ptr %count.dbg.spill.i86, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i86, metadata !1874, metadata !DIExpression()), !dbg !2666
  %_0.i88 = getelementptr inbounds i8, ptr %result, i64 %_188.0, !dbg !2667
  store i8 101, ptr %_0.i88, align 1, !dbg !2668
  %_192 = load i64, ptr %index, align 8, !dbg !2669, !noundef !12
  %49 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_192, i64 %length), !dbg !2669
  %_194.0 = extractvalue { i64, i1 } %49, 0, !dbg !2669
  %_194.1 = extractvalue { i64, i1 } %49, 1, !dbg !2669
  %50 = call i1 @llvm.expect.i1(i1 %_194.1, i1 false), !dbg !2669
  br i1 %50, label %panic18, label %bb105, !dbg !2669

panic17:                                          ; preds = %bb102
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_0a6845d76a30ccffdf6df698b4b4f37c) #13, !dbg !2663
  unreachable, !dbg !2663

bb105:                                            ; preds = %bb103
  %51 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_194.0, i64 2), !dbg !2669
  %_195.0 = extractvalue { i64, i1 } %51, 0, !dbg !2669
  %_195.1 = extractvalue { i64, i1 } %51, 1, !dbg !2669
  %52 = call i1 @llvm.expect.i1(i1 %_195.1, i1 false), !dbg !2669
  br i1 %52, label %panic19, label %bb106, !dbg !2669

panic18:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d79e494bcf2d853b45aa3734d7207ace) #13, !dbg !2669
  unreachable, !dbg !2669

bb106:                                            ; preds = %bb105
  %53 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %_39.0, i64 1), !dbg !2670
  %_198.0 = extractvalue { i64, i1 } %53, 0, !dbg !2670
  %_198.1 = extractvalue { i64, i1 } %53, 1, !dbg !2670
  %54 = call i1 @llvm.expect.i1(i1 %_198.1, i1 false), !dbg !2670
  br i1 %54, label %panic20, label %bb107, !dbg !2670

panic19:                                          ; preds = %bb105
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d79e494bcf2d853b45aa3734d7207ace) #13, !dbg !2669
  unreachable, !dbg !2669

bb107:                                            ; preds = %bb106
  %_202 = load i64, ptr %index, align 8, !dbg !2671, !noundef !12
  %55 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_202, i64 %length), !dbg !2671
  %_203.0 = extractvalue { i64, i1 } %55, 0, !dbg !2671
  %_203.1 = extractvalue { i64, i1 } %55, 1, !dbg !2671
  %56 = call i1 @llvm.expect.i1(i1 %_203.1, i1 false), !dbg !2671
  br i1 %56, label %panic21, label %bb108, !dbg !2671

panic20:                                          ; preds = %bb106
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_1d4b424658a4768ca5bfb4f0e2502ea4) #13, !dbg !2670
  unreachable, !dbg !2670

bb108:                                            ; preds = %bb107
  %57 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_203.0, i64 2), !dbg !2671
  %_204.0 = extractvalue { i64, i1 } %57, 0, !dbg !2671
  %_204.1 = extractvalue { i64, i1 } %57, 1, !dbg !2671
  %58 = call i1 @llvm.expect.i1(i1 %_204.1, i1 false), !dbg !2671
  br i1 %58, label %panic22, label %bb109, !dbg !2671

panic21:                                          ; preds = %bb107
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_61010d19861cc96312f47b5cbf5cc535) #13, !dbg !2671
  unreachable, !dbg !2671

bb109:                                            ; preds = %bb108
  store ptr %result, ptr %self.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i84, metadata !1866, metadata !DIExpression()), !dbg !2672
  store i64 %_204.0, ptr %count.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i83, metadata !1874, metadata !DIExpression()), !dbg !2674
  %_0.i85 = getelementptr inbounds i8, ptr %result, i64 %_204.0, !dbg !2675
; call ryu::pretty::exponent::write_exponent2
  %_196 = call i64 @_ZN3ryu6pretty8exponent15write_exponent217h573026d0e452213dE(i64 %_198.0, ptr %_0.i85), !dbg !2676
  %59 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_195.0, i64 %_196), !dbg !2669
  %_205.0 = extractvalue { i64, i1 } %59, 0, !dbg !2669
  %_205.1 = extractvalue { i64, i1 } %59, 1, !dbg !2669
  %60 = call i1 @llvm.expect.i1(i1 %_205.1, i1 false), !dbg !2669
  br i1 %60, label %panic23, label %bb112, !dbg !2669

panic22:                                          ; preds = %bb108
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_61010d19861cc96312f47b5cbf5cc535) #13, !dbg !2671
  unreachable, !dbg !2671

bb112:                                            ; preds = %bb109
  store i64 %_205.0, ptr %_0, align 8, !dbg !2669
  br label %bb113, !dbg !2639

panic23:                                          ; preds = %bb109
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d79e494bcf2d853b45aa3734d7207ace) #13, !dbg !2669
  unreachable, !dbg !2669

bb64:                                             ; preds = %bb62
  store ptr %result, ptr %self.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i78, metadata !1866, metadata !DIExpression()), !dbg !2677
  store i64 %_114.0, ptr %count.dbg.spill.i77, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i77, metadata !1874, metadata !DIExpression()), !dbg !2679
  %_0.i79 = getelementptr inbounds i8, ptr %result, i64 %_114.0, !dbg !2680
  store i8 46, ptr %_0.i79, align 1, !dbg !2681
  %61 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 2, i64 %_39.0), !dbg !2682
  %_116.0 = extractvalue { i64, i1 } %61, 0, !dbg !2682
  %_116.1 = extractvalue { i64, i1 } %61, 1, !dbg !2682
  %62 = call i1 @llvm.expect.i1(i1 %_116.1, i1 false), !dbg !2682
  br i1 %62, label %panic25, label %bb66, !dbg !2682

panic24:                                          ; preds = %bb62
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_ab4655029e0545ec03979e1aca3bfebe) #13, !dbg !2615
  unreachable, !dbg !2615

bb66:                                             ; preds = %bb64
  store i64 %_116.0, ptr %offset.dbg.spill, align 8, !dbg !2682
  call void @llvm.dbg.declare(metadata ptr %offset.dbg.spill, metadata !2547, metadata !DIExpression()), !dbg !2683
  store i64 2, ptr %_118, align 8, !dbg !2684
  %63 = getelementptr inbounds i8, ptr %_118, i64 8, !dbg !2684
  store i64 %_116.0, ptr %63, align 8, !dbg !2684
  %64 = load i64, ptr %_118, align 8, !dbg !2684, !noundef !12
  %65 = getelementptr inbounds i8, ptr %_118, i64 8, !dbg !2684
  %66 = load i64, ptr %65, align 8, !dbg !2684, !noundef !12
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %67 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE"(i64 %64, i64 %66), !dbg !2684
  %_117.0 = extractvalue { i64, i64 } %67, 0, !dbg !2684
  %_117.1 = extractvalue { i64, i64 } %67, 1, !dbg !2684
  store i64 %_117.0, ptr %iter1, align 8, !dbg !2684
  %68 = getelementptr inbounds i8, ptr %iter1, i64 8, !dbg !2684
  store i64 %_117.1, ptr %68, align 8, !dbg !2684
  br label %bb68, !dbg !2685

panic25:                                          ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.2, i64 33, ptr align 8 @alloc_b7e3a801c580dd4fc4da042d83c5fbc6) #13, !dbg !2682
  unreachable, !dbg !2682

bb68:                                             ; preds = %bb72, %bb66
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %69 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E"(ptr align 8 %iter1), !dbg !2557
  %70 = extractvalue { i64, i64 } %69, 0, !dbg !2557
  %71 = extractvalue { i64, i64 } %69, 1, !dbg !2557
  store i64 %70, ptr %_120, align 8, !dbg !2557
  %72 = getelementptr inbounds i8, ptr %_120, i64 8, !dbg !2557
  store i64 %71, ptr %72, align 8, !dbg !2557
  %_122 = load i64, ptr %_120, align 8, !dbg !2557, !range !695, !noundef !12
  %73 = icmp eq i64 %_122, 0, !dbg !2557
  br i1 %73, label %bb71, label %bb70, !dbg !2557

bb71:                                             ; preds = %bb68
  %_133 = load i64, ptr %index, align 8, !dbg !2686, !noundef !12
  %74 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_133, i64 %length), !dbg !2686
  %_134.0 = extractvalue { i64, i1 } %74, 0, !dbg !2686
  %_134.1 = extractvalue { i64, i1 } %74, 1, !dbg !2686
  %75 = call i1 @llvm.expect.i1(i1 %_134.1, i1 false), !dbg !2686
  br i1 %75, label %panic26, label %bb74, !dbg !2686

bb70:                                             ; preds = %bb68
  %76 = getelementptr inbounds i8, ptr %_120, i64 8, !dbg !2687
  %i = load i64, ptr %76, align 8, !dbg !2687, !noundef !12
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2687
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill, metadata !2551, metadata !DIExpression()), !dbg !2688
  %_126 = load i64, ptr %index, align 8, !dbg !2689, !noundef !12
  %77 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_126, i64 %i), !dbg !2689
  %_127.0 = extractvalue { i64, i1 } %77, 0, !dbg !2689
  %_127.1 = extractvalue { i64, i1 } %77, 1, !dbg !2689
  %78 = call i1 @llvm.expect.i1(i1 %_127.1, i1 false), !dbg !2689
  br i1 %78, label %panic30, label %bb72, !dbg !2689

bb74:                                             ; preds = %bb71
  %79 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_134.0, i64 %_116.0), !dbg !2686
  %_135.0 = extractvalue { i64, i1 } %79, 0, !dbg !2686
  %_135.1 = extractvalue { i64, i1 } %79, 1, !dbg !2686
  %80 = call i1 @llvm.expect.i1(i1 %_135.1, i1 false), !dbg !2686
  br i1 %80, label %panic27, label %bb75, !dbg !2686

panic26:                                          ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e40e4f78f1ad9a0bdc9cf2d21ce9d0c2) #13, !dbg !2686
  unreachable, !dbg !2686

bb75:                                             ; preds = %bb74
  store ptr %result, ptr %self.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i75, metadata !1866, metadata !DIExpression()), !dbg !2690
  store i64 %_135.0, ptr %count.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i74, metadata !1874, metadata !DIExpression()), !dbg !2692
  %_0.i76 = getelementptr inbounds i8, ptr %result, i64 %_135.0, !dbg !2693
; call ryu::pretty::mantissa::write_mantissa
  call void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %v.0, ptr %_0.i76), !dbg !2694
  %_138 = load i64, ptr %index, align 8, !dbg !2695, !noundef !12
  %81 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_138, i64 %length), !dbg !2695
  %_140.0 = extractvalue { i64, i1 } %81, 0, !dbg !2695
  %_140.1 = extractvalue { i64, i1 } %81, 1, !dbg !2695
  %82 = call i1 @llvm.expect.i1(i1 %_140.1, i1 false), !dbg !2695
  br i1 %82, label %panic28, label %bb78, !dbg !2695

panic27:                                          ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_e40e4f78f1ad9a0bdc9cf2d21ce9d0c2) #13, !dbg !2686
  unreachable, !dbg !2686

bb78:                                             ; preds = %bb75
  %83 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_140.0, i64 %_116.0), !dbg !2695
  %_142.0 = extractvalue { i64, i1 } %83, 0, !dbg !2695
  %_142.1 = extractvalue { i64, i1 } %83, 1, !dbg !2695
  %84 = call i1 @llvm.expect.i1(i1 %_142.1, i1 false), !dbg !2695
  br i1 %84, label %panic29, label %bb79, !dbg !2695

panic28:                                          ; preds = %bb75
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_62d9a385d841d57d2416ba44d1a058f7) #13, !dbg !2695
  unreachable, !dbg !2695

bb79:                                             ; preds = %bb78
  store i64 %_142.0, ptr %_0, align 8, !dbg !2695
  br label %bb113, !dbg !2696

panic29:                                          ; preds = %bb78
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_62d9a385d841d57d2416ba44d1a058f7) #13, !dbg !2695
  unreachable, !dbg !2695

bb72:                                             ; preds = %bb70
  store ptr %result, ptr %self.dbg.spill.i72, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i72, metadata !1866, metadata !DIExpression()), !dbg !2697
  store i64 %_127.0, ptr %count.dbg.spill.i71, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i71, metadata !1874, metadata !DIExpression()), !dbg !2699
  %_0.i73 = getelementptr inbounds i8, ptr %result, i64 %_127.0, !dbg !2700
  store i8 48, ptr %_0.i73, align 1, !dbg !2701
  br label %bb68, !dbg !2685

panic30:                                          ; preds = %bb70
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_702af7329df4db48e9ea4593769d7c21) #13, !dbg !2689
  unreachable, !dbg !2689

bb48:                                             ; preds = %bb47
  %85 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_86.0, i64 1), !dbg !2606
  %_87.0 = extractvalue { i64, i1 } %85, 0, !dbg !2606
  %_87.1 = extractvalue { i64, i1 } %85, 1, !dbg !2606
  %86 = call i1 @llvm.expect.i1(i1 %_87.1, i1 false), !dbg !2606
  br i1 %86, label %panic32, label %bb49, !dbg !2606

panic31:                                          ; preds = %bb47
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_be0befad8fb1373e51e2b4636fa1e921) #13, !dbg !2606
  unreachable, !dbg !2606

bb49:                                             ; preds = %bb48
  store ptr %result, ptr %self.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i69, metadata !1866, metadata !DIExpression()), !dbg !2702
  store i64 %_87.0, ptr %count.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i68, metadata !1874, metadata !DIExpression()), !dbg !2704
  %_0.i70 = getelementptr inbounds i8, ptr %result, i64 %_87.0, !dbg !2705
; call ryu::pretty::mantissa::write_mantissa
  call void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %v.0, ptr %_0.i70), !dbg !2706
  %_92 = load i64, ptr %index, align 8, !dbg !2707, !noundef !12
  %87 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_92, i64 1), !dbg !2707
  %_93.0 = extractvalue { i64, i1 } %87, 0, !dbg !2707
  %_93.1 = extractvalue { i64, i1 } %87, 1, !dbg !2707
  %88 = call i1 @llvm.expect.i1(i1 %_93.1, i1 false), !dbg !2707
  br i1 %88, label %panic33, label %bb52, !dbg !2707

panic32:                                          ; preds = %bb48
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_be0befad8fb1373e51e2b4636fa1e921) #13, !dbg !2606
  unreachable, !dbg !2606

bb52:                                             ; preds = %bb49
  store ptr %result, ptr %self.dbg.spill.i66, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i66, metadata !1866, metadata !DIExpression()), !dbg !2708
  store i64 %_93.0, ptr %count.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i65, metadata !1874, metadata !DIExpression()), !dbg !2710
  %_0.i67 = getelementptr inbounds i8, ptr %result, i64 %_93.0, !dbg !2711
  %_95 = load i64, ptr %index, align 8, !dbg !2712, !noundef !12
  store ptr %result, ptr %self.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i63, metadata !1866, metadata !DIExpression()), !dbg !2713
  store i64 %_95, ptr %count.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i62, metadata !1874, metadata !DIExpression()), !dbg !2715
  %_0.i64 = getelementptr inbounds i8, ptr %result, i64 %_95, !dbg !2716
  store ptr %_0.i67, ptr %src.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata ptr %src.dbg.spill.i48, metadata !2471, metadata !DIExpression()), !dbg !2717
  store ptr %_0.i64, ptr %dst.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata ptr %dst.dbg.spill.i47, metadata !2474, metadata !DIExpression()), !dbg !2719
  store i64 %_39.0, ptr %count.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i46, metadata !2475, metadata !DIExpression()), !dbg !2720
; call core::intrinsics::copy::precondition_check
  call void @_ZN4core10intrinsics4copy18precondition_check17h17007366dc948817E(ptr %_0.i67, ptr %_0.i64, i64 1) #14, !dbg !2721
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %_0.i64, ptr align 1 %_0.i67, i64 %_39.0, i1 false), !dbg !2722
  %_99 = load i64, ptr %index, align 8, !dbg !2723, !noundef !12
  %89 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_99, i64 %_39.0), !dbg !2723
  %_100.0 = extractvalue { i64, i1 } %89, 0, !dbg !2723
  %_100.1 = extractvalue { i64, i1 } %89, 1, !dbg !2723
  %90 = call i1 @llvm.expect.i1(i1 %_100.1, i1 false), !dbg !2723
  br i1 %90, label %panic34, label %bb56, !dbg !2723

panic33:                                          ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_824bec65326705de1b256e5cc8a6d894) #13, !dbg !2707
  unreachable, !dbg !2707

bb56:                                             ; preds = %bb52
  store ptr %result, ptr %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i60, metadata !1866, metadata !DIExpression()), !dbg !2724
  store i64 %_100.0, ptr %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i59, metadata !1874, metadata !DIExpression()), !dbg !2726
  %_0.i61 = getelementptr inbounds i8, ptr %result, i64 %_100.0, !dbg !2727
  store i8 46, ptr %_0.i61, align 1, !dbg !2728
  %_103 = load i64, ptr %index, align 8, !dbg !2729, !noundef !12
  %91 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_103, i64 %length), !dbg !2729
  %_105.0 = extractvalue { i64, i1 } %91, 0, !dbg !2729
  %_105.1 = extractvalue { i64, i1 } %91, 1, !dbg !2729
  %92 = call i1 @llvm.expect.i1(i1 %_105.1, i1 false), !dbg !2729
  br i1 %92, label %panic35, label %bb58, !dbg !2729

panic34:                                          ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_712ade1e1b969f4daeef70e70a40efe9) #13, !dbg !2723
  unreachable, !dbg !2723

bb58:                                             ; preds = %bb56
  %93 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_105.0, i64 1), !dbg !2729
  %_106.0 = extractvalue { i64, i1 } %93, 0, !dbg !2729
  %_106.1 = extractvalue { i64, i1 } %93, 1, !dbg !2729
  %94 = call i1 @llvm.expect.i1(i1 %_106.1, i1 false), !dbg !2729
  br i1 %94, label %panic36, label %bb59, !dbg !2729

panic35:                                          ; preds = %bb56
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_86c232ca8978d3f86d42e02a516d728f) #13, !dbg !2729
  unreachable, !dbg !2729

bb59:                                             ; preds = %bb58
  store i64 %_106.0, ptr %_0, align 8, !dbg !2729
  br label %bb113, !dbg !2730

panic36:                                          ; preds = %bb58
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_86c232ca8978d3f86d42e02a516d728f) #13, !dbg !2729
  unreachable, !dbg !2729

bb27:                                             ; preds = %bb26
  store ptr %result, ptr %self.dbg.spill.i57, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i57, metadata !1866, metadata !DIExpression()), !dbg !2731
  store i64 %_50.0, ptr %count.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i56, metadata !1874, metadata !DIExpression()), !dbg !2733
  %_0.i58 = getelementptr inbounds i8, ptr %result, i64 %_50.0, !dbg !2734
; call ryu::pretty::mantissa::write_mantissa
  call void @_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E(i32 %v.0, ptr %_0.i58), !dbg !2735
  store i64 %length, ptr %_52, align 8, !dbg !2736
  %95 = getelementptr inbounds i8, ptr %_52, i64 8, !dbg !2736
  store i64 %_39.0, ptr %95, align 8, !dbg !2736
  %96 = load i64, ptr %_52, align 8, !dbg !2736, !noundef !12
  %97 = getelementptr inbounds i8, ptr %_52, i64 8, !dbg !2736
  %98 = load i64, ptr %97, align 8, !dbg !2736, !noundef !12
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %99 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE"(i64 %96, i64 %98), !dbg !2736
  %_51.0 = extractvalue { i64, i64 } %99, 0, !dbg !2736
  %_51.1 = extractvalue { i64, i64 } %99, 1, !dbg !2736
  store i64 %_51.0, ptr %iter, align 8, !dbg !2736
  %100 = getelementptr inbounds i8, ptr %iter, i64 8, !dbg !2736
  store i64 %_51.1, ptr %100, align 8, !dbg !2736
  br label %bb31, !dbg !2737

panic37:                                          ; preds = %bb26
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_06e46c4baa02844bb9f645aadca7bf1d) #13, !dbg !2603
  unreachable, !dbg !2603

bb31:                                             ; preds = %bb36, %bb27
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %101 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E"(ptr align 8 %iter), !dbg !2556
  %102 = extractvalue { i64, i64 } %101, 0, !dbg !2556
  %103 = extractvalue { i64, i64 } %101, 1, !dbg !2556
  store i64 %102, ptr %_54, align 8, !dbg !2556
  %104 = getelementptr inbounds i8, ptr %_54, i64 8, !dbg !2556
  store i64 %103, ptr %104, align 8, !dbg !2556
  %_56 = load i64, ptr %_54, align 8, !dbg !2556, !range !695, !noundef !12
  %105 = icmp eq i64 %_56, 0, !dbg !2556
  br i1 %105, label %bb35, label %bb34, !dbg !2556

bb35:                                             ; preds = %bb31
  %_64 = load i64, ptr %index, align 8, !dbg !2738, !noundef !12
  %106 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_64, i64 %_39.0), !dbg !2738
  %_65.0 = extractvalue { i64, i1 } %106, 0, !dbg !2738
  %_65.1 = extractvalue { i64, i1 } %106, 1, !dbg !2738
  %107 = call i1 @llvm.expect.i1(i1 %_65.1, i1 false), !dbg !2738
  br i1 %107, label %panic38, label %bb38, !dbg !2738

bb34:                                             ; preds = %bb31
  %108 = getelementptr inbounds i8, ptr %_54, i64 8, !dbg !2739
  %i43 = load i64, ptr %108, align 8, !dbg !2739, !noundef !12
  store i64 %i43, ptr %i.dbg.spill44, align 8, !dbg !2739
  call void @llvm.dbg.declare(metadata ptr %i.dbg.spill44, metadata !2545, metadata !DIExpression()), !dbg !2740
  %_60 = load i64, ptr %index, align 8, !dbg !2741, !noundef !12
  %109 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_60, i64 %i43), !dbg !2741
  %_61.0 = extractvalue { i64, i1 } %109, 0, !dbg !2741
  %_61.1 = extractvalue { i64, i1 } %109, 1, !dbg !2741
  %110 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false), !dbg !2741
  br i1 %110, label %panic45, label %bb36, !dbg !2741

bb38:                                             ; preds = %bb35
  store ptr %result, ptr %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i54, metadata !1866, metadata !DIExpression()), !dbg !2742
  store i64 %_65.0, ptr %count.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i53, metadata !1874, metadata !DIExpression()), !dbg !2744
  %_0.i55 = getelementptr inbounds i8, ptr %result, i64 %_65.0, !dbg !2745
  store i8 46, ptr %_0.i55, align 1, !dbg !2746
  %_69 = load i64, ptr %index, align 8, !dbg !2747, !noundef !12
  %111 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_69, i64 %_39.0), !dbg !2747
  %_70.0 = extractvalue { i64, i1 } %111, 0, !dbg !2747
  %_70.1 = extractvalue { i64, i1 } %111, 1, !dbg !2747
  %112 = call i1 @llvm.expect.i1(i1 %_70.1, i1 false), !dbg !2747
  br i1 %112, label %panic39, label %bb40, !dbg !2747

panic38:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_d18aba6e0bd20c8dec4b19a3f3c0cb57) #13, !dbg !2738
  unreachable, !dbg !2738

bb40:                                             ; preds = %bb38
  %113 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %_70.0, i64 1), !dbg !2747
  %_71.0 = extractvalue { i64, i1 } %113, 0, !dbg !2747
  %_71.1 = extractvalue { i64, i1 } %113, 1, !dbg !2747
  %114 = call i1 @llvm.expect.i1(i1 %_71.1, i1 false), !dbg !2747
  br i1 %114, label %panic40, label %bb41, !dbg !2747

panic39:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8b26e2c94ada8c0d0daeebfb97785c99) #13, !dbg !2747
  unreachable, !dbg !2747

bb41:                                             ; preds = %bb40
  store ptr %result, ptr %self.dbg.spill.i51, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i51, metadata !1866, metadata !DIExpression()), !dbg !2748
  store i64 %_71.0, ptr %count.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i50, metadata !1874, metadata !DIExpression()), !dbg !2750
  %_0.i52 = getelementptr inbounds i8, ptr %result, i64 %_71.0, !dbg !2751
  store i8 48, ptr %_0.i52, align 1, !dbg !2752
  %_74 = load i64, ptr %index, align 8, !dbg !2753, !noundef !12
  %115 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_74, i64 %_39.0), !dbg !2753
  %_76.0 = extractvalue { i64, i1 } %115, 0, !dbg !2753
  %_76.1 = extractvalue { i64, i1 } %115, 1, !dbg !2753
  %116 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false), !dbg !2753
  br i1 %116, label %panic41, label %bb43, !dbg !2753

panic40:                                          ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_8b26e2c94ada8c0d0daeebfb97785c99) #13, !dbg !2747
  unreachable, !dbg !2747

bb43:                                             ; preds = %bb41
  %117 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_76.0, i64 2), !dbg !2753
  %_77.0 = extractvalue { i64, i1 } %117, 0, !dbg !2753
  %_77.1 = extractvalue { i64, i1 } %117, 1, !dbg !2753
  %118 = call i1 @llvm.expect.i1(i1 %_77.1, i1 false), !dbg !2753
  br i1 %118, label %panic42, label %bb44, !dbg !2753

panic41:                                          ; preds = %bb41
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_945bb8287bdfa1c00387442286da166f) #13, !dbg !2753
  unreachable, !dbg !2753

bb44:                                             ; preds = %bb43
  store i64 %_77.0, ptr %_0, align 8, !dbg !2753
  br label %bb113, !dbg !2754

panic42:                                          ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_945bb8287bdfa1c00387442286da166f) #13, !dbg !2753
  unreachable, !dbg !2753

bb36:                                             ; preds = %bb34
  store ptr %result, ptr %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill.i, metadata !1866, metadata !DIExpression()), !dbg !2755
  store i64 %_61.0, ptr %count.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata ptr %count.dbg.spill.i49, metadata !1874, metadata !DIExpression()), !dbg !2757
  %_0.i = getelementptr inbounds i8, ptr %result, i64 %_61.0, !dbg !2758
  store i8 48, ptr %_0.i, align 1, !dbg !2759
  br label %bb31, !dbg !2737

panic45:                                          ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1 @str.1, i64 28, ptr align 8 @alloc_584b3a88f4c4139d661ce673b5ad6ace) #13, !dbg !2741
  unreachable, !dbg !2741

bb33:                                             ; No predecessors!
  unreachable, !dbg !2556
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #6

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noreturn nounwind uwtable
declare void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1, i64) unnamed_addr #7

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

declare i32 @rust_eh_personality(...) unnamed_addr #9

; core::panicking::panic_cannot_unwind
; Function Attrs: cold noinline noreturn nounwind uwtable
declare void @_ZN4core9panicking19panic_cannot_unwind17h3626040c0976c0c3E() unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #5

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core9panicking9panic_fmt17ha6d62ade15192290E(ptr align 8, ptr align 8) unnamed_addr #10

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #8

; core::panicking::panic
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core9panicking5panic17h5884aad3a9044857E(ptr align 1, i64, ptr align 8) unnamed_addr #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i128, i1 } @llvm.umul.with.overflow.i128(i128, i128) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i128, i1 } @llvm.uadd.with.overflow.i128(i128, i128) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i8, i1 } @llvm.uadd.with.overflow.i8(i8, i8) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #5

attributes #0 = { inlinehint uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #1 = { inlinehint nounwind uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #2 = { nounwind uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #3 = { cold uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #4 = { uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #7 = { cold noinline noreturn nounwind uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { "target-cpu"="apple-m1" }
attributes #10 = { cold noinline noreturn uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #11 = { noreturn nounwind }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn }
attributes #14 = { nounwind }

!llvm.module.flags = !{!28, !29, !30}
!llvm.ident = !{!31}
!llvm.dbg.cu = !{!32}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DOUBLE_POW5_INV_SPLIT", linkageName: "_ZN3ryu14d2s_full_table21DOUBLE_POW5_INV_SPLIT17h2dcda7d89d272cddE", scope: !2, file: !4, line: 24, type: !5, isLocal: true, isDefinition: true, align: 64)
!2 = !DINamespace(name: "d2s_full_table", scope: !3)
!3 = !DINamespace(name: "ryu", scope: null)
!4 = !DIFile(filename: "src/d2s_full_table.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "b973b1d139f4d0d423600551e5d5d053")
!5 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 43776, align: 64, elements: !13)
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, u64)", file: !7, size: 128, align: 64, elements: !8, templateParams: !12, identifier: "28509cc8eba599a021c3c43d122467db")
!7 = !DIFile(filename: "<unknown>", directory: "")
!8 = !{!9, !11}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6, file: !7, baseType: !10, size: 64, align: 64)
!10 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6, file: !7, baseType: !10, size: 64, align: 64, offset: 64)
!12 = !{}
!13 = !{!14}
!14 = !DISubrange(count: 342, lowerBound: 0)
!15 = !DIGlobalVariableExpression(var: !16, expr: !DIExpression())
!16 = distinct !DIGlobalVariable(name: "DOUBLE_POW5_SPLIT", linkageName: "_ZN3ryu14d2s_full_table17DOUBLE_POW5_SPLIT17hec9cc8677c8b52d4E", scope: !2, file: !4, line: 369, type: !17, isLocal: true, isDefinition: true, align: 64)
!17 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 41728, align: 64, elements: !18)
!18 = !{!19}
!19 = !DISubrange(count: 326, lowerBound: 0)
!20 = !DIGlobalVariableExpression(var: !21, expr: !DIExpression())
!21 = distinct !DIGlobalVariable(name: "DIGIT_TABLE", linkageName: "_ZN3ryu11digit_table11DIGIT_TABLE17h5f70cc691343e0efE", scope: !22, file: !23, line: 23, type: !24, isLocal: true, isDefinition: true, align: 8)
!22 = !DINamespace(name: "digit_table", scope: !3)
!23 = !DIFile(filename: "src/digit_table.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "10471f1ac792439ed1a88d4efcc7f7d7")
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 1600, align: 8, elements: !26)
!25 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!26 = !{!27}
!27 = !DISubrange(count: 200, lowerBound: 0)
!28 = !{i32 8, !"PIC Level", i32 2}
!29 = !{i32 2, !"Dwarf Version", i32 4}
!30 = !{i32 2, !"Debug Info Version", i32 3}
!31 = !{!"rustc version 1.78.0-nightly (46b180ec2 2024-03-08)"}
!32 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !33, producer: "clang LLVM (rustc version 1.78.0-nightly (46b180ec2 2024-03-08))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !34, globals: !44, splitDebugInlining: false, nameTableKind: None)
!33 = !DIFile(filename: "src/lib.rs/@/naz9zab7ydzu9j", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu")
!34 = !{!35}
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !36, file: !7, baseType: !25, size: 8, align: 8, flags: DIFlagEnumClass, elements: !39)
!36 = !DINamespace(name: "rt", scope: !37)
!37 = !DINamespace(name: "fmt", scope: !38)
!38 = !DINamespace(name: "core", scope: null)
!39 = !{!40, !41, !42, !43}
!40 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!44 = !{!0, !15, !20}
!45 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$isize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h0b0a463692db1d15E", scope: !47, file: !46, line: 191, type: !50, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !54)
!46 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "d433b2683d048a7fdc9e8b93b335fc11")
!47 = !DINamespace(name: "{impl#44}", scope: !48)
!48 = !DINamespace(name: "range", scope: !49)
!49 = !DINamespace(name: "iter", scope: !38)
!50 = !DISubroutineType(types: !51)
!51 = !{!52, !52, !53}
!52 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!53 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!54 = !{!55, !56}
!55 = !DILocalVariable(name: "start", arg: 1, scope: !45, file: !46, line: 191, type: !52)
!56 = !DILocalVariable(name: "n", arg: 2, scope: !45, file: !46, line: 191, type: !53)
!57 = !DILocation(line: 191, column: 37, scope: !45)
!58 = !DILocalVariable(name: "self", arg: 1, scope: !59, file: !60, line: 467, type: !52)
!59 = !DILexicalBlockFile(scope: !61, file: !60, discriminator: 0)
!60 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "03eb9371ac6ef6f22725c194b88148fe")
!61 = distinct !DILexicalBlock(scope: !63, file: !62, line: 512, column: 9)
!62 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "39b03db0f3868f11f74f46a2a2afd2f5")
!63 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$isize$GT$13unchecked_add17h10f229bc0fd4ad04E", scope: !64, file: !62, line: 512, type: !66, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !68)
!64 = !DINamespace(name: "{impl#5}", scope: !65)
!65 = !DINamespace(name: "num", scope: !38)
!66 = !DISubroutineType(types: !67)
!67 = !{!52, !52, !52}
!68 = !{!58, !69}
!69 = !DILocalVariable(name: "rhs", arg: 2, scope: !59, file: !60, line: 467, type: !52)
!70 = !DILocation(line: 467, column: 5, scope: !59, inlinedAt: !71)
!71 = !DILocation(line: 193, column: 28, scope: !45)
!72 = !DILocation(line: 191, column: 50, scope: !45)
!73 = !DILocation(line: 193, column: 42, scope: !45)
!74 = !DILocation(line: 194, column: 10, scope: !45)
!75 = distinct !DISubprogram(name: "is_nonoverlapping", linkageName: "_ZN4core10intrinsics17is_nonoverlapping17hb5def9c93bc00671E", scope: !77, file: !76, line: 2797, type: !78, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !83)
!76 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "8e44aa294dd7cc4c037d8b6ff42222a3")
!77 = !DINamespace(name: "intrinsics", scope: !38)
!78 = !DISubroutineType(types: !79)
!79 = !{!80, !81, !81, !53, !53}
!80 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!82 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!83 = !{!84, !85, !86, !87, !88, !90, !92, !94}
!84 = !DILocalVariable(name: "src", arg: 1, scope: !75, file: !76, line: 2797, type: !81)
!85 = !DILocalVariable(name: "dst", arg: 2, scope: !75, file: !76, line: 2797, type: !81)
!86 = !DILocalVariable(name: "size", arg: 3, scope: !75, file: !76, line: 2797, type: !53)
!87 = !DILocalVariable(name: "count", arg: 4, scope: !75, file: !76, line: 2797, type: !53)
!88 = !DILocalVariable(name: "src_usize", scope: !89, file: !76, line: 2798, type: !53, align: 8)
!89 = distinct !DILexicalBlock(scope: !75, file: !76, line: 2798, column: 5)
!90 = !DILocalVariable(name: "dst_usize", scope: !91, file: !76, line: 2799, type: !53, align: 8)
!91 = distinct !DILexicalBlock(scope: !89, file: !76, line: 2799, column: 5)
!92 = !DILocalVariable(name: "size", scope: !93, file: !76, line: 2800, type: !53, align: 8)
!93 = distinct !DILexicalBlock(scope: !91, file: !76, line: 2800, column: 5)
!94 = !DILocalVariable(name: "diff", scope: !95, file: !76, line: 2805, type: !53, align: 8)
!95 = distinct !DILexicalBlock(scope: !93, file: !76, line: 2805, column: 5)
!96 = !DILocation(line: 2797, column: 33, scope: !75)
!97 = !DILocalVariable(name: "self", arg: 1, scope: !98, file: !99, line: 209, type: !81)
!98 = distinct !DILexicalBlock(scope: !100, file: !99, line: 209, column: 5)
!99 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "497dd18e023476b8914a8083d081a04c")
!100 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1b1dc31797f34676E", scope: !101, file: !99, line: 209, type: !104, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !109, retainedNodes: !106)
!101 = !DINamespace(name: "{impl#0}", scope: !102)
!102 = !DINamespace(name: "const_ptr", scope: !103)
!103 = !DINamespace(name: "ptr", scope: !38)
!104 = !DISubroutineType(types: !105)
!105 = !{!53, !81}
!106 = !{!97, !107}
!107 = !DILocalVariable(name: "self", arg: 1, scope: !108, file: !99, line: 209, type: !81)
!108 = distinct !DILexicalBlock(scope: !100, file: !99, line: 209, column: 5)
!109 = !{!110}
!110 = !DITemplateTypeParameter(name: "T", type: !82)
!111 = !DILocation(line: 209, column: 17, scope: !98, inlinedAt: !112)
!112 = !DILocation(line: 2798, column: 25, scope: !75)
!113 = !DILocalVariable(name: "self", arg: 1, scope: !114, file: !99, line: 63, type: !81)
!114 = distinct !DILexicalBlock(scope: !115, file: !99, line: 63, column: 5)
!115 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h1277073ca66de4ccE", scope: !101, file: !99, line: 63, type: !116, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !121, retainedNodes: !118)
!116 = !DISubroutineType(types: !117)
!117 = !{!81, !81}
!118 = !{!113, !119}
!119 = !DILocalVariable(name: "self", arg: 1, scope: !120, file: !99, line: 63, type: !81)
!120 = distinct !DILexicalBlock(scope: !115, file: !99, line: 63, column: 5)
!121 = !{!110, !122}
!122 = !DITemplateTypeParameter(name: "U", type: !82)
!123 = !DILocation(line: 63, column: 26, scope: !114, inlinedAt: !124)
!124 = !DILocation(line: 213, column: 38, scope: !98, inlinedAt: !112)
!125 = !DILocation(line: 2797, column: 49, scope: !75)
!126 = !DILocation(line: 209, column: 17, scope: !108, inlinedAt: !127)
!127 = !DILocation(line: 2799, column: 25, scope: !89)
!128 = !DILocation(line: 63, column: 26, scope: !120, inlinedAt: !129)
!129 = !DILocation(line: 213, column: 38, scope: !108, inlinedAt: !127)
!130 = !DILocation(line: 2797, column: 65, scope: !75)
!131 = !DILocalVariable(name: "self", arg: 1, scope: !132, file: !60, line: 1281, type: !53)
!132 = !DILexicalBlockFile(scope: !133, file: !60, discriminator: 0)
!133 = distinct !DILexicalBlock(scope: !135, file: !134, line: 686, column: 9)
!134 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "278bd6ca98d30809003b0b6c02c39a08")
!135 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3e432c7a3fb27638E", scope: !136, file: !134, line: 686, type: !137, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !153)
!136 = !DINamespace(name: "{impl#11}", scope: !65)
!137 = !DISubroutineType(types: !138)
!138 = !{!139, !53, !53}
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !140, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !141, templateParams: !12, identifier: "95187db8a945f0b837c05a93dbca053d")
!140 = !DINamespace(name: "option", scope: !38)
!141 = !{!142}
!142 = !DICompositeType(tag: DW_TAG_variant_part, scope: !139, file: !7, size: 128, align: 64, elements: !143, templateParams: !12, identifier: "bf03ad1423ace5c017f1cefbab0a44f7", discriminator: !152)
!143 = !{!144, !148}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !142, file: !7, baseType: !145, size: 128, align: 64, extraData: i128 0)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !139, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !12, templateParams: !146, identifier: "28c1259e655b5c63dfdc8863b3b586eb")
!146 = !{!147}
!147 = !DITemplateTypeParameter(name: "T", type: !53)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !142, file: !7, baseType: !149, size: 128, align: 64, extraData: i128 1)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !139, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !150, templateParams: !146, identifier: "455fdfcabbfecd5a717255e285761794")
!150 = !{!151}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !149, file: !7, baseType: !53, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!152 = !DIDerivedType(tag: DW_TAG_member, scope: !139, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagArtificial)
!153 = !{!131, !154, !155, !158}
!154 = !DILocalVariable(name: "rhs", arg: 2, scope: !132, file: !60, line: 1281, type: !53)
!155 = !DILocalVariable(name: "a", scope: !156, file: !60, line: 1281, type: !53, align: 8)
!156 = !DILexicalBlockFile(scope: !157, file: !60, discriminator: 0)
!157 = distinct !DILexicalBlock(scope: !133, file: !134, line: 687, column: 13)
!158 = !DILocalVariable(name: "b", scope: !156, file: !60, line: 1281, type: !80, align: 1)
!159 = !DILocation(line: 1281, column: 5, scope: !132, inlinedAt: !160)
!160 = !DILocation(line: 2800, column: 27, scope: !91)
!161 = !DILocalVariable(name: "self", arg: 1, scope: !162, file: !60, line: 1281, type: !53)
!162 = !DILexicalBlockFile(scope: !163, file: !60, discriminator: 0)
!163 = distinct !DILexicalBlock(scope: !164, file: !134, line: 2173, column: 9)
!164 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hc655572562d2e056E", scope: !136, file: !134, line: 2173, type: !165, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !171)
!165 = !DISubroutineType(types: !166)
!166 = !{!167, !53, !53}
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !7, size: 128, align: 64, elements: !168, templateParams: !12, identifier: "4030f8452435be378048c6d8b59c8539")
!168 = !{!169, !170}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !167, file: !7, baseType: !53, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !167, file: !7, baseType: !80, size: 8, align: 8, offset: 64)
!171 = !{!161, !172, !173, !176}
!172 = !DILocalVariable(name: "rhs", arg: 2, scope: !162, file: !60, line: 1281, type: !53)
!173 = !DILocalVariable(name: "a", scope: !174, file: !60, line: 1281, type: !10, align: 8)
!174 = !DILexicalBlockFile(scope: !175, file: !60, discriminator: 0)
!175 = distinct !DILexicalBlock(scope: !163, file: !134, line: 2174, column: 13)
!176 = !DILocalVariable(name: "b", scope: !174, file: !60, line: 1281, type: !80, align: 1)
!177 = !DILocation(line: 1281, column: 5, scope: !162, inlinedAt: !178)
!178 = !DILocation(line: 687, column: 31, scope: !133, inlinedAt: !160)
!179 = !DILocation(line: 2797, column: 78, scope: !75)
!180 = !DILocation(line: 2805, column: 9, scope: !95)
!181 = !DILocation(line: 213, column: 18, scope: !98, inlinedAt: !112)
!182 = !DILocation(line: 2798, column: 9, scope: !89)
!183 = !DILocalVariable(name: "self", arg: 1, scope: !184, file: !60, line: 1281, type: !53)
!184 = !DILexicalBlockFile(scope: !185, file: !60, discriminator: 0)
!185 = distinct !DILexicalBlock(scope: !186, file: !134, line: 2137, column: 9)
!186 = distinct !DISubprogram(name: "abs_diff", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17hd2153edeeef6d08aE", scope: !136, file: !134, line: 2137, type: !187, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !189)
!187 = !DISubroutineType(types: !188)
!188 = !{!53, !53, !53}
!189 = !{!183, !190}
!190 = !DILocalVariable(name: "other", arg: 2, scope: !184, file: !60, line: 1281, type: !53)
!191 = !DILocation(line: 1281, column: 5, scope: !184, inlinedAt: !192)
!192 = !DILocation(line: 2805, column: 26, scope: !93)
!193 = !DILocation(line: 213, column: 18, scope: !108, inlinedAt: !127)
!194 = !DILocation(line: 2799, column: 9, scope: !91)
!195 = !DILocation(line: 1281, column: 5, scope: !174, inlinedAt: !178)
!196 = !DILocation(line: 1281, column: 5, scope: !156, inlinedAt: !160)
!197 = !{i8 0, i8 2}
!198 = !DILocation(line: 2800, column: 14, scope: !91)
!199 = !DILocation(line: 2800, column: 14, scope: !93)
!200 = !DILocation(line: 2801, column: 9, scope: !91)
!201 = !DILocation(line: 2808, column: 5, scope: !95)
!202 = !DILocation(line: 2809, column: 2, scope: !75)
!203 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping18precondition_check17hb25ee2a7d56ff2e5E", scope: !204, file: !76, line: 2764, type: !205, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !208)
!204 = !DINamespace(name: "copy_nonoverlapping", scope: !77)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !81, !207, !53, !53, !53}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!208 = !{!209, !210, !211, !212, !213}
!209 = !DILocalVariable(name: "src", arg: 1, scope: !203, file: !76, line: 2764, type: !81)
!210 = !DILocalVariable(name: "dst", arg: 2, scope: !203, file: !76, line: 2764, type: !207)
!211 = !DILocalVariable(name: "size", arg: 3, scope: !203, file: !76, line: 2764, type: !53)
!212 = !DILocalVariable(name: "align", arg: 4, scope: !203, file: !76, line: 2764, type: !53)
!213 = !DILocalVariable(name: "count", arg: 5, scope: !203, file: !76, line: 2764, type: !53)
!214 = !DILocation(line: 2764, column: 37, scope: !203)
!215 = !DILocation(line: 2922, column: 13, scope: !203)
!216 = !DILocation(line: 2764, column: 13, scope: !203)
!217 = !DILocation(line: 2766, column: 21, scope: !203)
!218 = !DILocation(line: 2923, column: 20, scope: !203)
!219 = !DILocation(line: 2924, column: 20, scope: !203)
!220 = !DILocation(line: 2770, column: 14, scope: !203)
!221 = distinct !DISubprogram(name: "is_aligned_and_not_null", linkageName: "_ZN4core10intrinsics23is_aligned_and_not_null17h3897a715cd747382E", scope: !77, file: !76, line: 2784, type: !222, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !224)
!222 = !DISubroutineType(types: !223)
!223 = !{!80, !81, !53}
!224 = !{!225, !226}
!225 = !DILocalVariable(name: "ptr", arg: 1, scope: !221, file: !76, line: 2784, type: !81)
!226 = !DILocalVariable(name: "align", arg: 2, scope: !221, file: !76, line: 2784, type: !53)
!227 = !DILocation(line: 2784, column: 39, scope: !221)
!228 = !DILocalVariable(name: "self", arg: 1, scope: !229, file: !99, line: 35, type: !81)
!229 = distinct !DILexicalBlock(scope: !230, file: !99, line: 35, column: 5)
!230 = distinct !DISubprogram(name: "is_null<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hbde7f69469413f58E", scope: !101, file: !99, line: 35, type: !231, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !109, retainedNodes: !233)
!231 = !DISubroutineType(types: !232)
!232 = !{!80, !81}
!233 = !{!228}
!234 = !DILocation(line: 35, column: 26, scope: !229, inlinedAt: !235)
!235 = !DILocation(line: 2785, column: 10, scope: !221)
!236 = !DILocalVariable(name: "self", arg: 1, scope: !237, file: !99, line: 1618, type: !81)
!237 = distinct !DILexicalBlock(scope: !238, file: !99, line: 1618, column: 5)
!238 = distinct !DISubprogram(name: "is_aligned_to<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17hd48d504bcda55ab2E", scope: !101, file: !99, line: 1618, type: !222, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !109, retainedNodes: !239)
!239 = !{!236, !240}
!240 = !DILocalVariable(name: "align", arg: 2, scope: !237, file: !99, line: 1618, type: !53)
!241 = !DILocation(line: 1618, column: 32, scope: !237, inlinedAt: !242)
!242 = !DILocation(line: 2785, column: 27, scope: !221)
!243 = !DILocalVariable(name: "self", arg: 1, scope: !244, file: !99, line: 63, type: !81)
!244 = distinct !DILexicalBlock(scope: !245, file: !99, line: 63, column: 5)
!245 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h1277073ca66de4ccE", scope: !101, file: !99, line: 63, type: !116, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !121, retainedNodes: !246)
!246 = !{!243, !247}
!247 = !DILocalVariable(name: "self", arg: 1, scope: !248, file: !99, line: 63, type: !81)
!248 = distinct !DILexicalBlock(scope: !245, file: !99, line: 63, column: 5)
!249 = !DILocation(line: 63, column: 26, scope: !244, inlinedAt: !250)
!250 = !DILocation(line: 1640, column: 37, scope: !237, inlinedAt: !242)
!251 = !DILocalVariable(name: "ptr", arg: 1, scope: !252, file: !99, line: 1624, type: !81)
!252 = distinct !DILexicalBlock(scope: !253, file: !99, line: 1624, column: 9)
!253 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to12runtime_impl17h3ff8aa5ac81901b1E", scope: !254, file: !99, line: 1624, type: !222, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !255)
!254 = !DINamespace(name: "is_aligned_to", scope: !101)
!255 = !{!251, !256}
!256 = !DILocalVariable(name: "align", arg: 2, scope: !252, file: !99, line: 1624, type: !53)
!257 = !DILocation(line: 1624, column: 25, scope: !252, inlinedAt: !258)
!258 = !DILocation(line: 1640, column: 13, scope: !237, inlinedAt: !242)
!259 = !DILocalVariable(name: "self", arg: 1, scope: !260, file: !99, line: 209, type: !81)
!260 = distinct !DILexicalBlock(scope: !261, file: !99, line: 209, column: 5)
!261 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1b1dc31797f34676E", scope: !101, file: !99, line: 209, type: !104, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !109, retainedNodes: !262)
!262 = !{!259}
!263 = !DILocation(line: 209, column: 17, scope: !260, inlinedAt: !264)
!264 = !DILocation(line: 1625, column: 17, scope: !252, inlinedAt: !258)
!265 = !DILocation(line: 63, column: 26, scope: !248, inlinedAt: !266)
!266 = !DILocation(line: 213, column: 38, scope: !260, inlinedAt: !264)
!267 = !DILocation(line: 2784, column: 55, scope: !221)
!268 = !DILocation(line: 1618, column: 38, scope: !237, inlinedAt: !242)
!269 = !DILocalVariable(name: "self", arg: 1, scope: !270, file: !60, line: 1281, type: !53)
!270 = !DILexicalBlockFile(scope: !271, file: !60, discriminator: 0)
!271 = distinct !DILexicalBlock(scope: !272, file: !134, line: 2689, column: 9)
!272 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hf984871fa0afca14E", scope: !136, file: !134, line: 2689, type: !273, scopeLine: 2689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !275)
!273 = !DISubroutineType(types: !274)
!274 = !{!80, !53}
!275 = !{!269}
!276 = !DILocation(line: 1281, column: 5, scope: !270, inlinedAt: !277)
!277 = !DILocation(line: 1619, column: 19, scope: !237, inlinedAt: !242)
!278 = !DILocalVariable(name: "self", arg: 1, scope: !279, file: !60, line: 1281, type: !53)
!279 = !DILexicalBlockFile(scope: !280, file: !60, discriminator: 0)
!280 = distinct !DILexicalBlock(scope: !281, file: !134, line: 106, column: 9)
!281 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hce199ea15231247aE", scope: !136, file: !134, line: 106, type: !282, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !285)
!282 = !DISubroutineType(types: !283)
!283 = !{!284, !53}
!284 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!285 = !{!278}
!286 = !DILocation(line: 1281, column: 5, scope: !279, inlinedAt: !287)
!287 = !DILocation(line: 2690, column: 18, scope: !271, inlinedAt: !277)
!288 = !DILocation(line: 1624, column: 41, scope: !252, inlinedAt: !258)
!289 = !DILocation(line: 54, column: 32, scope: !229, inlinedAt: !235)
!290 = !DILocalVariable(name: "ptr", arg: 1, scope: !291, file: !99, line: 37, type: !296)
!291 = distinct !DILexicalBlock(scope: !292, file: !99, line: 37, column: 9)
!292 = distinct !DISubprogram(name: "runtime_impl", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null12runtime_impl17h8b14374c92a416b8E", scope: !293, file: !99, line: 37, type: !294, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !297)
!293 = !DINamespace(name: "is_null", scope: !101)
!294 = !DISubroutineType(types: !295)
!295 = !{!80, !296}
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!297 = !{!290}
!298 = !DILocation(line: 37, column: 25, scope: !291, inlinedAt: !299)
!299 = !DILocation(line: 54, column: 13, scope: !229, inlinedAt: !235)
!300 = !DILocalVariable(name: "self", arg: 1, scope: !301, file: !99, line: 209, type: !296)
!301 = distinct !DILexicalBlock(scope: !302, file: !99, line: 209, column: 5)
!302 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h2df19a492cccdc3bE", scope: !101, file: !99, line: 209, type: !303, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !305)
!303 = !DISubroutineType(types: !304)
!304 = !{!53, !296}
!305 = !{!300}
!306 = !{!307}
!307 = !DITemplateTypeParameter(name: "T", type: !25)
!308 = !DILocation(line: 209, column: 17, scope: !301, inlinedAt: !309)
!309 = !DILocation(line: 38, column: 17, scope: !291, inlinedAt: !299)
!310 = !DILocalVariable(name: "self", arg: 1, scope: !311, file: !99, line: 63, type: !296)
!311 = distinct !DILexicalBlock(scope: !312, file: !99, line: 63, column: 5)
!312 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he66c9ef46ab64612E", scope: !101, file: !99, line: 63, type: !313, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !316, retainedNodes: !315)
!313 = !DISubroutineType(types: !314)
!314 = !{!81, !296}
!315 = !{!310}
!316 = !{!307, !122}
!317 = !DILocation(line: 63, column: 26, scope: !311, inlinedAt: !318)
!318 = !DILocation(line: 213, column: 38, scope: !301, inlinedAt: !309)
!319 = !DILocation(line: 213, column: 18, scope: !301, inlinedAt: !309)
!320 = !DILocation(line: 2785, column: 6, scope: !221)
!321 = !DILocation(line: 2785, column: 5, scope: !221)
!322 = !DILocation(line: 1619, column: 13, scope: !237, inlinedAt: !242)
!323 = !DILocation(line: 2786, column: 2, scope: !221)
!324 = !DILocation(line: 1625, column: 26, scope: !252, inlinedAt: !258)
!325 = !DILocation(line: 1625, column: 13, scope: !252, inlinedAt: !258)
!326 = !DILocation(line: 1620, column: 20, scope: !237, inlinedAt: !242)
!327 = !DILocalVariable(name: "pieces", arg: 1, scope: !328, file: !329, line: 329, type: !334)
!328 = distinct !DILexicalBlock(scope: !330, file: !329, line: 329, column: 5)
!329 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "fb126a293888f279de993e69d2771a11")
!330 = distinct !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17hf582091be60b805bE", scope: !331, file: !329, line: 329, type: !439, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, declaration: !441, retainedNodes: !442)
!331 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !37, file: !7, size: 384, align: 64, flags: DIFlagPublic, elements: !332, templateParams: !12, identifier: "f5a94cea047ca3dea35120609d07d08d")
!332 = !{!333, !344, !387}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !331, file: !7, baseType: !334, size: 128, align: 64, flags: DIFlagPrivate)
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !7, size: 128, align: 64, elements: !335, templateParams: !12, identifier: "d76b83877ddcb5cca61caf6bdca727ac")
!335 = !{!336, !343}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !334, file: !7, baseType: !337, size: 64, align: 64)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64, align: 64, dwarfAddressSpace: 0)
!338 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !7, size: 128, align: 64, elements: !339, templateParams: !12, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!339 = !{!340, !342}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !338, file: !7, baseType: !341, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !338, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !334, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !331, file: !7, baseType: !345, size: 128, align: 64, offset: 256, flags: DIFlagPrivate)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !140, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !346, templateParams: !12, identifier: "676f3d473eca9d85e7b8651af934444b")
!346 = !{!347}
!347 = !DICompositeType(tag: DW_TAG_variant_part, scope: !345, file: !7, size: 128, align: 64, elements: !348, templateParams: !12, identifier: "bfd14ac579232dd88fd2b0d1ad576493", discriminator: !386)
!348 = !{!349, !382}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !347, file: !7, baseType: !350, size: 128, align: 64, extraData: i128 0)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !345, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !12, templateParams: !351, identifier: "5cf1cdc1741ffabf116481b417e76678")
!351 = !{!352}
!352 = !DITemplateTypeParameter(name: "T", type: !353)
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !7, size: 128, align: 64, elements: !354, templateParams: !12, identifier: "335f0a904b053f61c731d86311ceff8c")
!354 = !{!355, !381}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !353, file: !7, baseType: !356, size: 64, align: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64, align: 64, dwarfAddressSpace: 0)
!357 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !36, file: !7, size: 448, align: 64, flags: DIFlagPublic, elements: !358, templateParams: !12, identifier: "f4039c5a35e0fee7484a39b4635b170f")
!358 = !{!359, !360, !362, !363, !364, !380}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !357, file: !7, baseType: !53, size: 64, align: 64, offset: 256, flags: DIFlagPublic)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !357, file: !7, baseType: !361, size: 32, align: 32, offset: 320, flags: DIFlagPublic)
!361 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !357, file: !7, baseType: !35, size: 8, align: 8, offset: 384, flags: DIFlagPublic)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !357, file: !7, baseType: !284, size: 32, align: 32, offset: 352, flags: DIFlagPublic)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !357, file: !7, baseType: !365, size: 128, align: 64, flags: DIFlagPublic)
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !36, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !366, templateParams: !12, identifier: "2ae93a82e88590f730796e48e70a07a7")
!366 = !{!367}
!367 = !DICompositeType(tag: DW_TAG_variant_part, scope: !365, file: !7, size: 128, align: 64, elements: !368, templateParams: !12, identifier: "c67f77b46946c26a4aac980956de48d6", discriminator: !379)
!368 = !{!369, !373, !377}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !367, file: !7, baseType: !370, size: 128, align: 64, extraData: i128 0)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !365, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !371, templateParams: !12, identifier: "383bd1cd71fc68e2ba1c3f7e48543eff")
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !370, file: !7, baseType: !53, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !367, file: !7, baseType: !374, size: 128, align: 64, extraData: i128 1)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !365, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !375, templateParams: !12, identifier: "ec135ad2d61c9b7e82d9f77c7d2136ad")
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !374, file: !7, baseType: !53, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !367, file: !7, baseType: !378, size: 128, align: 64, extraData: i128 2)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !365, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !12, identifier: "163729ef05b181fe4923856687999017")
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagArtificial)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !357, file: !7, baseType: !365, size: 128, align: 64, offset: 128, flags: DIFlagPublic)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !353, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !347, file: !7, baseType: !383, size: 128, align: 64)
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !345, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !384, templateParams: !351, identifier: "e3ff8c9215bd247d238f3585ea2dd2a4")
!384 = !{!385}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !383, file: !7, baseType: !353, size: 128, align: 64, flags: DIFlagPublic)
!386 = !DIDerivedType(tag: DW_TAG_member, scope: !345, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagArtificial)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !331, file: !7, baseType: !388, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !7, size: 128, align: 64, elements: !389, templateParams: !12, identifier: "f76267ba6692cc2d9e32e5839363f281")
!389 = !{!390, !438}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !388, file: !7, baseType: !391, size: 64, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64, align: 64, dwarfAddressSpace: 0)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !36, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !393, templateParams: !12, identifier: "6a921f2d5114932f602f7e7bc4389cf9")
!393 = !{!394, !398}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !392, file: !7, baseType: !395, size: 64, align: 64, flags: DIFlagPrivate)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::rt::{extern#0}::Opaque", baseType: !396, size: 64, align: 64, dwarfAddressSpace: 0)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !397, file: !7, align: 8, elements: !12, identifier: "4982ad5e14ab39475d76ca1d05f6c500")
!397 = !DINamespace(name: "{extern#0}", scope: !36)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !392, file: !7, baseType: !399, size: 64, align: 64, offset: 64, flags: DIFlagPrivate)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::rt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !400, size: 64, align: 64, dwarfAddressSpace: 0)
!400 = !DISubroutineType(types: !401)
!401 = !{!402, !395, !419}
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !403, file: !7, size: 8, align: 8, flags: DIFlagPublic, elements: !404, templateParams: !12, identifier: "be175170a3647a571f2129780e96e9a")
!403 = !DINamespace(name: "result", scope: !38)
!404 = !{!405}
!405 = !DICompositeType(tag: DW_TAG_variant_part, scope: !402, file: !7, size: 8, align: 8, elements: !406, templateParams: !12, identifier: "d84fc986954f0a57cdd867f92114d31f", discriminator: !418)
!406 = !{!407, !414}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !405, file: !7, baseType: !408, size: 8, align: 8, extraData: i128 0)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !402, file: !7, size: 8, align: 8, flags: DIFlagPublic, elements: !409, templateParams: !411, identifier: "8a3a859dd63bba0c896f6388bd70e8d3")
!409 = !{!410}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !408, file: !7, baseType: !82, align: 8, offset: 8, flags: DIFlagPublic)
!411 = !{!110, !412}
!412 = !DITemplateTypeParameter(name: "E", type: !413)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !37, file: !7, align: 8, flags: DIFlagPublic, elements: !12, identifier: "d17669f544649e4d3c30d94bedbae837")
!414 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !405, file: !7, baseType: !415, size: 8, align: 8, extraData: i128 1)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !402, file: !7, size: 8, align: 8, flags: DIFlagPublic, elements: !416, templateParams: !411, identifier: "80756213d1517f212b3869fb72b85f03")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !415, file: !7, baseType: !413, align: 8, offset: 8, flags: DIFlagPublic)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !402, file: !7, baseType: !25, size: 8, align: 8, flags: DIFlagArtificial)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !420, size: 64, align: 64, dwarfAddressSpace: 0)
!420 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !37, file: !7, size: 512, align: 64, flags: DIFlagPublic, elements: !421, templateParams: !12, identifier: "220d4d9789115bc6b80d4c98d9cf69c5")
!421 = !{!422, !423, !424, !425, !426, !427}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !420, file: !7, baseType: !284, size: 32, align: 32, offset: 416, flags: DIFlagPrivate)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !420, file: !7, baseType: !361, size: 32, align: 32, offset: 384, flags: DIFlagPrivate)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !420, file: !7, baseType: !35, size: 8, align: 8, offset: 448, flags: DIFlagPrivate)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !420, file: !7, baseType: !139, size: 128, align: 64, flags: DIFlagPrivate)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !420, file: !7, baseType: !139, size: 128, align: 64, offset: 128, flags: DIFlagPrivate)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !420, file: !7, baseType: !428, size: 128, align: 64, offset: 256, flags: DIFlagPrivate)
!428 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !7, size: 128, align: 64, elements: !429, templateParams: !12, identifier: "94f817b1adbb3ab96b0635104fb3fde3")
!429 = !{!430, !433}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !428, file: !7, baseType: !431, size: 64, align: 64)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64, align: 64, dwarfAddressSpace: 0)
!432 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !7, align: 8, elements: !12, identifier: "72805e6673b6ad52ecf81cbad56f4147")
!433 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !428, file: !7, baseType: !434, size: 64, align: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 192, align: 64, elements: !436)
!436 = !{!437}
!437 = !DISubrange(count: 3, lowerBound: 0)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !388, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!331, !334}
!441 = !DISubprogram(name: "new_const", linkageName: "_ZN4core3fmt9Arguments9new_const17hf582091be60b805bE", scope: !331, file: !329, line: 329, type: !439, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12)
!442 = !{!327}
!443 = !DILocation(line: 329, column: 28, scope: !328, inlinedAt: !444)
!444 = !DILocation(line: 106, column: 38, scope: !445, inlinedAt: !242)
!445 = !DILexicalBlockFile(scope: !237, file: !446, discriminator: 0)
!446 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "7db7c9ae020c8c30f72806f85a2ffe20")
!447 = !DILocation(line: 333, column: 9, scope: !328, inlinedAt: !444)
!448 = !{i64 8}
!449 = !DILocation(line: 1620, column: 13, scope: !237, inlinedAt: !242)
!450 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core10intrinsics4copy18precondition_check17h17007366dc948817E", scope: !451, file: !76, line: 2764, type: !452, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !454)
!451 = !DINamespace(name: "copy", scope: !77)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !81, !207, !53}
!454 = !{!455, !456, !457}
!455 = !DILocalVariable(name: "src", arg: 1, scope: !450, file: !76, line: 2764, type: !81)
!456 = !DILocalVariable(name: "dst", arg: 2, scope: !450, file: !76, line: 2764, type: !207)
!457 = !DILocalVariable(name: "align", arg: 3, scope: !450, file: !76, line: 2764, type: !53)
!458 = !DILocation(line: 2764, column: 37, scope: !450)
!459 = !DILocation(line: 3021, column: 13, scope: !450)
!460 = !DILocation(line: 2764, column: 13, scope: !450)
!461 = !DILocation(line: 2766, column: 21, scope: !450)
!462 = !DILocation(line: 3022, column: 20, scope: !450)
!463 = !DILocation(line: 1, column: 1, scope: !464)
!464 = !DILexicalBlockFile(scope: !450, file: !465, discriminator: 0)
!465 = !DIFile(filename: "src/lib.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "3fe2673fadf699d7ffa4eef93ab45ee9")
!466 = !DILocation(line: 2770, column: 14, scope: !450)
!467 = distinct !DISubprogram(name: "unlikely", linkageName: "_ZN4core10intrinsics8unlikely17h2e85a46bd8ea925fE", scope: !77, file: !76, line: 1013, type: !468, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !470)
!468 = !DISubroutineType(types: !469)
!469 = !{!80, !80}
!470 = !{!471}
!471 = !DILocalVariable(name: "b", arg: 1, scope: !467, file: !76, line: 1013, type: !80)
!472 = !DILocation(line: 1013, column: 23, scope: !467)
!473 = !DILocation(line: 1015, column: 2, scope: !467)
!474 = distinct !DISubprogram(name: "to_bits", linkageName: "_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits17he35d6ad522d304caE", scope: !476, file: !475, line: 1110, type: !478, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !481)
!475 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/num/f32.rs", directory: "", checksumkind: CSK_MD5, checksum: "2bb4c11248bf93ce7163763bbc663566")
!476 = !DINamespace(name: "{impl#0}", scope: !477)
!477 = !DINamespace(name: "f32", scope: !38)
!478 = !DISubroutineType(types: !479)
!479 = !{!284, !480}
!480 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!481 = !{!482}
!482 = !DILocalVariable(name: "self", arg: 1, scope: !474, file: !475, line: 1110, type: !480)
!483 = !DILocation(line: 1110, column: 26, scope: !474)
!484 = !DILocalVariable(name: "x", arg: 1, scope: !485, file: !475, line: 1150, type: !480)
!485 = distinct !DILexicalBlock(scope: !486, file: !475, line: 1150, column: 9)
!486 = distinct !DISubprogram(name: "rt_f32_to_u32", linkageName: "_ZN4core3f3221_$LT$impl$u20$f32$GT$7to_bits13rt_f32_to_u3217hf76a6a1eb18e6380E", scope: !487, file: !475, line: 1150, type: !478, scopeLine: 1150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !488)
!487 = !DINamespace(name: "to_bits", scope: !476)
!488 = !{!484}
!489 = !DILocation(line: 1150, column: 26, scope: !485, inlinedAt: !490)
!490 = !DILocation(line: 1159, column: 13, scope: !474)
!491 = !DILocation(line: 1154, column: 22, scope: !485, inlinedAt: !490)
!492 = !DILocation(line: 1161, column: 6, scope: !474)
!493 = distinct !DISubprogram(name: "to_bits", linkageName: "_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17h87803c219b16c1eeE", scope: !495, file: !494, line: 1121, type: !497, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !500)
!494 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/num/f64.rs", directory: "", checksumkind: CSK_MD5, checksum: "bbf66738219407ccd9ebda190fade6be")
!495 = !DINamespace(name: "{impl#0}", scope: !496)
!496 = !DINamespace(name: "f64", scope: !38)
!497 = !DISubroutineType(types: !498)
!498 = !{!10, !499}
!499 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!500 = !{!501}
!501 = !DILocalVariable(name: "self", arg: 1, scope: !493, file: !494, line: 1121, type: !499)
!502 = !DILocation(line: 1121, column: 26, scope: !493)
!503 = !DILocalVariable(name: "rt", arg: 1, scope: !504, file: !494, line: 1143, type: !499)
!504 = distinct !DILexicalBlock(scope: !505, file: !494, line: 1143, column: 9)
!505 = distinct !DISubprogram(name: "rt_f64_to_u64", linkageName: "_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits13rt_f64_to_u6417h3d6468cb88c979a6E", scope: !506, file: !494, line: 1143, type: !497, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !507)
!506 = !DINamespace(name: "to_bits", scope: !495)
!507 = !{!503}
!508 = !DILocation(line: 1143, column: 26, scope: !504, inlinedAt: !509)
!509 = !DILocation(line: 1152, column: 13, scope: !493)
!510 = !DILocation(line: 1147, column: 22, scope: !504, inlinedAt: !509)
!511 = !DILocation(line: 1154, column: 6, scope: !493)
!512 = distinct !DISubprogram(name: "write<u64>", linkageName: "_ZN4core3ptr5write17hcb93018d2258e1d4E", scope: !103, file: !513, line: 1473, type: !514, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !520, retainedNodes: !517)
!513 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "319662a8f09a06c38fa9ed06f53befd5")
!514 = !DISubroutineType(types: !515)
!515 = !{null, !516, !10}
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !10, size: 64, align: 64, dwarfAddressSpace: 0)
!517 = !{!518, !519}
!518 = !DILocalVariable(name: "dst", arg: 1, scope: !512, file: !513, line: 1473, type: !516)
!519 = !DILocalVariable(name: "src", arg: 2, scope: !512, file: !513, line: 1473, type: !10)
!520 = !{!521}
!521 = !DITemplateTypeParameter(name: "T", type: !10)
!522 = !DILocation(line: 1473, column: 30, scope: !512)
!523 = !DILocation(line: 1473, column: 43, scope: !512)
!524 = !DILocation(line: 1494, column: 9, scope: !512)
!525 = !DILocation(line: 1496, column: 2, scope: !512)
!526 = distinct !DISubprogram(name: "next<isize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd8fcc4db48919af4E", scope: !527, file: !46, line: 819, type: !528, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !554, retainedNodes: !552)
!527 = !DINamespace(name: "{impl#6}", scope: !48)
!528 = !DISubroutineType(types: !529)
!529 = !{!530, !543}
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<isize>", scope: !140, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !531, templateParams: !12, identifier: "ab34a9de509b197cbeea61b6f71a09")
!531 = !{!532}
!532 = !DICompositeType(tag: DW_TAG_variant_part, scope: !530, file: !7, size: 128, align: 64, elements: !533, templateParams: !12, identifier: "5edad7bd00e6a0209bce91b00a41a60", discriminator: !542)
!533 = !{!534, !538}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !532, file: !7, baseType: !535, size: 128, align: 64, extraData: i128 0)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !530, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !12, templateParams: !536, identifier: "a2bc3aee2b13ce2acae6d5953bca1bb5")
!536 = !{!537}
!537 = !DITemplateTypeParameter(name: "T", type: !52)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !532, file: !7, baseType: !539, size: 128, align: 64, extraData: i128 1)
!539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !530, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !540, templateParams: !536, identifier: "e845ca548382c128f846f0c7604b787e")
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !539, file: !7, baseType: !52, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagArtificial)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<isize>", baseType: !544, size: 64, align: 64, dwarfAddressSpace: 0)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<isize>", scope: !545, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !547, templateParams: !550, identifier: "372693365840c2b4b8aec9a03d4f3d46")
!545 = !DINamespace(name: "range", scope: !546)
!546 = !DINamespace(name: "ops", scope: !38)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !544, file: !7, baseType: !52, size: 64, align: 64, flags: DIFlagPublic)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !544, file: !7, baseType: !52, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!550 = !{!551}
!551 = !DITemplateTypeParameter(name: "Idx", type: !52)
!552 = !{!553}
!553 = !DILocalVariable(name: "self", arg: 1, scope: !526, file: !46, line: 819, type: !543)
!554 = !{!555}
!555 = !DITemplateTypeParameter(name: "A", type: !52)
!556 = !DILocation(line: 819, column: 13, scope: !526)
!557 = !DILocation(line: 820, column: 9, scope: !526)
!558 = !DILocation(line: 821, column: 6, scope: !526)
!559 = distinct !DISubprogram(name: "get_unchecked<(u64, u64), usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h30e4dc70f1f9abe3E", scope: !561, file: !560, line: 679, type: !563, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !574, retainedNodes: !571)
!560 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bd645d242e429a8f9550dabdf674e92b")
!561 = !DINamespace(name: "{impl#0}", scope: !562)
!562 = !DINamespace(name: "slice", scope: !38)
!563 = !DISubroutineType(types: !564)
!564 = !{!565, !566, !53}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(u64, u64)", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[(u64, u64)]", file: !7, size: 128, align: 64, elements: !567, templateParams: !12, identifier: "e3bce66d04dc50725d7de7f296b8027f")
!567 = !{!568, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !566, file: !7, baseType: !569, size: 64, align: 64)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !566, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!571 = !{!572, !573}
!572 = !DILocalVariable(name: "self", arg: 1, scope: !559, file: !560, line: 679, type: !566)
!573 = !DILocalVariable(name: "index", arg: 2, scope: !559, file: !560, line: 679, type: !53)
!574 = !{!575, !576}
!575 = !DITemplateTypeParameter(name: "T", type: !6)
!576 = !DITemplateTypeParameter(name: "I", type: !53)
!577 = !DILocation(line: 679, column: 36, scope: !559)
!578 = !DILocation(line: 679, column: 43, scope: !559)
!579 = !DILocation(line: 686, column: 20, scope: !559)
!580 = !DILocation(line: 687, column: 6, scope: !559)
!581 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<isize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc437dfee6e5e6bccE", scope: !583, file: !582, line: 321, type: !586, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !590, retainedNodes: !588)
!582 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "8686d5f0d947a2cbc3defdef44e01799")
!583 = !DINamespace(name: "{impl#0}", scope: !584)
!584 = !DINamespace(name: "collect", scope: !585)
!585 = !DINamespace(name: "traits", scope: !49)
!586 = !DISubroutineType(types: !587)
!587 = !{!544, !544}
!588 = !{!589}
!589 = !DILocalVariable(name: "self", arg: 1, scope: !581, file: !582, line: 321, type: !544)
!590 = !{!591}
!591 = !DITemplateTypeParameter(name: "I", type: !544)
!592 = !DILocation(line: 321, column: 18, scope: !581)
!593 = !DILocation(line: 323, column: 6, scope: !581)
!594 = distinct !DISubprogram(name: "get_unchecked<(u64, u64)>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3563110427193a4aE", scope: !596, file: !595, line: 232, type: !598, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !608, retainedNodes: !605)
!595 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "64a8de5498ea10af39073650ed20d9c4")
!596 = !DINamespace(name: "{impl#2}", scope: !597)
!597 = !DINamespace(name: "index", scope: !562)
!598 = !DISubroutineType(types: !599)
!599 = !{!600, !53, !601}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const (u64, u64)", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [(u64, u64)]", file: !7, size: 128, align: 64, elements: !602, templateParams: !12, identifier: "4baf921a2f1baed2ce4733fd95a7cad5")
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !601, file: !7, baseType: !569, size: 64, align: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !601, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!605 = !{!606, !607}
!606 = !DILocalVariable(name: "self", arg: 1, scope: !594, file: !595, line: 232, type: !53)
!607 = !DILocalVariable(name: "slice", arg: 2, scope: !594, file: !595, line: 232, type: !601)
!608 = !{!575}
!609 = !DILocation(line: 232, column: 29, scope: !594)
!610 = !DILocalVariable(name: "count", arg: 2, scope: !611, file: !99, line: 945, type: !53)
!611 = distinct !DILexicalBlock(scope: !612, file: !99, line: 945, column: 5)
!612 = distinct !DISubprogram(name: "add<(u64, u64)>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h92dbefc3c004a286E", scope: !101, file: !99, line: 945, type: !613, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !608, retainedNodes: !615)
!613 = !DISubroutineType(types: !614)
!614 = !{!600, !600, !53}
!615 = !{!616, !610}
!616 = !DILocalVariable(name: "self", arg: 1, scope: !611, file: !99, line: 945, type: !600)
!617 = !DILocation(line: 945, column: 35, scope: !611, inlinedAt: !618)
!618 = !DILocation(line: 245, column: 28, scope: !594)
!619 = !DILocation(line: 232, column: 35, scope: !594)
!620 = !DILocalVariable(name: "self", arg: 1, scope: !621, file: !99, line: 1666, type: !601)
!621 = distinct !DILexicalBlock(scope: !622, file: !99, line: 1666, column: 5)
!622 = distinct !DISubprogram(name: "len<(u64, u64)>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5c0d38aee240e01dE", scope: !623, file: !99, line: 1666, type: !624, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !608, retainedNodes: !626)
!623 = !DINamespace(name: "{impl#1}", scope: !102)
!624 = !DISubroutineType(types: !625)
!625 = !{!53, !601}
!626 = !{!620, !627}
!627 = !DILocalVariable(name: "self", arg: 1, scope: !628, file: !99, line: 1666, type: !601)
!628 = distinct !DILexicalBlock(scope: !622, file: !99, line: 1666, column: 5)
!629 = !DILocation(line: 1666, column: 22, scope: !621, inlinedAt: !630)
!630 = !DILocation(line: 234, column: 26, scope: !594)
!631 = !DILocalVariable(name: "ptr", arg: 1, scope: !632, file: !633, line: 94, type: !601)
!632 = distinct !DILexicalBlock(scope: !634, file: !633, line: 94, column: 1)
!633 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "3e5f46ed28de51d38cc460b6ffb611d6")
!634 = distinct !DISubprogram(name: "metadata<[(u64, u64)]>", linkageName: "_ZN4core3ptr8metadata8metadata17hbe1a1a8aaf388c86E", scope: !635, file: !633, line: 94, type: !624, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !608, retainedNodes: !636)
!635 = !DINamespace(name: "metadata", scope: !103)
!636 = !{!631, !637}
!637 = !DILocalVariable(name: "ptr", arg: 1, scope: !638, file: !633, line: 94, type: !601)
!638 = distinct !DILexicalBlock(scope: !634, file: !633, line: 94, column: 1)
!639 = !DILocation(line: 94, column: 34, scope: !632, inlinedAt: !640)
!640 = !DILocation(line: 1667, column: 9, scope: !621, inlinedAt: !630)
!641 = !DILocation(line: 1666, column: 22, scope: !628, inlinedAt: !642)
!642 = !DILocation(line: 244, column: 52, scope: !594)
!643 = !DILocation(line: 94, column: 34, scope: !638, inlinedAt: !644)
!644 = !DILocation(line: 1667, column: 9, scope: !628, inlinedAt: !642)
!645 = !DILocalVariable(name: "self", arg: 1, scope: !646, file: !99, line: 1704, type: !601)
!646 = distinct !DILexicalBlock(scope: !647, file: !99, line: 1704, column: 5)
!647 = distinct !DISubprogram(name: "as_ptr<(u64, u64)>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h9e601191acf4fa0fE", scope: !623, file: !99, line: 1704, type: !648, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !608, retainedNodes: !650)
!648 = !DISubroutineType(types: !649)
!649 = !{!600, !601}
!650 = !{!645}
!651 = !DILocation(line: 1704, column: 25, scope: !646, inlinedAt: !652)
!652 = !DILocation(line: 245, column: 19, scope: !594)
!653 = !DILocation(line: 233, column: 9, scope: !594)
!654 = !DILocation(line: 98, column: 14, scope: !632, inlinedAt: !640)
!655 = !DILocation(line: 234, column: 13, scope: !594)
!656 = !DILocation(line: 98, column: 14, scope: !638, inlinedAt: !644)
!657 = !DILocation(line: 244, column: 39, scope: !594)
!658 = !DILocation(line: 1705, column: 9, scope: !646, inlinedAt: !652)
!659 = !DILocation(line: 945, column: 29, scope: !611, inlinedAt: !618)
!660 = !DILocation(line: 950, column: 18, scope: !611, inlinedAt: !618)
!661 = !DILocation(line: 247, column: 6, scope: !594)
!662 = distinct !DISubprogram(name: "spec_next<isize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h0bbc31bcc60a3f6aE", scope: !663, file: !46, line: 728, type: !528, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !536, retainedNodes: !664)
!663 = !DINamespace(name: "{impl#5}", scope: !48)
!664 = !{!665, !666}
!665 = !DILocalVariable(name: "self", arg: 1, scope: !662, file: !46, line: 728, type: !543)
!666 = !DILocalVariable(name: "old", scope: !667, file: !46, line: 730, type: !52, align: 8)
!667 = distinct !DILexicalBlock(scope: !662, file: !46, line: 730, column: 13)
!668 = !DILocation(line: 728, column: 18, scope: !662)
!669 = !DILocation(line: 729, column: 25, scope: !662)
!670 = !DILocalVariable(name: "self", arg: 1, scope: !671, file: !672, line: 1553, type: !678)
!671 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$isize$GT$2lt17h579bf0d09e2f1b04E", scope: !673, file: !672, line: 1553, type: !676, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !679)
!672 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "a92d0ff535cd882f49f92c6340fed1e4")
!673 = !DINamespace(name: "{impl#66}", scope: !674)
!674 = !DINamespace(name: "impls", scope: !675)
!675 = !DINamespace(name: "cmp", scope: !38)
!676 = !DISubroutineType(types: !677)
!677 = !{!80, !678, !678}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&isize", baseType: !52, size: 64, align: 64, dwarfAddressSpace: 0)
!679 = !{!670, !680}
!680 = !DILocalVariable(name: "other", arg: 2, scope: !671, file: !672, line: 1553, type: !678)
!681 = !DILocation(line: 1553, column: 23, scope: !671, inlinedAt: !682)
!682 = distinct !DILocation(line: 729, column: 12, scope: !662)
!683 = !DILocation(line: 1553, column: 30, scope: !671, inlinedAt: !682)
!684 = !DILocation(line: 1553, column: 52, scope: !671, inlinedAt: !682)
!685 = !DILocation(line: 1553, column: 62, scope: !671, inlinedAt: !682)
!686 = !DILocation(line: 729, column: 12, scope: !662)
!687 = !DILocation(line: 735, column: 13, scope: !662)
!688 = !DILocation(line: 729, column: 9, scope: !662)
!689 = !DILocation(line: 730, column: 23, scope: !662)
!690 = !DILocation(line: 730, column: 17, scope: !667)
!691 = !DILocation(line: 732, column: 35, scope: !667)
!692 = !DILocation(line: 732, column: 13, scope: !667)
!693 = !DILocation(line: 733, column: 13, scope: !667)
!694 = !DILocation(line: 737, column: 6, scope: !662)
!695 = !{i64 0, i64 2}
!696 = distinct !DISubprogram(name: "format_nonfinite", linkageName: "_ZN43_$LT$f32$u20$as$u20$ryu..buffer..Sealed$GT$16format_nonfinite17h0d8e470cf918498dE", scope: !698, file: !697, line: 125, type: !700, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !702)
!697 = !DIFile(filename: "src/buffer/mod.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "772f44661a186edec40121c84ef94c54")
!698 = !DINamespace(name: "{impl#6}", scope: !699)
!699 = !DINamespace(name: "buffer", scope: !3)
!700 = !DISubroutineType(types: !701)
!701 = !{!338, !480}
!702 = !{!703, !704}
!703 = !DILocalVariable(name: "self", arg: 1, scope: !696, file: !697, line: 125, type: !480)
!704 = !DILocalVariable(name: "bits", scope: !705, file: !697, line: 128, type: !284, align: 4)
!705 = distinct !DILexicalBlock(scope: !696, file: !697, line: 128, column: 9)
!706 = !DILocation(line: 125, column: 25, scope: !696)
!707 = !DILocation(line: 128, column: 20, scope: !696)
!708 = !DILocation(line: 128, column: 13, scope: !705)
!709 = !DILocation(line: 129, column: 12, scope: !705)
!710 = !DILocation(line: 131, column: 19, scope: !705)
!711 = !DILocation(line: 130, column: 13, scope: !705)
!712 = !DILocation(line: 129, column: 9, scope: !705)
!713 = !DILocation(line: 134, column: 13, scope: !705)
!714 = !DILocation(line: 131, column: 16, scope: !705)
!715 = !DILocation(line: 132, column: 13, scope: !705)
!716 = !DILocation(line: 136, column: 6, scope: !696)
!717 = !{i64 1}
!718 = distinct !DISubprogram(name: "format_nonfinite", linkageName: "_ZN43_$LT$f64$u20$as$u20$ryu..buffer..Sealed$GT$16format_nonfinite17h8f3a09190c85aa54E", scope: !719, file: !697, line: 154, type: !720, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !722)
!719 = !DINamespace(name: "{impl#7}", scope: !699)
!720 = !DISubroutineType(types: !721)
!721 = !{!338, !499}
!722 = !{!723, !724}
!723 = !DILocalVariable(name: "self", arg: 1, scope: !718, file: !697, line: 154, type: !499)
!724 = !DILocalVariable(name: "bits", scope: !725, file: !697, line: 157, type: !10, align: 8)
!725 = distinct !DILexicalBlock(scope: !718, file: !697, line: 157, column: 9)
!726 = !DILocation(line: 154, column: 25, scope: !718)
!727 = !DILocation(line: 157, column: 20, scope: !718)
!728 = !DILocation(line: 157, column: 13, scope: !725)
!729 = !DILocation(line: 158, column: 12, scope: !725)
!730 = !DILocation(line: 160, column: 19, scope: !725)
!731 = !DILocation(line: 159, column: 13, scope: !725)
!732 = !DILocation(line: 158, column: 9, scope: !725)
!733 = !DILocation(line: 163, column: 13, scope: !725)
!734 = !DILocation(line: 160, column: 16, scope: !725)
!735 = !DILocation(line: 161, column: 13, scope: !725)
!736 = !DILocation(line: 165, column: 6, scope: !718)
!737 = distinct !DISubprogram(name: "decimal_length9", linkageName: "_ZN3ryu6common15decimal_length917he93f7bd74fb523f6E", scope: !739, file: !738, line: 24, type: !740, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !742)
!738 = !DIFile(filename: "src/common.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "2b730f003e57a65ddee7c98f704dd2e1")
!739 = !DINamespace(name: "common", scope: !3)
!740 = !DISubroutineType(types: !741)
!741 = !{!284, !284}
!742 = !{!743}
!743 = !DILocalVariable(name: "v", arg: 1, scope: !737, file: !738, line: 24, type: !284)
!744 = !DILocation(line: 24, column: 24, scope: !737)
!745 = !DILocation(line: 27, column: 5, scope: !737)
!746 = !DILocation(line: 27, column: 19, scope: !737)
!747 = !DILocation(line: 29, column: 8, scope: !737)
!748 = !DILocation(line: 31, column: 15, scope: !737)
!749 = !DILocation(line: 30, column: 9, scope: !737)
!750 = !DILocation(line: 29, column: 5, scope: !737)
!751 = !DILocation(line: 33, column: 15, scope: !737)
!752 = !DILocation(line: 32, column: 9, scope: !737)
!753 = !DILocation(line: 31, column: 12, scope: !737)
!754 = !DILocation(line: 35, column: 15, scope: !737)
!755 = !DILocation(line: 34, column: 9, scope: !737)
!756 = !DILocation(line: 33, column: 12, scope: !737)
!757 = !DILocation(line: 37, column: 15, scope: !737)
!758 = !DILocation(line: 36, column: 9, scope: !737)
!759 = !DILocation(line: 35, column: 12, scope: !737)
!760 = !DILocation(line: 39, column: 15, scope: !737)
!761 = !DILocation(line: 38, column: 9, scope: !737)
!762 = !DILocation(line: 37, column: 12, scope: !737)
!763 = !DILocation(line: 41, column: 15, scope: !737)
!764 = !DILocation(line: 40, column: 9, scope: !737)
!765 = !DILocation(line: 39, column: 12, scope: !737)
!766 = !DILocation(line: 43, column: 15, scope: !737)
!767 = !DILocation(line: 42, column: 9, scope: !737)
!768 = !DILocation(line: 41, column: 12, scope: !737)
!769 = !DILocation(line: 46, column: 9, scope: !737)
!770 = !DILocation(line: 43, column: 12, scope: !737)
!771 = !DILocation(line: 44, column: 9, scope: !737)
!772 = !DILocation(line: 48, column: 2, scope: !737)
!773 = distinct !DISubprogram(name: "pow5bits", linkageName: "_ZN3ryu6common8pow5bits17h9f5de19df2d224d5E", scope: !739, file: !738, line: 64, type: !774, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !777)
!774 = !DISubroutineType(types: !775)
!775 = !{!776, !776}
!776 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!777 = !{!778}
!778 = !DILocalVariable(name: "e", arg: 1, scope: !773, file: !738, line: 64, type: !776)
!779 = !DILocation(line: 64, column: 17, scope: !773)
!780 = !DILocation(line: 68, column: 5, scope: !773)
!781 = !DILocation(line: 68, column: 19, scope: !773)
!782 = !DILocation(line: 69, column: 5, scope: !773)
!783 = !DILocation(line: 69, column: 19, scope: !773)
!784 = !DILocation(line: 70, column: 7, scope: !773)
!785 = !DILocation(line: 70, column: 6, scope: !773)
!786 = !DILocation(line: 70, column: 5, scope: !773)
!787 = !DILocation(line: 71, column: 2, scope: !773)
!788 = distinct !DISubprogram(name: "log10_pow2", linkageName: "_ZN3ryu6common10log10_pow217h88a5810e0666daf6E", scope: !739, file: !738, line: 81, type: !789, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !791)
!789 = !DISubroutineType(types: !790)
!790 = !{!284, !776}
!791 = !{!792}
!792 = !DILocalVariable(name: "e", arg: 1, scope: !788, file: !738, line: 81, type: !776)
!793 = !DILocation(line: 81, column: 19, scope: !788)
!794 = !DILocation(line: 83, column: 5, scope: !788)
!795 = !DILocation(line: 83, column: 19, scope: !788)
!796 = !DILocation(line: 84, column: 5, scope: !788)
!797 = !DILocation(line: 84, column: 19, scope: !788)
!798 = !DILocation(line: 85, column: 5, scope: !788)
!799 = !DILocation(line: 86, column: 2, scope: !788)
!800 = distinct !DISubprogram(name: "log10_pow5", linkageName: "_ZN3ryu6common10log10_pow517h9cfc9ad07c9e8fa1E", scope: !739, file: !738, line: 90, type: !789, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !801)
!801 = !{!802}
!802 = !DILocalVariable(name: "e", arg: 1, scope: !800, file: !738, line: 90, type: !776)
!803 = !DILocation(line: 90, column: 19, scope: !800)
!804 = !DILocation(line: 92, column: 5, scope: !800)
!805 = !DILocation(line: 92, column: 19, scope: !800)
!806 = !DILocation(line: 93, column: 5, scope: !800)
!807 = !DILocation(line: 93, column: 19, scope: !800)
!808 = !DILocation(line: 94, column: 5, scope: !800)
!809 = !DILocation(line: 95, column: 2, scope: !800)
!810 = distinct !DISubprogram(name: "decimal_length17", linkageName: "_ZN3ryu3d2s16decimal_length1717he889d407549ead65E", scope: !812, file: !811, line: 38, type: !813, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !815)
!811 = !DIFile(filename: "src/d2s.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "824ab6782276e4294743c0ef811fed20")
!812 = !DINamespace(name: "d2s", scope: !3)
!813 = !DISubroutineType(types: !814)
!814 = !{!284, !10}
!815 = !{!816}
!816 = !DILocalVariable(name: "v", arg: 1, scope: !810, file: !811, line: 38, type: !10)
!817 = !DILocation(line: 38, column: 25, scope: !810)
!818 = !DILocation(line: 43, column: 5, scope: !810)
!819 = !DILocation(line: 43, column: 19, scope: !810)
!820 = !DILocation(line: 45, column: 8, scope: !810)
!821 = !DILocation(line: 47, column: 15, scope: !810)
!822 = !DILocation(line: 46, column: 9, scope: !810)
!823 = !DILocation(line: 45, column: 5, scope: !810)
!824 = !DILocation(line: 49, column: 15, scope: !810)
!825 = !DILocation(line: 48, column: 9, scope: !810)
!826 = !DILocation(line: 47, column: 12, scope: !810)
!827 = !DILocation(line: 51, column: 15, scope: !810)
!828 = !DILocation(line: 50, column: 9, scope: !810)
!829 = !DILocation(line: 49, column: 12, scope: !810)
!830 = !DILocation(line: 53, column: 15, scope: !810)
!831 = !DILocation(line: 52, column: 9, scope: !810)
!832 = !DILocation(line: 51, column: 12, scope: !810)
!833 = !DILocation(line: 55, column: 15, scope: !810)
!834 = !DILocation(line: 54, column: 9, scope: !810)
!835 = !DILocation(line: 53, column: 12, scope: !810)
!836 = !DILocation(line: 57, column: 15, scope: !810)
!837 = !DILocation(line: 56, column: 9, scope: !810)
!838 = !DILocation(line: 55, column: 12, scope: !810)
!839 = !DILocation(line: 59, column: 15, scope: !810)
!840 = !DILocation(line: 58, column: 9, scope: !810)
!841 = !DILocation(line: 57, column: 12, scope: !810)
!842 = !DILocation(line: 61, column: 15, scope: !810)
!843 = !DILocation(line: 60, column: 9, scope: !810)
!844 = !DILocation(line: 59, column: 12, scope: !810)
!845 = !DILocation(line: 63, column: 15, scope: !810)
!846 = !DILocation(line: 62, column: 9, scope: !810)
!847 = !DILocation(line: 61, column: 12, scope: !810)
!848 = !DILocation(line: 65, column: 15, scope: !810)
!849 = !DILocation(line: 64, column: 9, scope: !810)
!850 = !DILocation(line: 63, column: 12, scope: !810)
!851 = !DILocation(line: 67, column: 15, scope: !810)
!852 = !DILocation(line: 66, column: 9, scope: !810)
!853 = !DILocation(line: 65, column: 12, scope: !810)
!854 = !DILocation(line: 69, column: 15, scope: !810)
!855 = !DILocation(line: 68, column: 9, scope: !810)
!856 = !DILocation(line: 67, column: 12, scope: !810)
!857 = !DILocation(line: 71, column: 15, scope: !810)
!858 = !DILocation(line: 70, column: 9, scope: !810)
!859 = !DILocation(line: 69, column: 12, scope: !810)
!860 = !DILocation(line: 73, column: 15, scope: !810)
!861 = !DILocation(line: 72, column: 9, scope: !810)
!862 = !DILocation(line: 71, column: 12, scope: !810)
!863 = !DILocation(line: 75, column: 15, scope: !810)
!864 = !DILocation(line: 74, column: 9, scope: !810)
!865 = !DILocation(line: 73, column: 12, scope: !810)
!866 = !DILocation(line: 78, column: 9, scope: !810)
!867 = !DILocation(line: 75, column: 12, scope: !810)
!868 = !DILocation(line: 76, column: 9, scope: !810)
!869 = !DILocation(line: 80, column: 2, scope: !810)
!870 = distinct !DISubprogram(name: "d2d", linkageName: "_ZN3ryu3d2s3d2d17heeaf98c7cc011aeaE", scope: !812, file: !811, line: 91, type: !871, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !877)
!871 = !DISubroutineType(types: !872)
!872 = !{!873, !10, !284}
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "FloatingDecimal64", scope: !812, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !874, templateParams: !12, identifier: "6c4f0120b52dc5bc6ccb7dbb74295ba7")
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "mantissa", scope: !873, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagPublic)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !873, file: !7, baseType: !776, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!877 = !{!878, !879, !880, !882, !883, !885, !887, !889, !891, !893, !895, !897, !909, !911, !913, !915, !917, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977}
!878 = !DILocalVariable(name: "ieee_mantissa", arg: 1, scope: !870, file: !811, line: 91, type: !10)
!879 = !DILocalVariable(name: "ieee_exponent", arg: 2, scope: !870, file: !811, line: 91, type: !284)
!880 = !DILocalVariable(name: "e2", scope: !881, file: !811, line: 92, type: !776, align: 4)
!881 = distinct !DILexicalBlock(scope: !870, file: !811, line: 92, column: 5)
!882 = !DILocalVariable(name: "m2", scope: !881, file: !811, line: 92, type: !10, align: 8)
!883 = !DILocalVariable(name: "even", scope: !884, file: !811, line: 104, type: !80, align: 1)
!884 = distinct !DILexicalBlock(scope: !881, file: !811, line: 104, column: 5)
!885 = !DILocalVariable(name: "accept_bounds", scope: !886, file: !811, line: 105, type: !80, align: 1)
!886 = distinct !DILexicalBlock(scope: !884, file: !811, line: 105, column: 5)
!887 = !DILocalVariable(name: "mv", scope: !888, file: !811, line: 108, type: !10, align: 8)
!888 = distinct !DILexicalBlock(scope: !886, file: !811, line: 108, column: 5)
!889 = !DILocalVariable(name: "mm_shift", scope: !890, file: !811, line: 110, type: !284, align: 4)
!890 = distinct !DILexicalBlock(scope: !888, file: !811, line: 110, column: 5)
!891 = !DILocalVariable(name: "vr", scope: !892, file: !811, line: 116, type: !10, align: 8)
!892 = distinct !DILexicalBlock(scope: !890, file: !811, line: 116, column: 5)
!893 = !DILocalVariable(name: "vp", scope: !894, file: !811, line: 117, type: !10, align: 8)
!894 = distinct !DILexicalBlock(scope: !892, file: !811, line: 117, column: 5)
!895 = !DILocalVariable(name: "vm", scope: !896, file: !811, line: 118, type: !10, align: 8)
!896 = distinct !DILexicalBlock(scope: !894, file: !811, line: 118, column: 5)
!897 = !DILocalVariable(name: "vp_uninit", scope: !898, file: !811, line: 119, type: !899, align: 8)
!898 = distinct !DILexicalBlock(scope: !896, file: !811, line: 119, column: 5)
!899 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u64>", scope: !900, file: !7, size: 64, align: 64, elements: !902, templateParams: !520, identifier: "8f40ba9319f36c8813f2c5fe4bca71e4")
!900 = !DINamespace(name: "maybe_uninit", scope: !901)
!901 = !DINamespace(name: "mem", scope: !38)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !899, file: !7, baseType: !82, align: 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !899, file: !7, baseType: !905, size: 64, align: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u64>", scope: !906, file: !7, size: 64, align: 64, flags: DIFlagPublic, elements: !907, templateParams: !520, identifier: "3ad25326d13d28e490bb58adf71b0625")
!906 = !DINamespace(name: "manually_drop", scope: !901)
!907 = !{!908}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !905, file: !7, baseType: !10, size: 64, align: 64, flags: DIFlagPrivate)
!909 = !DILocalVariable(name: "vm_uninit", scope: !910, file: !811, line: 120, type: !899, align: 8)
!910 = distinct !DILexicalBlock(scope: !898, file: !811, line: 120, column: 5)
!911 = !DILocalVariable(name: "e10", scope: !912, file: !811, line: 121, type: !776, align: 4)
!912 = distinct !DILexicalBlock(scope: !910, file: !811, line: 121, column: 5)
!913 = !DILocalVariable(name: "vm_is_trailing_zeros", scope: !914, file: !811, line: 122, type: !80, align: 1)
!914 = distinct !DILexicalBlock(scope: !912, file: !811, line: 122, column: 5)
!915 = !DILocalVariable(name: "vr_is_trailing_zeros", scope: !916, file: !811, line: 123, type: !80, align: 1)
!916 = distinct !DILexicalBlock(scope: !914, file: !811, line: 123, column: 5)
!917 = !DILocalVariable(name: "q", scope: !918, file: !811, line: 127, type: !284, align: 4)
!918 = distinct !DILexicalBlock(scope: !916, file: !811, line: 127, column: 9)
!919 = !DILocalVariable(name: "k", scope: !920, file: !811, line: 129, type: !776, align: 4)
!920 = distinct !DILexicalBlock(scope: !918, file: !811, line: 129, column: 9)
!921 = !DILocalVariable(name: "i", scope: !922, file: !811, line: 130, type: !776, align: 4)
!922 = distinct !DILexicalBlock(scope: !920, file: !811, line: 130, column: 9)
!923 = !DILocalVariable(name: "mv_mod5", scope: !924, file: !811, line: 153, type: !284, align: 4)
!924 = distinct !DILexicalBlock(scope: !922, file: !811, line: 153, column: 13)
!925 = !DILocalVariable(name: "q", scope: !926, file: !811, line: 168, type: !284, align: 4)
!926 = distinct !DILexicalBlock(scope: !916, file: !811, line: 168, column: 9)
!927 = !DILocalVariable(name: "i", scope: !928, file: !811, line: 170, type: !776, align: 4)
!928 = distinct !DILexicalBlock(scope: !926, file: !811, line: 170, column: 9)
!929 = !DILocalVariable(name: "k", scope: !930, file: !811, line: 171, type: !776, align: 4)
!930 = distinct !DILexicalBlock(scope: !928, file: !811, line: 171, column: 9)
!931 = !DILocalVariable(name: "j", scope: !932, file: !811, line: 172, type: !776, align: 4)
!932 = distinct !DILexicalBlock(scope: !930, file: !811, line: 172, column: 9)
!933 = !DILocalVariable(name: "removed", scope: !934, file: !811, line: 213, type: !776, align: 4)
!934 = distinct !DILexicalBlock(scope: !916, file: !811, line: 213, column: 5)
!935 = !DILocalVariable(name: "last_removed_digit", scope: !936, file: !811, line: 214, type: !25, align: 1)
!936 = distinct !DILexicalBlock(scope: !934, file: !811, line: 214, column: 5)
!937 = !DILocalVariable(name: "output", scope: !938, file: !811, line: 216, type: !10, align: 8)
!938 = distinct !DILexicalBlock(scope: !936, file: !811, line: 216, column: 5)
!939 = !DILocalVariable(name: "vp_div10", scope: !940, file: !811, line: 219, type: !10, align: 8)
!940 = distinct !DILexicalBlock(scope: !936, file: !811, line: 219, column: 13)
!941 = !DILocalVariable(name: "vm_div10", scope: !942, file: !811, line: 220, type: !10, align: 8)
!942 = distinct !DILexicalBlock(scope: !940, file: !811, line: 220, column: 13)
!943 = !DILocalVariable(name: "vm_mod10", scope: !944, file: !811, line: 224, type: !284, align: 4)
!944 = distinct !DILexicalBlock(scope: !942, file: !811, line: 224, column: 13)
!945 = !DILocalVariable(name: "vr_div10", scope: !946, file: !811, line: 225, type: !10, align: 8)
!946 = distinct !DILexicalBlock(scope: !944, file: !811, line: 225, column: 13)
!947 = !DILocalVariable(name: "vr_mod10", scope: !948, file: !811, line: 226, type: !284, align: 4)
!948 = distinct !DILexicalBlock(scope: !946, file: !811, line: 226, column: 13)
!949 = !DILocalVariable(name: "vm_div10", scope: !950, file: !811, line: 237, type: !10, align: 8)
!950 = distinct !DILexicalBlock(scope: !936, file: !811, line: 237, column: 17)
!951 = !DILocalVariable(name: "vm_mod10", scope: !952, file: !811, line: 238, type: !284, align: 4)
!952 = distinct !DILexicalBlock(scope: !950, file: !811, line: 238, column: 17)
!953 = !DILocalVariable(name: "vp_div10", scope: !954, file: !811, line: 242, type: !10, align: 8)
!954 = distinct !DILexicalBlock(scope: !952, file: !811, line: 242, column: 17)
!955 = !DILocalVariable(name: "vr_div10", scope: !956, file: !811, line: 243, type: !10, align: 8)
!956 = distinct !DILexicalBlock(scope: !954, file: !811, line: 243, column: 17)
!957 = !DILocalVariable(name: "vr_mod10", scope: !958, file: !811, line: 244, type: !284, align: 4)
!958 = distinct !DILexicalBlock(scope: !956, file: !811, line: 244, column: 17)
!959 = !DILocalVariable(name: "round_up", scope: !960, file: !811, line: 262, type: !80, align: 1)
!960 = distinct !DILexicalBlock(scope: !936, file: !811, line: 262, column: 9)
!961 = !DILocalVariable(name: "vp_div100", scope: !962, file: !811, line: 263, type: !10, align: 8)
!962 = distinct !DILexicalBlock(scope: !960, file: !811, line: 263, column: 9)
!963 = !DILocalVariable(name: "vm_div100", scope: !964, file: !811, line: 264, type: !10, align: 8)
!964 = distinct !DILexicalBlock(scope: !962, file: !811, line: 264, column: 9)
!965 = !DILocalVariable(name: "vr_div100", scope: !966, file: !811, line: 267, type: !10, align: 8)
!966 = distinct !DILexicalBlock(scope: !964, file: !811, line: 267, column: 13)
!967 = !DILocalVariable(name: "vr_mod100", scope: !968, file: !811, line: 268, type: !284, align: 4)
!968 = distinct !DILexicalBlock(scope: !966, file: !811, line: 268, column: 13)
!969 = !DILocalVariable(name: "vp_div10", scope: !970, file: !811, line: 280, type: !10, align: 8)
!970 = distinct !DILexicalBlock(scope: !964, file: !811, line: 280, column: 13)
!971 = !DILocalVariable(name: "vm_div10", scope: !972, file: !811, line: 281, type: !10, align: 8)
!972 = distinct !DILexicalBlock(scope: !970, file: !811, line: 281, column: 13)
!973 = !DILocalVariable(name: "vr_div10", scope: !974, file: !811, line: 285, type: !10, align: 8)
!974 = distinct !DILexicalBlock(scope: !972, file: !811, line: 285, column: 13)
!975 = !DILocalVariable(name: "vr_mod10", scope: !976, file: !811, line: 286, type: !284, align: 4)
!976 = distinct !DILexicalBlock(scope: !974, file: !811, line: 286, column: 13)
!977 = !DILocalVariable(name: "exp", scope: !978, file: !811, line: 296, type: !776, align: 4)
!978 = distinct !DILexicalBlock(scope: !938, file: !811, line: 296, column: 5)
!979 = !DILocation(line: 91, column: 12, scope: !870)
!980 = !DILocation(line: 91, column: 32, scope: !870)
!981 = !DILocation(line: 116, column: 9, scope: !892)
!982 = !DILocation(line: 117, column: 9, scope: !894)
!983 = !DILocation(line: 118, column: 9, scope: !896)
!984 = !DILocation(line: 119, column: 9, scope: !898)
!985 = !DILocation(line: 120, column: 9, scope: !910)
!986 = !DILocation(line: 121, column: 9, scope: !912)
!987 = !DILocation(line: 122, column: 9, scope: !914)
!988 = !DILocation(line: 123, column: 9, scope: !916)
!989 = !DILocation(line: 213, column: 9, scope: !934)
!990 = !DILocation(line: 214, column: 9, scope: !936)
!991 = !DILocation(line: 216, column: 9, scope: !938)
!992 = !DILocation(line: 262, column: 13, scope: !960)
!993 = !DILocation(line: 92, column: 23, scope: !870)
!994 = !DILocation(line: 95, column: 13, scope: !870)
!995 = !DILocation(line: 100, column: 13, scope: !870)
!996 = !DILocation(line: 93, column: 9, scope: !870)
!997 = !DILocation(line: 92, column: 20, scope: !870)
!998 = !DILocation(line: 92, column: 10, scope: !870)
!999 = !DILocation(line: 92, column: 10, scope: !881)
!1000 = !DILocation(line: 92, column: 14, scope: !870)
!1001 = !DILocation(line: 92, column: 14, scope: !881)
!1002 = !DILocation(line: 104, column: 16, scope: !881)
!1003 = !DILocation(line: 104, column: 9, scope: !884)
!1004 = !DILocation(line: 105, column: 9, scope: !886)
!1005 = !DILocation(line: 108, column: 14, scope: !886)
!1006 = !DILocation(line: 101, column: 13, scope: !870)
!1007 = !DILocation(line: 99, column: 9, scope: !870)
!1008 = !DILocation(line: 108, column: 9, scope: !888)
!1009 = !DILocation(line: 110, column: 21, scope: !888)
!1010 = !DILocation(line: 110, column: 43, scope: !888)
!1011 = !DILocation(line: 110, column: 20, scope: !888)
!1012 = !DILocation(line: 110, column: 9, scope: !890)
!1013 = !DILocation(line: 315, column: 6, scope: !1014, inlinedAt: !1019)
!1014 = distinct !DISubprogram(name: "uninit<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h009a6c066d11d051E", scope: !899, file: !1015, line: 313, type: !1016, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !520, declaration: !1018)
!1015 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "c4c20ead26fb871e983e6c719b1facff")
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!899}
!1018 = !DISubprogram(name: "uninit<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h009a6c066d11d051E", scope: !899, file: !1015, line: 313, type: !1016, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !520)
!1019 = distinct !DILocation(line: 119, column: 43, scope: !896)
!1020 = !DILocation(line: 119, column: 43, scope: !896)
!1021 = !DILocation(line: 315, column: 6, scope: !1014, inlinedAt: !1022)
!1022 = distinct !DILocation(line: 120, column: 43, scope: !898)
!1023 = !DILocation(line: 120, column: 43, scope: !898)
!1024 = !DILocation(line: 122, column: 36, scope: !912)
!1025 = !DILocation(line: 123, column: 36, scope: !914)
!1026 = !DILocation(line: 124, column: 8, scope: !916)
!1027 = !DILocation(line: 168, column: 28, scope: !916)
!1028 = !DILocation(line: 127, column: 17, scope: !916)
!1029 = !DILocation(line: 127, column: 34, scope: !916)
!1030 = !DILocation(line: 168, column: 17, scope: !916)
!1031 = !DILocation(line: 168, column: 36, scope: !916)
!1032 = !DILocation(line: 168, column: 35, scope: !916)
!1033 = !DILocation(line: 168, column: 13, scope: !926)
!1034 = !DILocation(line: 169, column: 15, scope: !926)
!1035 = !DILocation(line: 169, column: 9, scope: !926)
!1036 = !DILocation(line: 170, column: 17, scope: !926)
!1037 = !DILocation(line: 170, column: 13, scope: !928)
!1038 = !DILocation(line: 171, column: 17, scope: !928)
!1039 = !DILocation(line: 171, column: 13, scope: !930)
!1040 = !DILocation(line: 172, column: 17, scope: !930)
!1041 = !DILocation(line: 172, column: 13, scope: !932)
!1042 = !DILocation(line: 180, column: 21, scope: !932)
!1043 = !DILocation(line: 180, column: 35, scope: !932)
!1044 = !DILocation(line: 181, column: 53, scope: !932)
!1045 = !DILocation(line: 181, column: 21, scope: !932)
!1046 = !DILocalVariable(name: "self", arg: 1, scope: !1047, file: !1015, line: 572, type: !1050)
!1047 = distinct !DISubprogram(name: "as_mut_ptr<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h2ab61e411e2927f1E", scope: !899, file: !1015, line: 572, type: !1048, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !520, declaration: !1051, retainedNodes: !1052)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!516, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<u64>", baseType: !899, size: 64, align: 64, dwarfAddressSpace: 0)
!1051 = !DISubprogram(name: "as_mut_ptr<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h2ab61e411e2927f1E", scope: !899, file: !1015, line: 572, type: !1048, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !520)
!1052 = !{!1046}
!1053 = !DILocation(line: 572, column: 29, scope: !1047, inlinedAt: !1054)
!1054 = distinct !DILocation(line: 184, column: 17, scope: !932)
!1055 = !DILocation(line: 572, column: 29, scope: !1047, inlinedAt: !1056)
!1056 = distinct !DILocation(line: 185, column: 17, scope: !932)
!1057 = !DILocation(line: 174, column: 13, scope: !932)
!1058 = !DILocation(line: 173, column: 9, scope: !932)
!1059 = !DILocation(line: 189, column: 23, scope: !932)
!1060 = !DILocalVariable(name: "self", arg: 1, scope: !1061, file: !1015, line: 627, type: !899)
!1061 = distinct !DISubprogram(name: "assume_init<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hbd60c8675ba25522E", scope: !899, file: !1015, line: 627, type: !1062, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !520, declaration: !1072, retainedNodes: !1073)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!10, !899, !1064}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !1065, size: 64, align: 64, dwarfAddressSpace: 0)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !1066, file: !7, size: 192, align: 64, flags: DIFlagPublic, elements: !1068, templateParams: !12, identifier: "6ab6d19db24f176957abb2edb6f58a8b")
!1066 = !DINamespace(name: "location", scope: !1067)
!1067 = !DINamespace(name: "panic", scope: !38)
!1068 = !{!1069, !1070, !1071}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1065, file: !7, baseType: !338, size: 128, align: 64, flags: DIFlagPrivate)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1065, file: !7, baseType: !284, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1065, file: !7, baseType: !284, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!1072 = !DISubprogram(name: "assume_init<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hbd60c8675ba25522E", scope: !899, file: !1015, line: 627, type: !1062, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !520)
!1073 = !{!1060}
!1074 = !DILocation(line: 627, column: 37, scope: !1061, inlinedAt: !1075)
!1075 = distinct !DILocation(line: 189, column: 23, scope: !932)
!1076 = !DILocation(line: 632, column: 38, scope: !1061, inlinedAt: !1075)
!1077 = !DILocalVariable(name: "slot", arg: 1, scope: !1078, file: !1079, line: 88, type: !905)
!1078 = distinct !DILexicalBlock(scope: !1080, file: !1079, line: 88, column: 5)
!1079 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "db150196ad24cbd302765ce40020defd")
!1080 = distinct !DISubprogram(name: "into_inner<u64>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h5d361c568dc94f62E", scope: !905, file: !1079, line: 88, type: !1081, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !520, declaration: !1083, retainedNodes: !1084)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!10, !905}
!1083 = !DISubprogram(name: "into_inner<u64>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h5d361c568dc94f62E", scope: !905, file: !1079, line: 88, type: !1081, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !520)
!1084 = !{!1077}
!1085 = !DILocation(line: 88, column: 29, scope: !1078, inlinedAt: !1086)
!1086 = distinct !DILocation(line: 632, column: 13, scope: !1061, inlinedAt: !1075)
!1087 = !DILocation(line: 189, column: 9, scope: !932)
!1088 = !DILocation(line: 190, column: 23, scope: !932)
!1089 = !DILocation(line: 627, column: 37, scope: !1061, inlinedAt: !1090)
!1090 = distinct !DILocation(line: 190, column: 23, scope: !932)
!1091 = !DILocation(line: 632, column: 38, scope: !1061, inlinedAt: !1090)
!1092 = !DILocation(line: 88, column: 29, scope: !1078, inlinedAt: !1093)
!1093 = distinct !DILocation(line: 632, column: 13, scope: !1061, inlinedAt: !1090)
!1094 = !DILocation(line: 190, column: 9, scope: !932)
!1095 = !DILocation(line: 191, column: 12, scope: !932)
!1096 = !DILocation(line: 202, column: 19, scope: !932)
!1097 = !DILocation(line: 194, column: 13, scope: !932)
!1098 = !DILocation(line: 195, column: 16, scope: !932)
!1099 = !DILocation(line: 213, column: 23, scope: !916)
!1100 = !DILocation(line: 214, column: 34, scope: !934)
!1101 = !DILocation(line: 216, column: 21, scope: !936)
!1102 = !DILocation(line: 208, column: 36, scope: !932)
!1103 = !DILocation(line: 208, column: 13, scope: !932)
!1104 = !DILocation(line: 202, column: 16, scope: !932)
!1105 = !DILocation(line: 200, column: 17, scope: !932)
!1106 = !DILocation(line: 197, column: 17, scope: !932)
!1107 = !DILocation(line: 195, column: 13, scope: !932)
!1108 = !DILocation(line: 127, column: 13, scope: !918)
!1109 = !DILocation(line: 128, column: 9, scope: !918)
!1110 = !DILocation(line: 129, column: 44, scope: !918)
!1111 = !DILocation(line: 129, column: 17, scope: !918)
!1112 = !DILocation(line: 129, column: 13, scope: !920)
!1113 = !DILocation(line: 130, column: 17, scope: !920)
!1114 = !DILocation(line: 130, column: 13, scope: !922)
!1115 = !DILocation(line: 138, column: 21, scope: !922)
!1116 = !DILocation(line: 138, column: 35, scope: !922)
!1117 = !DILocation(line: 139, column: 57, scope: !922)
!1118 = !DILocation(line: 139, column: 21, scope: !922)
!1119 = !DILocation(line: 572, column: 29, scope: !1047, inlinedAt: !1120)
!1120 = distinct !DILocation(line: 142, column: 17, scope: !922)
!1121 = !DILocation(line: 572, column: 29, scope: !1047, inlinedAt: !1122)
!1122 = distinct !DILocation(line: 143, column: 17, scope: !922)
!1123 = !DILocation(line: 132, column: 13, scope: !922)
!1124 = !DILocation(line: 131, column: 9, scope: !922)
!1125 = !DILocation(line: 147, column: 23, scope: !922)
!1126 = !DILocation(line: 627, column: 37, scope: !1061, inlinedAt: !1127)
!1127 = distinct !DILocation(line: 147, column: 23, scope: !922)
!1128 = !DILocation(line: 632, column: 38, scope: !1061, inlinedAt: !1127)
!1129 = !DILocation(line: 88, column: 29, scope: !1078, inlinedAt: !1130)
!1130 = distinct !DILocation(line: 632, column: 13, scope: !1061, inlinedAt: !1127)
!1131 = !DILocation(line: 147, column: 9, scope: !922)
!1132 = !DILocation(line: 148, column: 23, scope: !922)
!1133 = !DILocation(line: 627, column: 37, scope: !1061, inlinedAt: !1134)
!1134 = distinct !DILocation(line: 148, column: 23, scope: !922)
!1135 = !DILocation(line: 632, column: 38, scope: !1061, inlinedAt: !1134)
!1136 = !DILocation(line: 88, column: 29, scope: !1078, inlinedAt: !1137)
!1137 = distinct !DILocation(line: 632, column: 13, scope: !1061, inlinedAt: !1134)
!1138 = !DILocation(line: 148, column: 9, scope: !922)
!1139 = !DILocation(line: 149, column: 12, scope: !922)
!1140 = !DILocation(line: 153, column: 27, scope: !922)
!1141 = !DILocation(line: 153, column: 70, scope: !922)
!1142 = !DILocalVariable(name: "self", arg: 1, scope: !1143, file: !134, line: 1703, type: !284)
!1143 = distinct !DISubprogram(name: "wrapping_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_mul17h33ffef7da2fed06cE", scope: !1144, file: !134, line: 1703, type: !1145, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1147)
!1144 = !DINamespace(name: "{impl#8}", scope: !65)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!284, !284, !284}
!1147 = !{!1142, !1148}
!1148 = !DILocalVariable(name: "rhs", arg: 2, scope: !1143, file: !134, line: 1703, type: !284)
!1149 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1150)
!1150 = distinct !DILocation(line: 153, column: 52, scope: !922)
!1151 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1150)
!1152 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1150)
!1153 = !DILocalVariable(name: "self", arg: 1, scope: !1154, file: !134, line: 1680, type: !284)
!1154 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h9712c5dac8a12faaE", scope: !1144, file: !134, line: 1680, type: !1145, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1155)
!1155 = !{!1153, !1156}
!1156 = !DILocalVariable(name: "rhs", arg: 2, scope: !1154, file: !134, line: 1680, type: !284)
!1157 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1158)
!1158 = distinct !DILocation(line: 153, column: 27, scope: !922)
!1159 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1158)
!1160 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1158)
!1161 = !DILocation(line: 153, column: 17, scope: !924)
!1162 = !DILocation(line: 154, column: 16, scope: !924)
!1163 = !DILocation(line: 155, column: 40, scope: !924)
!1164 = !DILocation(line: 155, column: 17, scope: !924)
!1165 = !DILocation(line: 154, column: 13, scope: !924)
!1166 = !DILocation(line: 156, column: 23, scope: !924)
!1167 = !DILocation(line: 163, column: 46, scope: !924)
!1168 = !DILocation(line: 160, column: 63, scope: !924)
!1169 = !DILocation(line: 163, column: 23, scope: !924)
!1170 = !DILocation(line: 163, column: 17, scope: !924)
!1171 = !DILocation(line: 156, column: 20, scope: !924)
!1172 = !DILocation(line: 160, column: 72, scope: !924)
!1173 = !DILocation(line: 160, column: 40, scope: !924)
!1174 = !DILocation(line: 160, column: 17, scope: !924)
!1175 = !DILocation(line: 216, column: 45, scope: !936)
!1176 = !DILocation(line: 221, column: 16, scope: !942)
!1177 = !DILocation(line: 219, column: 34, scope: !936)
!1178 = !DILocation(line: 219, column: 28, scope: !936)
!1179 = !DILocation(line: 219, column: 17, scope: !940)
!1180 = !DILocation(line: 220, column: 34, scope: !940)
!1181 = !DILocation(line: 220, column: 28, scope: !940)
!1182 = !DILocation(line: 220, column: 17, scope: !942)
!1183 = !DILocation(line: 262, column: 28, scope: !936)
!1184 = !DILocation(line: 263, column: 32, scope: !960)
!1185 = !DILocation(line: 263, column: 25, scope: !960)
!1186 = !DILocation(line: 263, column: 13, scope: !962)
!1187 = !DILocation(line: 264, column: 32, scope: !962)
!1188 = !DILocation(line: 264, column: 25, scope: !962)
!1189 = !DILocation(line: 264, column: 13, scope: !964)
!1190 = !DILocation(line: 266, column: 12, scope: !964)
!1191 = !DILocation(line: 282, column: 16, scope: !972)
!1192 = !DILocation(line: 280, column: 34, scope: !964)
!1193 = !DILocation(line: 280, column: 28, scope: !964)
!1194 = !DILocation(line: 280, column: 17, scope: !970)
!1195 = !DILocation(line: 281, column: 34, scope: !970)
!1196 = !DILocation(line: 281, column: 28, scope: !970)
!1197 = !DILocation(line: 281, column: 17, scope: !972)
!1198 = !DILocation(line: 267, column: 36, scope: !964)
!1199 = !DILocation(line: 267, column: 29, scope: !964)
!1200 = !DILocation(line: 267, column: 17, scope: !966)
!1201 = !DILocation(line: 268, column: 30, scope: !966)
!1202 = !DILocation(line: 268, column: 29, scope: !966)
!1203 = !DILocation(line: 268, column: 74, scope: !966)
!1204 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1205)
!1205 = distinct !DILocation(line: 268, column: 54, scope: !966)
!1206 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1205)
!1207 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1205)
!1208 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1209)
!1209 = distinct !DILocation(line: 268, column: 29, scope: !966)
!1210 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1209)
!1211 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1209)
!1212 = !DILocation(line: 268, column: 17, scope: !968)
!1213 = !DILocation(line: 269, column: 13, scope: !968)
!1214 = !DILocation(line: 270, column: 13, scope: !968)
!1215 = !DILocation(line: 271, column: 13, scope: !968)
!1216 = !DILocation(line: 272, column: 13, scope: !968)
!1217 = !DILocation(line: 273, column: 13, scope: !968)
!1218 = !DILocation(line: 266, column: 9, scope: !964)
!1219 = !DILocation(line: 285, column: 34, scope: !972)
!1220 = !DILocation(line: 285, column: 28, scope: !972)
!1221 = !DILocation(line: 285, column: 17, scope: !974)
!1222 = !DILocation(line: 286, column: 29, scope: !974)
!1223 = !DILocation(line: 286, column: 28, scope: !974)
!1224 = !DILocation(line: 286, column: 72, scope: !974)
!1225 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1226)
!1226 = distinct !DILocation(line: 286, column: 53, scope: !974)
!1227 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1226)
!1228 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1226)
!1229 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1230)
!1230 = distinct !DILocation(line: 286, column: 28, scope: !974)
!1231 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1230)
!1232 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1230)
!1233 = !DILocation(line: 286, column: 17, scope: !976)
!1234 = !DILocation(line: 287, column: 13, scope: !976)
!1235 = !DILocation(line: 288, column: 13, scope: !976)
!1236 = !DILocation(line: 289, column: 13, scope: !976)
!1237 = !DILocation(line: 290, column: 13, scope: !976)
!1238 = !DILocation(line: 291, column: 13, scope: !976)
!1239 = !DILocation(line: 294, column: 9, scope: !964)
!1240 = !DILocation(line: 294, column: 15, scope: !964)
!1241 = !DILocation(line: 294, column: 21, scope: !964)
!1242 = !DILocation(line: 279, column: 9, scope: !964)
!1243 = !DILocation(line: 294, column: 27, scope: !964)
!1244 = !DILocation(line: 294, column: 14, scope: !964)
!1245 = !DILocation(line: 216, column: 18, scope: !936)
!1246 = !DILocation(line: 296, column: 15, scope: !938)
!1247 = !DILocation(line: 296, column: 21, scope: !938)
!1248 = !DILocation(line: 224, column: 29, scope: !942)
!1249 = !DILocation(line: 224, column: 28, scope: !942)
!1250 = !DILocation(line: 224, column: 72, scope: !942)
!1251 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1252)
!1252 = distinct !DILocation(line: 224, column: 53, scope: !942)
!1253 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1252)
!1254 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1252)
!1255 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1256)
!1256 = distinct !DILocation(line: 224, column: 28, scope: !942)
!1257 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1256)
!1258 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1256)
!1259 = !DILocation(line: 224, column: 17, scope: !944)
!1260 = !DILocation(line: 225, column: 34, scope: !944)
!1261 = !DILocation(line: 225, column: 28, scope: !944)
!1262 = !DILocation(line: 225, column: 17, scope: !946)
!1263 = !DILocation(line: 226, column: 29, scope: !946)
!1264 = !DILocation(line: 226, column: 28, scope: !946)
!1265 = !DILocation(line: 226, column: 72, scope: !946)
!1266 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1267)
!1267 = distinct !DILocation(line: 226, column: 53, scope: !946)
!1268 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1267)
!1269 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1267)
!1270 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1271)
!1271 = distinct !DILocation(line: 226, column: 28, scope: !946)
!1272 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1271)
!1273 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1271)
!1274 = !DILocation(line: 226, column: 17, scope: !948)
!1275 = !DILocation(line: 227, column: 37, scope: !948)
!1276 = !DILocation(line: 227, column: 13, scope: !948)
!1277 = !DILocation(line: 228, column: 37, scope: !948)
!1278 = !DILocation(line: 228, column: 13, scope: !948)
!1279 = !DILocation(line: 229, column: 13, scope: !948)
!1280 = !DILocation(line: 230, column: 13, scope: !948)
!1281 = !DILocation(line: 231, column: 13, scope: !948)
!1282 = !DILocation(line: 232, column: 13, scope: !948)
!1283 = !DILocation(line: 233, column: 13, scope: !948)
!1284 = !DILocation(line: 235, column: 12, scope: !936)
!1285 = !DILocation(line: 239, column: 20, scope: !952)
!1286 = !DILocation(line: 218, column: 9, scope: !936)
!1287 = !DILocation(line: 253, column: 12, scope: !936)
!1288 = !DILocation(line: 237, column: 38, scope: !936)
!1289 = !DILocation(line: 237, column: 32, scope: !936)
!1290 = !DILocation(line: 237, column: 21, scope: !950)
!1291 = !DILocation(line: 238, column: 33, scope: !950)
!1292 = !DILocation(line: 238, column: 32, scope: !950)
!1293 = !DILocation(line: 238, column: 76, scope: !950)
!1294 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1295)
!1295 = distinct !DILocation(line: 238, column: 57, scope: !950)
!1296 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1295)
!1297 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1295)
!1298 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1299)
!1299 = distinct !DILocation(line: 238, column: 32, scope: !950)
!1300 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1299)
!1301 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1299)
!1302 = !DILocation(line: 238, column: 21, scope: !952)
!1303 = !DILocation(line: 242, column: 38, scope: !952)
!1304 = !DILocation(line: 242, column: 32, scope: !952)
!1305 = !DILocation(line: 242, column: 21, scope: !954)
!1306 = !DILocation(line: 243, column: 38, scope: !954)
!1307 = !DILocation(line: 243, column: 32, scope: !954)
!1308 = !DILocation(line: 243, column: 21, scope: !956)
!1309 = !DILocation(line: 244, column: 33, scope: !956)
!1310 = !DILocation(line: 244, column: 32, scope: !956)
!1311 = !DILocation(line: 244, column: 76, scope: !956)
!1312 = !DILocation(line: 1703, column: 35, scope: !1143, inlinedAt: !1313)
!1313 = distinct !DILocation(line: 244, column: 57, scope: !956)
!1314 = !DILocation(line: 1703, column: 41, scope: !1143, inlinedAt: !1313)
!1315 = !DILocation(line: 1704, column: 13, scope: !1143, inlinedAt: !1313)
!1316 = !DILocation(line: 1680, column: 35, scope: !1154, inlinedAt: !1317)
!1317 = distinct !DILocation(line: 244, column: 32, scope: !956)
!1318 = !DILocation(line: 1680, column: 41, scope: !1154, inlinedAt: !1317)
!1319 = !DILocation(line: 1681, column: 13, scope: !1154, inlinedAt: !1317)
!1320 = !DILocation(line: 244, column: 21, scope: !958)
!1321 = !DILocation(line: 245, column: 41, scope: !958)
!1322 = !DILocation(line: 245, column: 17, scope: !958)
!1323 = !DILocation(line: 246, column: 17, scope: !958)
!1324 = !DILocation(line: 247, column: 17, scope: !958)
!1325 = !DILocation(line: 248, column: 17, scope: !958)
!1326 = !DILocation(line: 249, column: 17, scope: !958)
!1327 = !DILocation(line: 250, column: 17, scope: !958)
!1328 = !DILocation(line: 236, column: 13, scope: !936)
!1329 = !DILocation(line: 258, column: 9, scope: !936)
!1330 = !DILocation(line: 258, column: 16, scope: !936)
!1331 = !DILocation(line: 258, column: 22, scope: !936)
!1332 = !DILocation(line: 253, column: 36, scope: !936)
!1333 = !DILocation(line: 253, column: 63, scope: !936)
!1334 = !DILocation(line: 255, column: 13, scope: !936)
!1335 = !DILocation(line: 253, column: 9, scope: !936)
!1336 = !DILocation(line: 258, column: 74, scope: !936)
!1337 = !DILocation(line: 258, column: 14, scope: !936)
!1338 = !DILocation(line: 258, column: 30, scope: !936)
!1339 = !DILocation(line: 258, column: 48, scope: !936)
!1340 = !DILocation(line: 296, column: 9, scope: !978)
!1341 = !DILocation(line: 300, column: 19, scope: !978)
!1342 = !DILocation(line: 298, column: 5, scope: !978)
!1343 = !DILocation(line: 302, column: 2, scope: !870)
!1344 = distinct !DISubprogram(name: "div5", linkageName: "_ZN3ryu14d2s_intrinsics4div517h179931953f2ccfbbE", scope: !1346, file: !1345, line: 24, type: !1347, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1349)
!1345 = !DIFile(filename: "src/d2s_intrinsics.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "76147e36f02120de5aca294a41544604")
!1346 = !DINamespace(name: "d2s_intrinsics", scope: !3)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!10, !10}
!1349 = !{!1350}
!1350 = !DILocalVariable(name: "x", arg: 1, scope: !1344, file: !1345, line: 24, type: !10)
!1351 = !DILocation(line: 24, column: 13, scope: !1344)
!1352 = !DILocation(line: 25, column: 5, scope: !1344)
!1353 = !DILocation(line: 26, column: 2, scope: !1344)
!1354 = distinct !DISubprogram(name: "div10", linkageName: "_ZN3ryu14d2s_intrinsics5div1017h1401381332e69b28E", scope: !1346, file: !1345, line: 29, type: !1347, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1355)
!1355 = !{!1356}
!1356 = !DILocalVariable(name: "x", arg: 1, scope: !1354, file: !1345, line: 29, type: !10)
!1357 = !DILocation(line: 29, column: 14, scope: !1354)
!1358 = !DILocation(line: 30, column: 5, scope: !1354)
!1359 = !DILocation(line: 31, column: 2, scope: !1354)
!1360 = distinct !DISubprogram(name: "div100", linkageName: "_ZN3ryu14d2s_intrinsics6div10017h1a346903025ab7a7E", scope: !1346, file: !1345, line: 34, type: !1347, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1361)
!1361 = !{!1362}
!1362 = !DILocalVariable(name: "x", arg: 1, scope: !1360, file: !1345, line: 34, type: !10)
!1363 = !DILocation(line: 34, column: 15, scope: !1360)
!1364 = !DILocation(line: 35, column: 5, scope: !1360)
!1365 = !DILocation(line: 36, column: 2, scope: !1360)
!1366 = distinct !DISubprogram(name: "pow5_factor", linkageName: "_ZN3ryu14d2s_intrinsics11pow5_factor17h0b76772ac2dac557E", scope: !1346, file: !1345, line: 39, type: !813, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1367)
!1367 = !{!1368, !1369}
!1368 = !DILocalVariable(name: "value", arg: 1, scope: !1366, file: !1345, line: 39, type: !10)
!1369 = !DILocalVariable(name: "count", scope: !1370, file: !1345, line: 42, type: !284, align: 4)
!1370 = distinct !DILexicalBlock(scope: !1366, file: !1345, line: 42, column: 5)
!1371 = !DILocation(line: 39, column: 27, scope: !1366)
!1372 = !DILocation(line: 42, column: 9, scope: !1370)
!1373 = !DILocation(line: 42, column: 21, scope: !1366)
!1374 = !DILocation(line: 43, column: 5, scope: !1370)
!1375 = !DILocation(line: 44, column: 9, scope: !1370)
!1376 = !DILocation(line: 44, column: 23, scope: !1370)
!1377 = !DILocation(line: 45, column: 17, scope: !1370)
!1378 = !DILocalVariable(name: "self", arg: 1, scope: !1379, file: !134, line: 1703, type: !10)
!1379 = distinct !DISubprogram(name: "wrapping_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_mul17h9fca671fa887a264E", scope: !1380, file: !134, line: 1703, type: !1381, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1383)
!1380 = !DINamespace(name: "{impl#9}", scope: !65)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!10, !10, !10}
!1383 = !{!1378, !1384}
!1384 = !DILocalVariable(name: "rhs", arg: 2, scope: !1379, file: !134, line: 1703, type: !10)
!1385 = !DILocation(line: 1703, column: 35, scope: !1379, inlinedAt: !1386)
!1386 = distinct !DILocation(line: 45, column: 17, scope: !1370)
!1387 = !DILocation(line: 1703, column: 41, scope: !1379, inlinedAt: !1386)
!1388 = !DILocation(line: 1704, column: 13, scope: !1379, inlinedAt: !1386)
!1389 = !DILocation(line: 45, column: 9, scope: !1370)
!1390 = !DILocation(line: 46, column: 12, scope: !1370)
!1391 = !DILocation(line: 49, column: 9, scope: !1370)
!1392 = !DILocation(line: 51, column: 5, scope: !1370)
!1393 = !DILocation(line: 52, column: 2, scope: !1366)
!1394 = distinct !DISubprogram(name: "multiple_of_power_of_5", linkageName: "_ZN3ryu14d2s_intrinsics22multiple_of_power_of_517h9cfaf5847184731bE", scope: !1346, file: !1345, line: 56, type: !1395, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1397)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!80, !10, !284}
!1397 = !{!1398, !1399}
!1398 = !DILocalVariable(name: "value", arg: 1, scope: !1394, file: !1345, line: 56, type: !10)
!1399 = !DILocalVariable(name: "p", arg: 2, scope: !1394, file: !1345, line: 56, type: !284)
!1400 = !DILocation(line: 56, column: 31, scope: !1394)
!1401 = !DILocation(line: 56, column: 43, scope: !1394)
!1402 = !DILocation(line: 58, column: 5, scope: !1394)
!1403 = !DILocation(line: 59, column: 2, scope: !1394)
!1404 = distinct !DISubprogram(name: "multiple_of_power_of_2", linkageName: "_ZN3ryu14d2s_intrinsics22multiple_of_power_of_217h7d5f75858e5fd6fcE", scope: !1346, file: !1345, line: 63, type: !1395, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1405)
!1405 = !{!1406, !1407}
!1406 = !DILocalVariable(name: "value", arg: 1, scope: !1404, file: !1345, line: 63, type: !10)
!1407 = !DILocalVariable(name: "p", arg: 2, scope: !1404, file: !1345, line: 63, type: !284)
!1408 = !DILocation(line: 63, column: 31, scope: !1404)
!1409 = !DILocation(line: 63, column: 43, scope: !1404)
!1410 = !DILocation(line: 64, column: 5, scope: !1404)
!1411 = !DILocation(line: 64, column: 19, scope: !1404)
!1412 = !DILocation(line: 65, column: 5, scope: !1404)
!1413 = !DILocation(line: 65, column: 19, scope: !1404)
!1414 = !DILocation(line: 67, column: 15, scope: !1404)
!1415 = !DILocation(line: 67, column: 14, scope: !1404)
!1416 = !DILocation(line: 67, column: 5, scope: !1404)
!1417 = !DILocation(line: 68, column: 2, scope: !1404)
!1418 = distinct !DISubprogram(name: "mul_shift_64", linkageName: "_ZN3ryu14d2s_intrinsics12mul_shift_6417hec29767bd4bdb8aeE", scope: !1346, file: !1345, line: 71, type: !1419, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1421)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!10, !10, !565, !284}
!1421 = !{!1422, !1423, !1424, !1425, !1428}
!1422 = !DILocalVariable(name: "m", arg: 1, scope: !1418, file: !1345, line: 71, type: !10)
!1423 = !DILocalVariable(name: "mul", arg: 2, scope: !1418, file: !1345, line: 71, type: !565)
!1424 = !DILocalVariable(name: "j", arg: 3, scope: !1418, file: !1345, line: 71, type: !284)
!1425 = !DILocalVariable(name: "b0", scope: !1426, file: !1345, line: 72, type: !1427, align: 16)
!1426 = distinct !DILexicalBlock(scope: !1418, file: !1345, line: 72, column: 5)
!1427 = !DIBasicType(name: "u128", size: 128, encoding: DW_ATE_unsigned)
!1428 = !DILocalVariable(name: "b2", scope: !1429, file: !1345, line: 73, type: !1427, align: 16)
!1429 = distinct !DILexicalBlock(scope: !1426, file: !1345, line: 73, column: 5)
!1430 = !DILocation(line: 71, column: 21, scope: !1418)
!1431 = !DILocation(line: 71, column: 29, scope: !1418)
!1432 = !DILocation(line: 71, column: 47, scope: !1418)
!1433 = !DILocation(line: 72, column: 14, scope: !1418)
!1434 = !DILocation(line: 72, column: 26, scope: !1418)
!1435 = !DILocation(line: 72, column: 9, scope: !1426)
!1436 = !DILocation(line: 73, column: 14, scope: !1426)
!1437 = !DILocation(line: 73, column: 26, scope: !1426)
!1438 = !DILocation(line: 73, column: 9, scope: !1429)
!1439 = !DILocation(line: 74, column: 7, scope: !1429)
!1440 = !DILocation(line: 74, column: 6, scope: !1429)
!1441 = !DILocation(line: 74, column: 27, scope: !1429)
!1442 = !DILocation(line: 74, column: 5, scope: !1429)
!1443 = !DILocation(line: 75, column: 2, scope: !1418)
!1444 = distinct !DISubprogram(name: "mul_shift_all_64", linkageName: "_ZN3ryu14d2s_intrinsics16mul_shift_all_6417h635e3362a7e5ddc0E", scope: !1346, file: !1345, line: 78, type: !1445, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1447)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!10, !10, !565, !284, !516, !516, !284}
!1447 = !{!1448, !1449, !1450, !1451, !1452, !1453}
!1448 = !DILocalVariable(name: "m", arg: 1, scope: !1444, file: !1345, line: 79, type: !10)
!1449 = !DILocalVariable(name: "mul", arg: 2, scope: !1444, file: !1345, line: 80, type: !565)
!1450 = !DILocalVariable(name: "j", arg: 3, scope: !1444, file: !1345, line: 81, type: !284)
!1451 = !DILocalVariable(name: "vp", arg: 4, scope: !1444, file: !1345, line: 82, type: !516)
!1452 = !DILocalVariable(name: "vm", arg: 5, scope: !1444, file: !1345, line: 83, type: !516)
!1453 = !DILocalVariable(name: "mm_shift", arg: 6, scope: !1444, file: !1345, line: 84, type: !284)
!1454 = !DILocation(line: 79, column: 5, scope: !1444)
!1455 = !DILocation(line: 80, column: 5, scope: !1444)
!1456 = !DILocation(line: 81, column: 5, scope: !1444)
!1457 = !DILocation(line: 82, column: 5, scope: !1444)
!1458 = !DILocation(line: 83, column: 5, scope: !1444)
!1459 = !DILocation(line: 84, column: 5, scope: !1444)
!1460 = !DILocation(line: 86, column: 33, scope: !1444)
!1461 = !DILocation(line: 86, column: 20, scope: !1444)
!1462 = !DILocation(line: 86, column: 5, scope: !1444)
!1463 = !DILocation(line: 87, column: 33, scope: !1444)
!1464 = !DILocation(line: 87, column: 45, scope: !1444)
!1465 = !DILocation(line: 87, column: 20, scope: !1444)
!1466 = !DILocation(line: 87, column: 5, scope: !1444)
!1467 = !DILocation(line: 88, column: 18, scope: !1444)
!1468 = !DILocation(line: 88, column: 5, scope: !1444)
!1469 = !DILocation(line: 89, column: 2, scope: !1444)
!1470 = distinct !DISubprogram(name: "f2d", linkageName: "_ZN3ryu3f2s3f2d17hc9fc6dfcf037e500E", scope: !1472, file: !1471, line: 40, type: !1473, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1479)
!1471 = !DIFile(filename: "src/f2s.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "787be1d40944025fde082fa89661531e")
!1472 = !DINamespace(name: "f2s", scope: !3)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!1475, !284, !284}
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "FloatingDecimal32", scope: !1472, file: !7, size: 64, align: 32, flags: DIFlagPublic, elements: !1476, templateParams: !12, identifier: "27bea1fba0bcddbd93dff4bc8d2d507f")
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "mantissa", scope: !1475, file: !7, baseType: !284, size: 32, align: 32, flags: DIFlagPublic)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !1475, file: !7, baseType: !776, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1479 = !{!1480, !1481, !1482, !1484, !1485, !1487, !1489, !1491, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1529, !1531}
!1480 = !DILocalVariable(name: "ieee_mantissa", arg: 1, scope: !1470, file: !1471, line: 40, type: !284)
!1481 = !DILocalVariable(name: "ieee_exponent", arg: 2, scope: !1470, file: !1471, line: 40, type: !284)
!1482 = !DILocalVariable(name: "e2", scope: !1483, file: !1471, line: 41, type: !776, align: 4)
!1483 = distinct !DILexicalBlock(scope: !1470, file: !1471, line: 41, column: 5)
!1484 = !DILocalVariable(name: "m2", scope: !1483, file: !1471, line: 41, type: !284, align: 4)
!1485 = !DILocalVariable(name: "even", scope: !1486, file: !1471, line: 53, type: !80, align: 1)
!1486 = distinct !DILexicalBlock(scope: !1483, file: !1471, line: 53, column: 5)
!1487 = !DILocalVariable(name: "accept_bounds", scope: !1488, file: !1471, line: 54, type: !80, align: 1)
!1488 = distinct !DILexicalBlock(scope: !1486, file: !1471, line: 54, column: 5)
!1489 = !DILocalVariable(name: "mv", scope: !1490, file: !1471, line: 57, type: !284, align: 4)
!1490 = distinct !DILexicalBlock(scope: !1488, file: !1471, line: 57, column: 5)
!1491 = !DILocalVariable(name: "mp", scope: !1492, file: !1471, line: 58, type: !284, align: 4)
!1492 = distinct !DILexicalBlock(scope: !1490, file: !1471, line: 58, column: 5)
!1493 = !DILocalVariable(name: "mm_shift", scope: !1494, file: !1471, line: 60, type: !284, align: 4)
!1494 = distinct !DILexicalBlock(scope: !1492, file: !1471, line: 60, column: 5)
!1495 = !DILocalVariable(name: "mm", scope: !1496, file: !1471, line: 61, type: !284, align: 4)
!1496 = distinct !DILexicalBlock(scope: !1494, file: !1471, line: 61, column: 5)
!1497 = !DILocalVariable(name: "vr", scope: !1498, file: !1471, line: 64, type: !284, align: 4)
!1498 = distinct !DILexicalBlock(scope: !1496, file: !1471, line: 64, column: 5)
!1499 = !DILocalVariable(name: "vp", scope: !1500, file: !1471, line: 65, type: !284, align: 4)
!1500 = distinct !DILexicalBlock(scope: !1498, file: !1471, line: 65, column: 5)
!1501 = !DILocalVariable(name: "vm", scope: !1502, file: !1471, line: 66, type: !284, align: 4)
!1502 = distinct !DILexicalBlock(scope: !1500, file: !1471, line: 66, column: 5)
!1503 = !DILocalVariable(name: "e10", scope: !1504, file: !1471, line: 67, type: !776, align: 4)
!1504 = distinct !DILexicalBlock(scope: !1502, file: !1471, line: 67, column: 5)
!1505 = !DILocalVariable(name: "vm_is_trailing_zeros", scope: !1506, file: !1471, line: 68, type: !80, align: 1)
!1506 = distinct !DILexicalBlock(scope: !1504, file: !1471, line: 68, column: 5)
!1507 = !DILocalVariable(name: "vr_is_trailing_zeros", scope: !1508, file: !1471, line: 69, type: !80, align: 1)
!1508 = distinct !DILexicalBlock(scope: !1506, file: !1471, line: 69, column: 5)
!1509 = !DILocalVariable(name: "last_removed_digit", scope: !1510, file: !1471, line: 70, type: !25, align: 1)
!1510 = distinct !DILexicalBlock(scope: !1508, file: !1471, line: 70, column: 5)
!1511 = !DILocalVariable(name: "q", scope: !1512, file: !1471, line: 72, type: !284, align: 4)
!1512 = distinct !DILexicalBlock(scope: !1510, file: !1471, line: 72, column: 9)
!1513 = !DILocalVariable(name: "k", scope: !1514, file: !1471, line: 74, type: !776, align: 4)
!1514 = distinct !DILexicalBlock(scope: !1512, file: !1471, line: 74, column: 9)
!1515 = !DILocalVariable(name: "i", scope: !1516, file: !1471, line: 75, type: !776, align: 4)
!1516 = distinct !DILexicalBlock(scope: !1514, file: !1471, line: 75, column: 9)
!1517 = !DILocalVariable(name: "l", scope: !1518, file: !1471, line: 83, type: !776, align: 4)
!1518 = distinct !DILexicalBlock(scope: !1516, file: !1471, line: 83, column: 13)
!1519 = !DILocalVariable(name: "q", scope: !1520, file: !1471, line: 99, type: !284, align: 4)
!1520 = distinct !DILexicalBlock(scope: !1510, file: !1471, line: 99, column: 9)
!1521 = !DILocalVariable(name: "i", scope: !1522, file: !1471, line: 101, type: !776, align: 4)
!1522 = distinct !DILexicalBlock(scope: !1520, file: !1471, line: 101, column: 9)
!1523 = !DILocalVariable(name: "k", scope: !1524, file: !1471, line: 102, type: !776, align: 4)
!1524 = distinct !DILexicalBlock(scope: !1522, file: !1471, line: 102, column: 9)
!1525 = !DILocalVariable(name: "j", scope: !1526, file: !1471, line: 103, type: !776, align: 4)
!1526 = distinct !DILexicalBlock(scope: !1524, file: !1471, line: 103, column: 9)
!1527 = !DILocalVariable(name: "removed", scope: !1528, file: !1471, line: 129, type: !776, align: 4)
!1528 = distinct !DILexicalBlock(scope: !1510, file: !1471, line: 129, column: 5)
!1529 = !DILocalVariable(name: "output", scope: !1530, file: !1471, line: 130, type: !284, align: 4)
!1530 = distinct !DILexicalBlock(scope: !1528, file: !1471, line: 130, column: 5)
!1531 = !DILocalVariable(name: "exp", scope: !1532, file: !1471, line: 172, type: !776, align: 4)
!1532 = distinct !DILexicalBlock(scope: !1530, file: !1471, line: 172, column: 5)
!1533 = !DILocation(line: 40, column: 12, scope: !1470)
!1534 = !DILocation(line: 40, column: 32, scope: !1470)
!1535 = !DILocation(line: 64, column: 9, scope: !1498)
!1536 = !DILocation(line: 65, column: 9, scope: !1500)
!1537 = !DILocation(line: 66, column: 9, scope: !1502)
!1538 = !DILocation(line: 67, column: 9, scope: !1504)
!1539 = !DILocation(line: 68, column: 9, scope: !1506)
!1540 = !DILocation(line: 69, column: 9, scope: !1508)
!1541 = !DILocation(line: 70, column: 9, scope: !1510)
!1542 = !DILocation(line: 103, column: 13, scope: !1526)
!1543 = !DILocation(line: 129, column: 9, scope: !1528)
!1544 = !DILocation(line: 130, column: 9, scope: !1530)
!1545 = !DILocation(line: 41, column: 23, scope: !1470)
!1546 = !DILocation(line: 44, column: 13, scope: !1470)
!1547 = !DILocation(line: 49, column: 13, scope: !1470)
!1548 = !DILocation(line: 42, column: 9, scope: !1470)
!1549 = !DILocation(line: 41, column: 20, scope: !1470)
!1550 = !DILocation(line: 41, column: 10, scope: !1470)
!1551 = !DILocation(line: 41, column: 10, scope: !1483)
!1552 = !DILocation(line: 41, column: 14, scope: !1470)
!1553 = !DILocation(line: 41, column: 14, scope: !1483)
!1554 = !DILocation(line: 53, column: 16, scope: !1483)
!1555 = !DILocation(line: 53, column: 9, scope: !1486)
!1556 = !DILocation(line: 54, column: 9, scope: !1488)
!1557 = !DILocation(line: 57, column: 14, scope: !1488)
!1558 = !DILocation(line: 50, column: 13, scope: !1470)
!1559 = !DILocation(line: 48, column: 9, scope: !1470)
!1560 = !DILocation(line: 57, column: 9, scope: !1490)
!1561 = !DILocation(line: 58, column: 14, scope: !1490)
!1562 = !DILocation(line: 58, column: 9, scope: !1492)
!1563 = !DILocation(line: 60, column: 21, scope: !1492)
!1564 = !DILocation(line: 60, column: 43, scope: !1492)
!1565 = !DILocation(line: 60, column: 20, scope: !1492)
!1566 = !DILocation(line: 60, column: 9, scope: !1494)
!1567 = !DILocation(line: 61, column: 14, scope: !1494)
!1568 = !DILocation(line: 61, column: 9, scope: !1496)
!1569 = !DILocation(line: 68, column: 36, scope: !1504)
!1570 = !DILocation(line: 69, column: 36, scope: !1506)
!1571 = !DILocation(line: 70, column: 34, scope: !1508)
!1572 = !DILocation(line: 71, column: 8, scope: !1510)
!1573 = !DILocation(line: 99, column: 28, scope: !1510)
!1574 = !DILocation(line: 72, column: 17, scope: !1510)
!1575 = !DILocation(line: 72, column: 13, scope: !1512)
!1576 = !DILocation(line: 73, column: 9, scope: !1512)
!1577 = !DILocation(line: 74, column: 43, scope: !1512)
!1578 = !DILocation(line: 74, column: 17, scope: !1512)
!1579 = !DILocation(line: 99, column: 17, scope: !1510)
!1580 = !DILocation(line: 99, column: 13, scope: !1520)
!1581 = !DILocation(line: 100, column: 15, scope: !1520)
!1582 = !DILocation(line: 100, column: 9, scope: !1520)
!1583 = !DILocation(line: 101, column: 17, scope: !1520)
!1584 = !DILocation(line: 101, column: 13, scope: !1522)
!1585 = !DILocation(line: 102, column: 17, scope: !1522)
!1586 = !DILocation(line: 102, column: 13, scope: !1524)
!1587 = !DILocation(line: 103, column: 21, scope: !1524)
!1588 = !DILocation(line: 104, column: 46, scope: !1526)
!1589 = !DILocation(line: 104, column: 14, scope: !1526)
!1590 = !DILocation(line: 104, column: 9, scope: !1526)
!1591 = !DILocation(line: 105, column: 46, scope: !1526)
!1592 = !DILocation(line: 105, column: 14, scope: !1526)
!1593 = !DILocation(line: 105, column: 9, scope: !1526)
!1594 = !DILocation(line: 106, column: 46, scope: !1526)
!1595 = !DILocation(line: 106, column: 14, scope: !1526)
!1596 = !DILocation(line: 106, column: 9, scope: !1526)
!1597 = !DILocation(line: 107, column: 12, scope: !1526)
!1598 = !DILocation(line: 111, column: 12, scope: !1526)
!1599 = !DILocation(line: 107, column: 23, scope: !1526)
!1600 = !DILocation(line: 107, column: 22, scope: !1526)
!1601 = !DILocation(line: 107, column: 39, scope: !1526)
!1602 = !DILocation(line: 108, column: 17, scope: !1526)
!1603 = !DILocation(line: 108, column: 42, scope: !1526)
!1604 = !DILocation(line: 108, column: 33, scope: !1526)
!1605 = !DILocation(line: 108, column: 32, scope: !1526)
!1606 = !DILocation(line: 108, column: 13, scope: !1526)
!1607 = !DILocation(line: 109, column: 57, scope: !1526)
!1608 = !DILocation(line: 109, column: 73, scope: !1526)
!1609 = !DILocation(line: 109, column: 35, scope: !1526)
!1610 = !DILocation(line: 109, column: 34, scope: !1526)
!1611 = !DILocation(line: 109, column: 13, scope: !1526)
!1612 = !DILocation(line: 107, column: 9, scope: !1526)
!1613 = !DILocation(line: 122, column: 19, scope: !1526)
!1614 = !DILocation(line: 114, column: 13, scope: !1526)
!1615 = !DILocation(line: 115, column: 16, scope: !1526)
!1616 = !DILocation(line: 129, column: 23, scope: !1510)
!1617 = !DILocation(line: 130, column: 21, scope: !1528)
!1618 = !DILocation(line: 124, column: 66, scope: !1526)
!1619 = !DILocation(line: 124, column: 36, scope: !1526)
!1620 = !DILocation(line: 124, column: 13, scope: !1526)
!1621 = !DILocation(line: 122, column: 16, scope: !1526)
!1622 = !DILocation(line: 120, column: 17, scope: !1526)
!1623 = !DILocation(line: 117, column: 17, scope: !1526)
!1624 = !DILocation(line: 115, column: 13, scope: !1526)
!1625 = !DILocation(line: 74, column: 13, scope: !1514)
!1626 = !DILocation(line: 75, column: 17, scope: !1514)
!1627 = !DILocation(line: 75, column: 13, scope: !1516)
!1628 = !DILocation(line: 76, column: 14, scope: !1516)
!1629 = !DILocation(line: 76, column: 9, scope: !1516)
!1630 = !DILocation(line: 77, column: 14, scope: !1516)
!1631 = !DILocation(line: 77, column: 9, scope: !1516)
!1632 = !DILocation(line: 78, column: 14, scope: !1516)
!1633 = !DILocation(line: 78, column: 9, scope: !1516)
!1634 = !DILocation(line: 79, column: 12, scope: !1516)
!1635 = !DILocation(line: 87, column: 12, scope: !1516)
!1636 = !DILocation(line: 79, column: 23, scope: !1516)
!1637 = !DILocation(line: 79, column: 22, scope: !1516)
!1638 = !DILocation(line: 79, column: 39, scope: !1516)
!1639 = !DILocation(line: 83, column: 56, scope: !1516)
!1640 = !DILocation(line: 83, column: 47, scope: !1516)
!1641 = !DILocation(line: 83, column: 21, scope: !1516)
!1642 = !DILocation(line: 83, column: 17, scope: !1518)
!1643 = !DILocation(line: 85, column: 44, scope: !1518)
!1644 = !DILocation(line: 85, column: 51, scope: !1518)
!1645 = !DILocation(line: 85, column: 18, scope: !1518)
!1646 = !DILocation(line: 85, column: 17, scope: !1518)
!1647 = !DILocation(line: 84, column: 13, scope: !1518)
!1648 = !DILocation(line: 79, column: 9, scope: !1516)
!1649 = !DILocation(line: 90, column: 16, scope: !1516)
!1650 = !DILocation(line: 91, column: 40, scope: !1516)
!1651 = !DILocation(line: 91, column: 17, scope: !1516)
!1652 = !DILocation(line: 90, column: 13, scope: !1516)
!1653 = !DILocation(line: 92, column: 23, scope: !1516)
!1654 = !DILocation(line: 95, column: 23, scope: !1516)
!1655 = !DILocation(line: 95, column: 17, scope: !1516)
!1656 = !DILocation(line: 93, column: 40, scope: !1516)
!1657 = !DILocation(line: 93, column: 17, scope: !1516)
!1658 = !DILocation(line: 92, column: 20, scope: !1516)
!1659 = !DILocation(line: 130, column: 45, scope: !1528)
!1660 = !DILocation(line: 162, column: 15, scope: !1528)
!1661 = !DILocation(line: 132, column: 15, scope: !1528)
!1662 = !DILocation(line: 132, column: 25, scope: !1528)
!1663 = !DILocation(line: 162, column: 25, scope: !1528)
!1664 = !DILocation(line: 170, column: 9, scope: !1528)
!1665 = !DILocation(line: 170, column: 15, scope: !1528)
!1666 = !DILocation(line: 170, column: 21, scope: !1528)
!1667 = !DILocation(line: 163, column: 35, scope: !1528)
!1668 = !DILocation(line: 163, column: 34, scope: !1528)
!1669 = !DILocation(line: 163, column: 13, scope: !1528)
!1670 = !DILocation(line: 164, column: 13, scope: !1528)
!1671 = !DILocation(line: 165, column: 13, scope: !1528)
!1672 = !DILocation(line: 166, column: 13, scope: !1528)
!1673 = !DILocation(line: 167, column: 13, scope: !1528)
!1674 = !DILocation(line: 170, column: 27, scope: !1528)
!1675 = !DILocation(line: 170, column: 14, scope: !1528)
!1676 = !DILocation(line: 130, column: 18, scope: !1528)
!1677 = !DILocation(line: 172, column: 15, scope: !1530)
!1678 = !DILocation(line: 172, column: 21, scope: !1530)
!1679 = !DILocation(line: 162, column: 9, scope: !1528)
!1680 = !DILocation(line: 141, column: 12, scope: !1528)
!1681 = !DILocation(line: 142, column: 19, scope: !1528)
!1682 = !DILocation(line: 133, column: 37, scope: !1528)
!1683 = !DILocation(line: 133, column: 43, scope: !1528)
!1684 = !DILocation(line: 133, column: 42, scope: !1528)
!1685 = !DILocation(line: 151, column: 12, scope: !1528)
!1686 = !DILocation(line: 143, column: 41, scope: !1528)
!1687 = !DILocation(line: 143, column: 17, scope: !1528)
!1688 = !DILocation(line: 144, column: 39, scope: !1528)
!1689 = !DILocation(line: 144, column: 38, scope: !1528)
!1690 = !DILocation(line: 144, column: 17, scope: !1528)
!1691 = !DILocation(line: 145, column: 17, scope: !1528)
!1692 = !DILocation(line: 146, column: 17, scope: !1528)
!1693 = !DILocation(line: 147, column: 17, scope: !1528)
!1694 = !DILocation(line: 148, column: 17, scope: !1528)
!1695 = !DILocation(line: 142, column: 13, scope: !1528)
!1696 = !DILocation(line: 156, column: 9, scope: !1528)
!1697 = !DILocation(line: 156, column: 16, scope: !1528)
!1698 = !DILocation(line: 156, column: 22, scope: !1528)
!1699 = !DILocation(line: 151, column: 36, scope: !1528)
!1700 = !DILocation(line: 151, column: 63, scope: !1528)
!1701 = !DILocation(line: 153, column: 13, scope: !1528)
!1702 = !DILocation(line: 151, column: 9, scope: !1528)
!1703 = !DILocation(line: 156, column: 74, scope: !1528)
!1704 = !DILocation(line: 156, column: 14, scope: !1528)
!1705 = !DILocation(line: 156, column: 30, scope: !1528)
!1706 = !DILocation(line: 156, column: 48, scope: !1528)
!1707 = !DILocation(line: 172, column: 9, scope: !1532)
!1708 = !DILocation(line: 176, column: 19, scope: !1532)
!1709 = !DILocation(line: 174, column: 5, scope: !1532)
!1710 = !DILocation(line: 178, column: 2, scope: !1470)
!1711 = !DILocation(line: 133, column: 13, scope: !1528)
!1712 = !DILocation(line: 134, column: 37, scope: !1528)
!1713 = !DILocation(line: 134, column: 13, scope: !1528)
!1714 = !DILocation(line: 135, column: 35, scope: !1528)
!1715 = !DILocation(line: 135, column: 34, scope: !1528)
!1716 = !DILocation(line: 135, column: 13, scope: !1528)
!1717 = !DILocation(line: 136, column: 13, scope: !1528)
!1718 = !DILocation(line: 137, column: 13, scope: !1528)
!1719 = !DILocation(line: 138, column: 13, scope: !1528)
!1720 = !DILocation(line: 139, column: 13, scope: !1528)
!1721 = !DILocation(line: 132, column: 9, scope: !1528)
!1722 = distinct !DISubprogram(name: "pow5factor_32", linkageName: "_ZN3ryu14f2s_intrinsics13pow5factor_3217h2d9b4ed801d8661bE", scope: !1724, file: !1723, line: 27, type: !740, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1725)
!1723 = !DIFile(filename: "src/f2s_intrinsics.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "86c2ed0365bb07e69d20a3e0031daacf")
!1724 = !DINamespace(name: "f2s_intrinsics", scope: !3)
!1725 = !{!1726, !1727, !1729, !1731}
!1726 = !DILocalVariable(name: "value", arg: 1, scope: !1722, file: !1723, line: 27, type: !284)
!1727 = !DILocalVariable(name: "count", scope: !1728, file: !1723, line: 28, type: !284, align: 4)
!1728 = distinct !DILexicalBlock(scope: !1722, file: !1723, line: 28, column: 5)
!1729 = !DILocalVariable(name: "q", scope: !1730, file: !1723, line: 31, type: !284, align: 4)
!1730 = distinct !DILexicalBlock(scope: !1728, file: !1723, line: 31, column: 9)
!1731 = !DILocalVariable(name: "r", scope: !1732, file: !1723, line: 32, type: !284, align: 4)
!1732 = distinct !DILexicalBlock(scope: !1730, file: !1723, line: 32, column: 9)
!1733 = !DILocation(line: 27, column: 18, scope: !1722)
!1734 = !DILocation(line: 28, column: 9, scope: !1728)
!1735 = !DILocation(line: 28, column: 21, scope: !1722)
!1736 = !DILocation(line: 29, column: 5, scope: !1728)
!1737 = !DILocation(line: 30, column: 9, scope: !1728)
!1738 = !DILocation(line: 30, column: 23, scope: !1728)
!1739 = !DILocation(line: 31, column: 17, scope: !1728)
!1740 = !DILocation(line: 31, column: 13, scope: !1730)
!1741 = !DILocation(line: 32, column: 17, scope: !1730)
!1742 = !DILocation(line: 32, column: 13, scope: !1732)
!1743 = !DILocation(line: 33, column: 12, scope: !1732)
!1744 = !DILocation(line: 36, column: 9, scope: !1732)
!1745 = !DILocation(line: 37, column: 9, scope: !1732)
!1746 = !DILocation(line: 39, column: 5, scope: !1728)
!1747 = !DILocation(line: 40, column: 2, scope: !1722)
!1748 = distinct !DISubprogram(name: "multiple_of_power_of_5_32", linkageName: "_ZN3ryu14f2s_intrinsics25multiple_of_power_of_5_3217h3e39fb323830ec33E", scope: !1724, file: !1723, line: 44, type: !1749, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1751)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!80, !284, !284}
!1751 = !{!1752, !1753}
!1752 = !DILocalVariable(name: "value", arg: 1, scope: !1748, file: !1723, line: 44, type: !284)
!1753 = !DILocalVariable(name: "p", arg: 2, scope: !1748, file: !1723, line: 44, type: !284)
!1754 = !DILocation(line: 44, column: 34, scope: !1748)
!1755 = !DILocation(line: 44, column: 46, scope: !1748)
!1756 = !DILocation(line: 45, column: 5, scope: !1748)
!1757 = !DILocation(line: 46, column: 2, scope: !1748)
!1758 = distinct !DISubprogram(name: "multiple_of_power_of_2_32", linkageName: "_ZN3ryu14f2s_intrinsics25multiple_of_power_of_2_3217h50fc3469b5fdb11cE", scope: !1724, file: !1723, line: 50, type: !1749, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1759)
!1759 = !{!1760, !1761}
!1760 = !DILocalVariable(name: "value", arg: 1, scope: !1758, file: !1723, line: 50, type: !284)
!1761 = !DILocalVariable(name: "p", arg: 2, scope: !1758, file: !1723, line: 50, type: !284)
!1762 = !DILocation(line: 50, column: 34, scope: !1758)
!1763 = !DILocation(line: 50, column: 46, scope: !1758)
!1764 = !DILocation(line: 52, column: 15, scope: !1758)
!1765 = !DILocation(line: 52, column: 14, scope: !1758)
!1766 = !DILocation(line: 52, column: 5, scope: !1758)
!1767 = !DILocation(line: 53, column: 2, scope: !1758)
!1768 = distinct !DISubprogram(name: "mul_shift_32", linkageName: "_ZN3ryu14f2s_intrinsics12mul_shift_3217ha04b4c5d9bada906E", scope: !1724, file: !1723, line: 58, type: !1769, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1771)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!284, !284, !10, !776}
!1771 = !{!1772, !1773, !1774, !1775, !1777, !1779, !1781, !1783, !1785}
!1772 = !DILocalVariable(name: "m", arg: 1, scope: !1768, file: !1723, line: 58, type: !284)
!1773 = !DILocalVariable(name: "factor", arg: 2, scope: !1768, file: !1723, line: 58, type: !10)
!1774 = !DILocalVariable(name: "shift", arg: 3, scope: !1768, file: !1723, line: 58, type: !776)
!1775 = !DILocalVariable(name: "factor_lo", scope: !1776, file: !1723, line: 63, type: !284, align: 4)
!1776 = distinct !DILexicalBlock(scope: !1768, file: !1723, line: 63, column: 5)
!1777 = !DILocalVariable(name: "factor_hi", scope: !1778, file: !1723, line: 64, type: !284, align: 4)
!1778 = distinct !DILexicalBlock(scope: !1776, file: !1723, line: 64, column: 5)
!1779 = !DILocalVariable(name: "bits0", scope: !1780, file: !1723, line: 65, type: !10, align: 8)
!1780 = distinct !DILexicalBlock(scope: !1778, file: !1723, line: 65, column: 5)
!1781 = !DILocalVariable(name: "bits1", scope: !1782, file: !1723, line: 66, type: !10, align: 8)
!1782 = distinct !DILexicalBlock(scope: !1780, file: !1723, line: 66, column: 5)
!1783 = !DILocalVariable(name: "sum", scope: !1784, file: !1723, line: 68, type: !10, align: 8)
!1784 = distinct !DILexicalBlock(scope: !1782, file: !1723, line: 68, column: 5)
!1785 = !DILocalVariable(name: "shifted_sum", scope: !1786, file: !1723, line: 69, type: !10, align: 8)
!1786 = distinct !DILexicalBlock(scope: !1784, file: !1723, line: 69, column: 5)
!1787 = !DILocation(line: 58, column: 17, scope: !1768)
!1788 = !DILocation(line: 58, column: 25, scope: !1768)
!1789 = !DILocation(line: 58, column: 38, scope: !1768)
!1790 = !DILocation(line: 59, column: 5, scope: !1768)
!1791 = !DILocation(line: 59, column: 19, scope: !1768)
!1792 = !DILocation(line: 63, column: 21, scope: !1768)
!1793 = !DILocation(line: 63, column: 9, scope: !1776)
!1794 = !DILocation(line: 64, column: 21, scope: !1776)
!1795 = !DILocation(line: 64, column: 9, scope: !1778)
!1796 = !DILocation(line: 65, column: 17, scope: !1778)
!1797 = !DILocation(line: 65, column: 28, scope: !1778)
!1798 = !DILocation(line: 65, column: 9, scope: !1780)
!1799 = !DILocation(line: 66, column: 17, scope: !1780)
!1800 = !DILocation(line: 66, column: 28, scope: !1780)
!1801 = !DILocation(line: 66, column: 9, scope: !1782)
!1802 = !DILocation(line: 68, column: 15, scope: !1782)
!1803 = !DILocation(line: 68, column: 9, scope: !1784)
!1804 = !DILocation(line: 69, column: 30, scope: !1784)
!1805 = !DILocation(line: 69, column: 23, scope: !1784)
!1806 = !DILocation(line: 69, column: 9, scope: !1786)
!1807 = !DILocation(line: 70, column: 5, scope: !1786)
!1808 = !DILocation(line: 70, column: 34, scope: !1786)
!1809 = !DILocation(line: 70, column: 19, scope: !1786)
!1810 = !DILocation(line: 71, column: 5, scope: !1786)
!1811 = !DILocation(line: 72, column: 2, scope: !1768)
!1812 = distinct !DISubprogram(name: "mul_pow5_inv_div_pow2", linkageName: "_ZN3ryu14f2s_intrinsics21mul_pow5_inv_div_pow217hde092d4f4d9d9454E", scope: !1724, file: !1723, line: 75, type: !1813, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1815)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!284, !284, !284, !776}
!1815 = !{!1816, !1817, !1818}
!1816 = !DILocalVariable(name: "m", arg: 1, scope: !1812, file: !1723, line: 75, type: !284)
!1817 = !DILocalVariable(name: "q", arg: 2, scope: !1812, file: !1723, line: 75, type: !284)
!1818 = !DILocalVariable(name: "j", arg: 3, scope: !1812, file: !1723, line: 75, type: !776)
!1819 = !DILocation(line: 75, column: 30, scope: !1812)
!1820 = !DILocation(line: 75, column: 38, scope: !1812)
!1821 = !DILocation(line: 75, column: 46, scope: !1812)
!1822 = !DILocation(line: 89, column: 9, scope: !1812)
!1823 = !DILocation(line: 89, column: 23, scope: !1812)
!1824 = !DILocation(line: 93, column: 58, scope: !1812)
!1825 = !DILocation(line: 93, column: 17, scope: !1812)
!1826 = !DILocation(line: 91, column: 13, scope: !1812)
!1827 = !DILocation(line: 98, column: 2, scope: !1812)
!1828 = distinct !DISubprogram(name: "mul_pow5_div_pow2", linkageName: "_ZN3ryu14f2s_intrinsics17mul_pow5_div_pow217h717fe142e7b0e852E", scope: !1724, file: !1723, line: 101, type: !1813, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1829)
!1829 = !{!1830, !1831, !1832}
!1830 = !DILocalVariable(name: "m", arg: 1, scope: !1828, file: !1723, line: 101, type: !284)
!1831 = !DILocalVariable(name: "i", arg: 2, scope: !1828, file: !1723, line: 101, type: !284)
!1832 = !DILocalVariable(name: "j", arg: 3, scope: !1828, file: !1723, line: 101, type: !776)
!1833 = !DILocation(line: 101, column: 26, scope: !1828)
!1834 = !DILocation(line: 101, column: 34, scope: !1828)
!1835 = !DILocation(line: 101, column: 42, scope: !1828)
!1836 = !DILocation(line: 110, column: 9, scope: !1828)
!1837 = !DILocation(line: 110, column: 23, scope: !1828)
!1838 = !DILocation(line: 111, column: 71, scope: !1828)
!1839 = !DILocation(line: 111, column: 34, scope: !1828)
!1840 = !DILocation(line: 111, column: 18, scope: !1828)
!1841 = !DILocation(line: 113, column: 2, scope: !1828)
!1842 = distinct !DISubprogram(name: "write_exponent3", linkageName: "_ZN3ryu6pretty8exponent15write_exponent317h0c554d8ce0ef1884E", scope: !1844, file: !1843, line: 5, type: !1846, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1849)
!1843 = !DIFile(filename: "src/pretty/exponent.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "a296c5be0abb5fbe557d15095b9c2c04")
!1844 = !DINamespace(name: "exponent", scope: !1845)
!1845 = !DINamespace(name: "pretty", scope: !3)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!53, !52, !1848}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !25, size: 64, align: 64, dwarfAddressSpace: 0)
!1849 = !{!1850, !1851, !1852, !1854, !1856}
!1850 = !DILocalVariable(name: "k", arg: 1, scope: !1842, file: !1843, line: 5, type: !52)
!1851 = !DILocalVariable(name: "result", arg: 2, scope: !1842, file: !1843, line: 5, type: !1848)
!1852 = !DILocalVariable(name: "sign", scope: !1853, file: !1843, line: 6, type: !80, align: 1)
!1853 = distinct !DILexicalBlock(scope: !1842, file: !1843, line: 6, column: 5)
!1854 = !DILocalVariable(name: "d", scope: !1855, file: !1843, line: 17, type: !296, align: 8)
!1855 = distinct !DILexicalBlock(scope: !1853, file: !1843, line: 17, column: 9)
!1856 = !DILocalVariable(name: "d", scope: !1857, file: !1843, line: 21, type: !296, align: 8)
!1857 = distinct !DILexicalBlock(scope: !1853, file: !1843, line: 21, column: 9)
!1858 = !DILocation(line: 5, column: 31, scope: !1842)
!1859 = !DILocation(line: 5, column: 45, scope: !1842)
!1860 = !DILocation(line: 6, column: 16, scope: !1842)
!1861 = !DILocation(line: 6, column: 9, scope: !1853)
!1862 = !DILocation(line: 7, column: 8, scope: !1853)
!1863 = !DILocation(line: 13, column: 5, scope: !1853)
!1864 = !DILocation(line: 8, column: 9, scope: !1853)
!1865 = !DILocation(line: 9, column: 18, scope: !1853)
!1866 = !DILocalVariable(name: "self", arg: 1, scope: !1867, file: !1868, line: 481, type: !1848)
!1867 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hcd82f9745fc648e3E", scope: !1869, file: !1868, line: 481, type: !1871, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !1873)
!1868 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1660eb21212d739b6367ea84c0f4f627")
!1869 = !DINamespace(name: "{impl#0}", scope: !1870)
!1870 = !DINamespace(name: "mut_ptr", scope: !103)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!1848, !1848, !52}
!1873 = !{!1866, !1874}
!1874 = !DILocalVariable(name: "count", arg: 2, scope: !1867, file: !1868, line: 481, type: !52)
!1875 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !1876)
!1876 = distinct !DILocation(line: 9, column: 18, scope: !1853)
!1877 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !1876)
!1878 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !1876)
!1879 = !DILocation(line: 9, column: 9, scope: !1853)
!1880 = !DILocation(line: 10, column: 14, scope: !1853)
!1881 = !DILocation(line: 10, column: 13, scope: !1853)
!1882 = !DILocation(line: 10, column: 9, scope: !1853)
!1883 = !DILocation(line: 7, column: 5, scope: !1853)
!1884 = !DILocation(line: 13, column: 19, scope: !1853)
!1885 = !DILocation(line: 14, column: 8, scope: !1853)
!1886 = !DILocation(line: 20, column: 15, scope: !1853)
!1887 = !DILocation(line: 15, column: 27, scope: !1853)
!1888 = !DILocation(line: 15, column: 26, scope: !1853)
!1889 = !DILocation(line: 25, column: 26, scope: !1853)
!1890 = !DILocation(line: 25, column: 19, scope: !1853)
!1891 = !DILocalVariable(name: "self", arg: 1, scope: !1892, file: !560, line: 762, type: !1895)
!1892 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h9ae1b761cc193f9eE", scope: !561, file: !560, line: 762, type: !1893, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !1899)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!296, !1895}
!1895 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !7, size: 128, align: 64, elements: !1896, templateParams: !12, identifier: "4f7d759e2003ffb713a77bd933fd0146")
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1895, file: !7, baseType: !341, size: 64, align: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1895, file: !7, baseType: !53, size: 64, align: 64, offset: 64)
!1899 = !{!1891}
!1900 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !1901)
!1901 = distinct !DILocation(line: 21, column: 17, scope: !1853)
!1902 = !DILocation(line: 21, column: 45, scope: !1853)
!1903 = !DILocation(line: 25, column: 9, scope: !1853)
!1904 = !DILocation(line: 26, column: 9, scope: !1853)
!1905 = !DILocation(line: 20, column: 12, scope: !1853)
!1906 = !DILocation(line: 28, column: 2, scope: !1842)
!1907 = !DILocalVariable(name: "self", arg: 1, scope: !1908, file: !99, line: 467, type: !296)
!1908 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7d91daa2fd7b055eE", scope: !101, file: !99, line: 467, type: !1909, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !1911)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!296, !296, !52}
!1911 = !{!1907, !1912}
!1912 = !DILocalVariable(name: "count", arg: 2, scope: !1908, file: !99, line: 467, type: !52)
!1913 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !1914)
!1914 = distinct !DILocation(line: 21, column: 17, scope: !1853)
!1915 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !1914)
!1916 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !1914)
!1917 = !DILocation(line: 21, column: 17, scope: !1853)
!1918 = !DILocation(line: 21, column: 13, scope: !1857)
!1919 = !DILocation(line: 22, column: 37, scope: !1857)
!1920 = !DILocalVariable(name: "src", arg: 1, scope: !1921, file: !76, line: 2902, type: !296)
!1921 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h9858e947d70b82b1E", scope: !77, file: !76, line: 2902, type: !1922, scopeLine: 2902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !1924)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{null, !296, !1848, !53}
!1924 = !{!1920, !1925, !1926}
!1925 = !DILocalVariable(name: "dst", arg: 2, scope: !1921, file: !76, line: 2902, type: !1848)
!1926 = !DILocalVariable(name: "count", arg: 3, scope: !1921, file: !76, line: 2902, type: !53)
!1927 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !1928)
!1928 = distinct !DILocation(line: 22, column: 9, scope: !1857)
!1929 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !1928)
!1930 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !1928)
!1931 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !1928)
!1932 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !1928)
!1933 = !DILocation(line: 23, column: 9, scope: !1857)
!1934 = !DILocation(line: 15, column: 19, scope: !1853)
!1935 = !DILocation(line: 15, column: 9, scope: !1853)
!1936 = !DILocation(line: 16, column: 9, scope: !1853)
!1937 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !1938)
!1938 = distinct !DILocation(line: 17, column: 17, scope: !1853)
!1939 = !DILocation(line: 17, column: 45, scope: !1853)
!1940 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !1941)
!1941 = distinct !DILocation(line: 17, column: 17, scope: !1853)
!1942 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !1941)
!1943 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !1941)
!1944 = !DILocation(line: 17, column: 17, scope: !1853)
!1945 = !DILocation(line: 17, column: 13, scope: !1855)
!1946 = !DILocation(line: 18, column: 37, scope: !1855)
!1947 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !1948)
!1948 = distinct !DILocation(line: 18, column: 37, scope: !1855)
!1949 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !1948)
!1950 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !1948)
!1951 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !1952)
!1952 = distinct !DILocation(line: 18, column: 9, scope: !1855)
!1953 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !1952)
!1954 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !1952)
!1955 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !1952)
!1956 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !1952)
!1957 = !DILocation(line: 19, column: 9, scope: !1855)
!1958 = !DILocation(line: 14, column: 5, scope: !1853)
!1959 = distinct !DISubprogram(name: "write_exponent2", linkageName: "_ZN3ryu6pretty8exponent15write_exponent217h573026d0e452213dE", scope: !1844, file: !1843, line: 31, type: !1846, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !1960)
!1960 = !{!1961, !1962, !1963, !1965}
!1961 = !DILocalVariable(name: "k", arg: 1, scope: !1959, file: !1843, line: 31, type: !52)
!1962 = !DILocalVariable(name: "result", arg: 2, scope: !1959, file: !1843, line: 31, type: !1848)
!1963 = !DILocalVariable(name: "sign", scope: !1964, file: !1843, line: 32, type: !80, align: 1)
!1964 = distinct !DILexicalBlock(scope: !1959, file: !1843, line: 32, column: 5)
!1965 = !DILocalVariable(name: "d", scope: !1966, file: !1843, line: 41, type: !296, align: 8)
!1966 = distinct !DILexicalBlock(scope: !1964, file: !1843, line: 41, column: 9)
!1967 = !DILocation(line: 31, column: 31, scope: !1959)
!1968 = !DILocation(line: 31, column: 45, scope: !1959)
!1969 = !DILocation(line: 32, column: 16, scope: !1959)
!1970 = !DILocation(line: 32, column: 9, scope: !1964)
!1971 = !DILocation(line: 33, column: 8, scope: !1964)
!1972 = !DILocation(line: 39, column: 5, scope: !1964)
!1973 = !DILocation(line: 34, column: 9, scope: !1964)
!1974 = !DILocation(line: 35, column: 18, scope: !1964)
!1975 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !1976)
!1976 = distinct !DILocation(line: 35, column: 18, scope: !1964)
!1977 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !1976)
!1978 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !1976)
!1979 = !DILocation(line: 35, column: 9, scope: !1964)
!1980 = !DILocation(line: 36, column: 14, scope: !1964)
!1981 = !DILocation(line: 36, column: 13, scope: !1964)
!1982 = !DILocation(line: 36, column: 9, scope: !1964)
!1983 = !DILocation(line: 33, column: 5, scope: !1964)
!1984 = !DILocation(line: 39, column: 19, scope: !1964)
!1985 = !DILocation(line: 40, column: 8, scope: !1964)
!1986 = !DILocation(line: 45, column: 26, scope: !1964)
!1987 = !DILocation(line: 45, column: 19, scope: !1964)
!1988 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !1989)
!1989 = distinct !DILocation(line: 41, column: 17, scope: !1964)
!1990 = !DILocation(line: 41, column: 45, scope: !1964)
!1991 = !DILocation(line: 45, column: 9, scope: !1964)
!1992 = !DILocation(line: 46, column: 9, scope: !1964)
!1993 = !DILocation(line: 40, column: 5, scope: !1964)
!1994 = !DILocation(line: 48, column: 2, scope: !1959)
!1995 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !1996)
!1996 = distinct !DILocation(line: 41, column: 17, scope: !1964)
!1997 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !1996)
!1998 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !1996)
!1999 = !DILocation(line: 41, column: 17, scope: !1964)
!2000 = !DILocation(line: 41, column: 13, scope: !1966)
!2001 = !DILocation(line: 42, column: 37, scope: !1966)
!2002 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2003)
!2003 = distinct !DILocation(line: 42, column: 9, scope: !1966)
!2004 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2003)
!2005 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2003)
!2006 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2003)
!2007 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2003)
!2008 = !DILocation(line: 43, column: 9, scope: !1966)
!2009 = distinct !DISubprogram(name: "write_mantissa_long", linkageName: "_ZN3ryu6pretty8mantissa19write_mantissa_long17h645fe27c1f9dbae4E", scope: !2011, file: !2010, line: 5, type: !2012, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !2014)
!2010 = !DIFile(filename: "src/pretty/mantissa.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "9ee514d04a936a9fa4787abe4768c5df")
!2011 = !DINamespace(name: "mantissa", scope: !1845)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{null, !10, !1848}
!2014 = !{!2015, !2016, !2017, !2019, !2021, !2023, !2025, !2027, !2029}
!2015 = !DILocalVariable(name: "output", arg: 1, scope: !2009, file: !2010, line: 5, type: !10)
!2016 = !DILocalVariable(name: "result", arg: 2, scope: !2009, file: !2010, line: 5, type: !1848)
!2017 = !DILocalVariable(name: "output2", scope: !2018, file: !2010, line: 8, type: !284, align: 4)
!2018 = distinct !DILexicalBlock(scope: !2009, file: !2010, line: 8, column: 9)
!2019 = !DILocalVariable(name: "c", scope: !2020, file: !2010, line: 11, type: !284, align: 4)
!2020 = distinct !DILexicalBlock(scope: !2018, file: !2010, line: 11, column: 9)
!2021 = !DILocalVariable(name: "d", scope: !2022, file: !2010, line: 13, type: !284, align: 4)
!2022 = distinct !DILexicalBlock(scope: !2020, file: !2010, line: 13, column: 9)
!2023 = !DILocalVariable(name: "c0", scope: !2024, file: !2010, line: 14, type: !284, align: 4)
!2024 = distinct !DILexicalBlock(scope: !2022, file: !2010, line: 14, column: 9)
!2025 = !DILocalVariable(name: "c1", scope: !2026, file: !2010, line: 15, type: !284, align: 4)
!2026 = distinct !DILexicalBlock(scope: !2024, file: !2010, line: 15, column: 9)
!2027 = !DILocalVariable(name: "d0", scope: !2028, file: !2010, line: 16, type: !284, align: 4)
!2028 = distinct !DILexicalBlock(scope: !2026, file: !2010, line: 16, column: 9)
!2029 = !DILocalVariable(name: "d1", scope: !2030, file: !2010, line: 17, type: !284, align: 4)
!2030 = distinct !DILexicalBlock(scope: !2028, file: !2010, line: 17, column: 9)
!2031 = !DILocation(line: 5, column: 35, scope: !2009)
!2032 = !DILocation(line: 5, column: 52, scope: !2009)
!2033 = !DILocation(line: 8, column: 13, scope: !2018)
!2034 = !DILocation(line: 6, column: 9, scope: !2009)
!2035 = !DILocation(line: 6, column: 8, scope: !2009)
!2036 = !DILocation(line: 40, column: 20, scope: !2009)
!2037 = !DILocation(line: 40, column: 35, scope: !2009)
!2038 = !DILocation(line: 40, column: 5, scope: !2009)
!2039 = !DILocation(line: 41, column: 2, scope: !2009)
!2040 = !DILocation(line: 8, column: 28, scope: !2009)
!2041 = !DILocation(line: 8, column: 52, scope: !2009)
!2042 = !DILocation(line: 8, column: 51, scope: !2009)
!2043 = !DILocation(line: 8, column: 37, scope: !2009)
!2044 = !DILocation(line: 8, column: 27, scope: !2009)
!2045 = !DILocation(line: 9, column: 9, scope: !2018)
!2046 = !DILocation(line: 11, column: 17, scope: !2018)
!2047 = !DILocation(line: 11, column: 13, scope: !2020)
!2048 = !DILocation(line: 12, column: 9, scope: !2020)
!2049 = !DILocation(line: 13, column: 17, scope: !2020)
!2050 = !DILocation(line: 13, column: 13, scope: !2022)
!2051 = !DILocation(line: 14, column: 18, scope: !2022)
!2052 = !DILocation(line: 14, column: 13, scope: !2024)
!2053 = !DILocation(line: 15, column: 18, scope: !2024)
!2054 = !DILocation(line: 15, column: 13, scope: !2026)
!2055 = !DILocation(line: 16, column: 18, scope: !2026)
!2056 = !DILocation(line: 16, column: 13, scope: !2028)
!2057 = !DILocation(line: 17, column: 18, scope: !2028)
!2058 = !DILocation(line: 17, column: 13, scope: !2030)
!2059 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2060)
!2060 = distinct !DILocation(line: 19, column: 13, scope: !2030)
!2061 = !DILocation(line: 19, column: 41, scope: !2030)
!2062 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2063)
!2063 = distinct !DILocation(line: 19, column: 13, scope: !2030)
!2064 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2063)
!2065 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2063)
!2066 = !DILocation(line: 20, column: 13, scope: !2030)
!2067 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2068)
!2068 = distinct !DILocation(line: 20, column: 13, scope: !2030)
!2069 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2068)
!2070 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2068)
!2071 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2072)
!2072 = distinct !DILocation(line: 18, column: 9, scope: !2030)
!2073 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2072)
!2074 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2072)
!2075 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2072)
!2076 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2072)
!2077 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2078)
!2078 = distinct !DILocation(line: 24, column: 13, scope: !2030)
!2079 = !DILocation(line: 24, column: 41, scope: !2030)
!2080 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2081)
!2081 = distinct !DILocation(line: 24, column: 13, scope: !2030)
!2082 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2081)
!2083 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2081)
!2084 = !DILocation(line: 25, column: 13, scope: !2030)
!2085 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2086)
!2086 = distinct !DILocation(line: 25, column: 13, scope: !2030)
!2087 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2086)
!2088 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2086)
!2089 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2090)
!2090 = distinct !DILocation(line: 23, column: 9, scope: !2030)
!2091 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2090)
!2092 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2090)
!2093 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2090)
!2094 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2090)
!2095 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2096)
!2096 = distinct !DILocation(line: 29, column: 13, scope: !2030)
!2097 = !DILocation(line: 29, column: 41, scope: !2030)
!2098 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2099)
!2099 = distinct !DILocation(line: 29, column: 13, scope: !2030)
!2100 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2099)
!2101 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2099)
!2102 = !DILocation(line: 30, column: 13, scope: !2030)
!2103 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2104)
!2104 = distinct !DILocation(line: 30, column: 13, scope: !2030)
!2105 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2104)
!2106 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2104)
!2107 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2108)
!2108 = distinct !DILocation(line: 28, column: 9, scope: !2030)
!2109 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2108)
!2110 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2108)
!2111 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2108)
!2112 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2108)
!2113 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2114)
!2114 = distinct !DILocation(line: 34, column: 13, scope: !2030)
!2115 = !DILocation(line: 34, column: 41, scope: !2030)
!2116 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2117)
!2117 = distinct !DILocation(line: 34, column: 13, scope: !2030)
!2118 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2117)
!2119 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2117)
!2120 = !DILocation(line: 35, column: 13, scope: !2030)
!2121 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2122)
!2122 = distinct !DILocation(line: 35, column: 13, scope: !2030)
!2123 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2122)
!2124 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2122)
!2125 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 33, column: 9, scope: !2030)
!2127 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2126)
!2128 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2126)
!2129 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2126)
!2130 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2126)
!2131 = !DILocation(line: 38, column: 18, scope: !2030)
!2132 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2133)
!2133 = distinct !DILocation(line: 38, column: 18, scope: !2030)
!2134 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2133)
!2135 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2133)
!2136 = !DILocation(line: 38, column: 9, scope: !2030)
!2137 = !DILocation(line: 6, column: 5, scope: !2009)
!2138 = distinct !DISubprogram(name: "write_mantissa", linkageName: "_ZN3ryu6pretty8mantissa14write_mantissa17hfe8d73c9b7e517b6E", scope: !2011, file: !2010, line: 44, type: !2139, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !2141)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !284, !1848}
!2141 = !{!2142, !2143, !2144, !2146, !2148, !2150, !2152}
!2142 = !DILocalVariable(name: "output", arg: 1, scope: !2138, file: !2010, line: 44, type: !284)
!2143 = !DILocalVariable(name: "result", arg: 2, scope: !2138, file: !2010, line: 44, type: !1848)
!2144 = !DILocalVariable(name: "c", scope: !2145, file: !2010, line: 46, type: !284, align: 4)
!2145 = distinct !DILexicalBlock(scope: !2138, file: !2010, line: 46, column: 9)
!2146 = !DILocalVariable(name: "c0", scope: !2147, file: !2010, line: 48, type: !284, align: 4)
!2147 = distinct !DILexicalBlock(scope: !2145, file: !2010, line: 48, column: 9)
!2148 = !DILocalVariable(name: "c1", scope: !2149, file: !2010, line: 49, type: !284, align: 4)
!2149 = distinct !DILexicalBlock(scope: !2147, file: !2010, line: 49, column: 9)
!2150 = !DILocalVariable(name: "c", scope: !2151, file: !2010, line: 63, type: !284, align: 4)
!2151 = distinct !DILexicalBlock(scope: !2138, file: !2010, line: 63, column: 9)
!2152 = !DILocalVariable(name: "c", scope: !2153, file: !2010, line: 73, type: !284, align: 4)
!2153 = distinct !DILexicalBlock(scope: !2138, file: !2010, line: 73, column: 9)
!2154 = !DILocation(line: 44, column: 30, scope: !2138)
!2155 = !DILocation(line: 44, column: 47, scope: !2138)
!2156 = !DILocation(line: 45, column: 5, scope: !2138)
!2157 = !DILocation(line: 45, column: 11, scope: !2138)
!2158 = !DILocation(line: 62, column: 8, scope: !2138)
!2159 = !DILocation(line: 46, column: 17, scope: !2138)
!2160 = !DILocation(line: 46, column: 36, scope: !2138)
!2161 = !DILocation(line: 46, column: 35, scope: !2138)
!2162 = !DILocation(line: 46, column: 26, scope: !2138)
!2163 = !DILocation(line: 72, column: 8, scope: !2138)
!2164 = !DILocation(line: 63, column: 18, scope: !2138)
!2165 = !DILocation(line: 63, column: 17, scope: !2138)
!2166 = !DILocation(line: 63, column: 13, scope: !2151)
!2167 = !DILocation(line: 64, column: 9, scope: !2151)
!2168 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2169)
!2169 = distinct !DILocation(line: 66, column: 13, scope: !2151)
!2170 = !DILocation(line: 66, column: 41, scope: !2151)
!2171 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2172)
!2172 = distinct !DILocation(line: 66, column: 13, scope: !2151)
!2173 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2172)
!2174 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2172)
!2175 = !DILocation(line: 67, column: 13, scope: !2151)
!2176 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2177)
!2177 = distinct !DILocation(line: 67, column: 13, scope: !2151)
!2178 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2177)
!2179 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2177)
!2180 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2181)
!2181 = distinct !DILocation(line: 65, column: 9, scope: !2151)
!2182 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2181)
!2183 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2181)
!2184 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2181)
!2185 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2181)
!2186 = !DILocation(line: 70, column: 18, scope: !2151)
!2187 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2188)
!2188 = distinct !DILocation(line: 70, column: 18, scope: !2151)
!2189 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2188)
!2190 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2188)
!2191 = !DILocation(line: 70, column: 9, scope: !2151)
!2192 = !DILocation(line: 62, column: 5, scope: !2138)
!2193 = !DILocation(line: 80, column: 37, scope: !2138)
!2194 = !DILocation(line: 80, column: 30, scope: !2138)
!2195 = !DILocation(line: 73, column: 17, scope: !2138)
!2196 = !DILocation(line: 73, column: 13, scope: !2153)
!2197 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2198)
!2198 = distinct !DILocation(line: 75, column: 13, scope: !2153)
!2199 = !DILocation(line: 75, column: 41, scope: !2153)
!2200 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2201)
!2201 = distinct !DILocation(line: 75, column: 13, scope: !2153)
!2202 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2201)
!2203 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2201)
!2204 = !DILocation(line: 76, column: 13, scope: !2153)
!2205 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2206)
!2206 = distinct !DILocation(line: 76, column: 13, scope: !2153)
!2207 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2206)
!2208 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2206)
!2209 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2210)
!2210 = distinct !DILocation(line: 74, column: 9, scope: !2153)
!2211 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2210)
!2212 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2210)
!2213 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2210)
!2214 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2210)
!2215 = !DILocation(line: 74, column: 9, scope: !2153)
!2216 = !DILocation(line: 80, column: 10, scope: !2138)
!2217 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2218)
!2218 = distinct !DILocation(line: 80, column: 10, scope: !2138)
!2219 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2218)
!2220 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2218)
!2221 = !DILocation(line: 80, column: 9, scope: !2138)
!2222 = !DILocation(line: 72, column: 5, scope: !2138)
!2223 = !DILocation(line: 82, column: 2, scope: !2138)
!2224 = !DILocation(line: 46, column: 13, scope: !2145)
!2225 = !DILocation(line: 47, column: 9, scope: !2145)
!2226 = !DILocation(line: 48, column: 18, scope: !2145)
!2227 = !DILocation(line: 48, column: 13, scope: !2147)
!2228 = !DILocation(line: 49, column: 18, scope: !2147)
!2229 = !DILocation(line: 49, column: 13, scope: !2149)
!2230 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2231)
!2231 = distinct !DILocation(line: 51, column: 13, scope: !2149)
!2232 = !DILocation(line: 51, column: 41, scope: !2149)
!2233 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2234)
!2234 = distinct !DILocation(line: 51, column: 13, scope: !2149)
!2235 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2234)
!2236 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2234)
!2237 = !DILocation(line: 52, column: 13, scope: !2149)
!2238 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2239)
!2239 = distinct !DILocation(line: 52, column: 13, scope: !2149)
!2240 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2239)
!2241 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2239)
!2242 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2243)
!2243 = distinct !DILocation(line: 50, column: 9, scope: !2149)
!2244 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2243)
!2245 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2243)
!2246 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2243)
!2247 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2243)
!2248 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2249)
!2249 = distinct !DILocation(line: 56, column: 13, scope: !2149)
!2250 = !DILocation(line: 56, column: 41, scope: !2149)
!2251 = !DILocation(line: 467, column: 32, scope: !1908, inlinedAt: !2252)
!2252 = distinct !DILocation(line: 56, column: 13, scope: !2149)
!2253 = !DILocation(line: 467, column: 38, scope: !1908, inlinedAt: !2252)
!2254 = !DILocation(line: 472, column: 18, scope: !1908, inlinedAt: !2252)
!2255 = !DILocation(line: 57, column: 13, scope: !2149)
!2256 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2257)
!2257 = distinct !DILocation(line: 57, column: 13, scope: !2149)
!2258 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2257)
!2259 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2257)
!2260 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2261)
!2261 = distinct !DILocation(line: 55, column: 9, scope: !2149)
!2262 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2261)
!2263 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2261)
!2264 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2261)
!2265 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2261)
!2266 = !DILocation(line: 60, column: 18, scope: !2149)
!2267 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2268)
!2268 = distinct !DILocation(line: 60, column: 18, scope: !2149)
!2269 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2268)
!2270 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2268)
!2271 = !DILocation(line: 60, column: 9, scope: !2149)
!2272 = distinct !DISubprogram(name: "format64", linkageName: "_ZN3ryu6pretty8format6417h610eefc912eeb013E", scope: !1845, file: !2273, line: 52, type: !2274, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !2276)
!2273 = !DIFile(filename: "src/pretty/mod.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/ryu", checksumkind: CSK_MD5, checksum: "83d585e7cb612b9cac2fda7390bfd42c")
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!53, !499, !1848}
!2276 = !{!2277, !2278, !2279, !2281, !2283, !2285, !2287, !2289, !2291, !2293, !2295, !2297, !2299, !2301, !2303, !2305}
!2277 = !DILocalVariable(name: "f", arg: 1, scope: !2272, file: !2273, line: 52, type: !499)
!2278 = !DILocalVariable(name: "result", arg: 2, scope: !2272, file: !2273, line: 52, type: !1848)
!2279 = !DILocalVariable(name: "bits", scope: !2280, file: !2273, line: 53, type: !10, align: 8)
!2280 = distinct !DILexicalBlock(scope: !2272, file: !2273, line: 53, column: 5)
!2281 = !DILocalVariable(name: "sign", scope: !2282, file: !2273, line: 54, type: !80, align: 1)
!2282 = distinct !DILexicalBlock(scope: !2280, file: !2273, line: 54, column: 5)
!2283 = !DILocalVariable(name: "ieee_mantissa", scope: !2284, file: !2273, line: 55, type: !10, align: 8)
!2284 = distinct !DILexicalBlock(scope: !2282, file: !2273, line: 55, column: 5)
!2285 = !DILocalVariable(name: "ieee_exponent", scope: !2286, file: !2273, line: 56, type: !284, align: 4)
!2286 = distinct !DILexicalBlock(scope: !2284, file: !2273, line: 56, column: 5)
!2287 = !DILocalVariable(name: "index", scope: !2288, file: !2273, line: 59, type: !52, align: 8)
!2288 = distinct !DILexicalBlock(scope: !2286, file: !2273, line: 59, column: 5)
!2289 = !DILocalVariable(name: "v", scope: !2290, file: !2273, line: 70, type: !873, align: 8)
!2290 = distinct !DILexicalBlock(scope: !2288, file: !2273, line: 70, column: 5)
!2291 = !DILocalVariable(name: "length", scope: !2292, file: !2273, line: 72, type: !52, align: 8)
!2292 = distinct !DILexicalBlock(scope: !2290, file: !2273, line: 72, column: 5)
!2293 = !DILocalVariable(name: "k", scope: !2294, file: !2273, line: 73, type: !52, align: 8)
!2294 = distinct !DILexicalBlock(scope: !2292, file: !2273, line: 73, column: 5)
!2295 = !DILocalVariable(name: "kk", scope: !2296, file: !2273, line: 74, type: !52, align: 8)
!2296 = distinct !DILexicalBlock(scope: !2294, file: !2273, line: 74, column: 5)
!2297 = !DILocalVariable(name: "iter", scope: !2298, file: !2273, line: 80, type: !544, align: 8)
!2298 = distinct !DILexicalBlock(scope: !2296, file: !2273, line: 80, column: 9)
!2299 = !DILocalVariable(name: "i", scope: !2300, file: !2273, line: 80, type: !52, align: 8)
!2300 = distinct !DILexicalBlock(scope: !2298, file: !2273, line: 80, column: 29)
!2301 = !DILocalVariable(name: "offset", scope: !2302, file: !2273, line: 96, type: !52, align: 8)
!2302 = distinct !DILexicalBlock(scope: !2296, file: !2273, line: 96, column: 9)
!2303 = !DILocalVariable(name: "iter", scope: !2304, file: !2273, line: 97, type: !544, align: 8)
!2304 = distinct !DILexicalBlock(scope: !2302, file: !2273, line: 97, column: 9)
!2305 = !DILocalVariable(name: "i", scope: !2306, file: !2273, line: 97, type: !52, align: 8)
!2306 = distinct !DILexicalBlock(scope: !2304, file: !2273, line: 97, column: 28)
!2307 = !DILocation(line: 52, column: 24, scope: !2272)
!2308 = !DILocation(line: 52, column: 32, scope: !2272)
!2309 = !DILocation(line: 59, column: 9, scope: !2288)
!2310 = !DILocation(line: 80, column: 18, scope: !2298)
!2311 = !DILocation(line: 97, column: 18, scope: !2304)
!2312 = !DILocation(line: 53, column: 16, scope: !2272)
!2313 = !DILocation(line: 53, column: 9, scope: !2280)
!2314 = !DILocation(line: 54, column: 26, scope: !2280)
!2315 = !DILocation(line: 54, column: 17, scope: !2280)
!2316 = !DILocation(line: 54, column: 16, scope: !2280)
!2317 = !DILocation(line: 54, column: 9, scope: !2282)
!2318 = !DILocation(line: 55, column: 25, scope: !2282)
!2319 = !DILocation(line: 55, column: 9, scope: !2284)
!2320 = !DILocation(line: 57, column: 9, scope: !2284)
!2321 = !DILocation(line: 56, column: 9, scope: !2286)
!2322 = !DILocation(line: 59, column: 21, scope: !2286)
!2323 = !DILocation(line: 60, column: 8, scope: !2288)
!2324 = !DILocation(line: 65, column: 8, scope: !2288)
!2325 = !DILocation(line: 61, column: 9, scope: !2288)
!2326 = !DILocation(line: 62, column: 9, scope: !2288)
!2327 = !DILocation(line: 60, column: 5, scope: !2288)
!2328 = !DILocation(line: 65, column: 30, scope: !2288)
!2329 = !DILocation(line: 70, column: 13, scope: !2288)
!2330 = !DILocation(line: 70, column: 9, scope: !2290)
!2331 = !DILocation(line: 72, column: 18, scope: !2290)
!2332 = !DILocation(line: 72, column: 9, scope: !2292)
!2333 = !DILocation(line: 73, column: 13, scope: !2292)
!2334 = !DILocation(line: 73, column: 9, scope: !2294)
!2335 = !DILocation(line: 74, column: 14, scope: !2294)
!2336 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2337)
!2337 = distinct !DILocation(line: 66, column: 34, scope: !2288)
!2338 = !DILocation(line: 66, column: 65, scope: !2288)
!2339 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2340)
!2340 = distinct !DILocation(line: 66, column: 51, scope: !2288)
!2341 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2340)
!2342 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2340)
!2343 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2344)
!2344 = distinct !DILocation(line: 66, column: 9, scope: !2288)
!2345 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2344)
!2346 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2344)
!2347 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2344)
!2348 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2344)
!2349 = !DILocation(line: 67, column: 16, scope: !2288)
!2350 = !DILocation(line: 118, column: 2, scope: !2272)
!2351 = !DILocation(line: 74, column: 9, scope: !2296)
!2352 = !DILocation(line: 75, column: 5, scope: !2296)
!2353 = !DILocation(line: 75, column: 19, scope: !2296)
!2354 = !DILocation(line: 77, column: 8, scope: !2296)
!2355 = !DILocation(line: 86, column: 15, scope: !2296)
!2356 = !DILocation(line: 77, column: 18, scope: !2296)
!2357 = !DILocation(line: 79, column: 55, scope: !2296)
!2358 = !DILocation(line: 92, column: 15, scope: !2296)
!2359 = !DILocation(line: 86, column: 25, scope: !2296)
!2360 = !DILocation(line: 88, column: 55, scope: !2296)
!2361 = !DILocation(line: 102, column: 15, scope: !2296)
!2362 = !DILocation(line: 92, column: 26, scope: !2296)
!2363 = !DILocation(line: 94, column: 24, scope: !2296)
!2364 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2365)
!2365 = distinct !DILocation(line: 94, column: 10, scope: !2296)
!2366 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2365)
!2367 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2365)
!2368 = !DILocation(line: 94, column: 9, scope: !2296)
!2369 = !DILocation(line: 95, column: 24, scope: !2296)
!2370 = !DILocation(line: 104, column: 40, scope: !2296)
!2371 = !DILocation(line: 104, column: 33, scope: !2296)
!2372 = !DILocation(line: 109, column: 55, scope: !2296)
!2373 = !DILocation(line: 104, column: 24, scope: !2296)
!2374 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 104, column: 10, scope: !2296)
!2376 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2375)
!2377 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2375)
!2378 = !DILocation(line: 104, column: 9, scope: !2296)
!2379 = !DILocation(line: 105, column: 24, scope: !2296)
!2380 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2381)
!2381 = distinct !DILocation(line: 105, column: 10, scope: !2296)
!2382 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2381)
!2383 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2381)
!2384 = !DILocation(line: 105, column: 9, scope: !2296)
!2385 = !DILocation(line: 106, column: 9, scope: !2296)
!2386 = !DILocation(line: 106, column: 46, scope: !2296)
!2387 = !DILocation(line: 106, column: 68, scope: !2296)
!2388 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2389)
!2389 = distinct !DILocation(line: 106, column: 54, scope: !2296)
!2390 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2389)
!2391 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2389)
!2392 = !DILocation(line: 106, column: 30, scope: !2296)
!2393 = !DILocation(line: 102, column: 12, scope: !2296)
!2394 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2395)
!2395 = distinct !DILocation(line: 109, column: 41, scope: !2296)
!2396 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2395)
!2397 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2395)
!2398 = !DILocation(line: 109, column: 9, scope: !2296)
!2399 = !DILocation(line: 110, column: 48, scope: !2296)
!2400 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2401)
!2401 = distinct !DILocation(line: 110, column: 34, scope: !2296)
!2402 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2401)
!2403 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2401)
!2404 = !DILocation(line: 110, column: 33, scope: !2296)
!2405 = !DILocation(line: 110, column: 24, scope: !2296)
!2406 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2407)
!2407 = distinct !DILocation(line: 110, column: 10, scope: !2296)
!2408 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2407)
!2409 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2407)
!2410 = !DILocation(line: 110, column: 9, scope: !2296)
!2411 = !DILocation(line: 111, column: 24, scope: !2296)
!2412 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2413)
!2413 = distinct !DILocation(line: 111, column: 10, scope: !2296)
!2414 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2413)
!2415 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2413)
!2416 = !DILocation(line: 111, column: 9, scope: !2296)
!2417 = !DILocation(line: 112, column: 24, scope: !2296)
!2418 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 112, column: 10, scope: !2296)
!2420 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2419)
!2421 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2419)
!2422 = !DILocation(line: 112, column: 9, scope: !2296)
!2423 = !DILocation(line: 113, column: 9, scope: !2296)
!2424 = !DILocation(line: 116, column: 31, scope: !2296)
!2425 = !DILocation(line: 116, column: 53, scope: !2296)
!2426 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2427)
!2427 = distinct !DILocation(line: 116, column: 39, scope: !2296)
!2428 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2427)
!2429 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2427)
!2430 = !DILocation(line: 116, column: 15, scope: !2296)
!2431 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2432)
!2432 = distinct !DILocation(line: 95, column: 10, scope: !2296)
!2433 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2432)
!2434 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2432)
!2435 = !DILocation(line: 95, column: 9, scope: !2296)
!2436 = !DILocation(line: 96, column: 22, scope: !2296)
!2437 = !DILocation(line: 96, column: 13, scope: !2302)
!2438 = !DILocation(line: 97, column: 18, scope: !2302)
!2439 = !DILocation(line: 97, column: 9, scope: !2304)
!2440 = !DILocation(line: 100, column: 55, scope: !2302)
!2441 = !DILocation(line: 97, column: 13, scope: !2304)
!2442 = !DILocation(line: 97, column: 13, scope: !2306)
!2443 = !DILocation(line: 98, column: 28, scope: !2306)
!2444 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2445)
!2445 = distinct !DILocation(line: 100, column: 41, scope: !2302)
!2446 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2445)
!2447 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2445)
!2448 = !DILocation(line: 100, column: 9, scope: !2302)
!2449 = !DILocation(line: 101, column: 9, scope: !2302)
!2450 = !DILocation(line: 92, column: 12, scope: !2296)
!2451 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2452)
!2452 = distinct !DILocation(line: 98, column: 14, scope: !2306)
!2453 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2452)
!2454 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2452)
!2455 = !DILocation(line: 98, column: 13, scope: !2306)
!2456 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2457)
!2457 = distinct !DILocation(line: 88, column: 41, scope: !2296)
!2458 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2457)
!2459 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2457)
!2460 = !DILocation(line: 88, column: 9, scope: !2296)
!2461 = !DILocation(line: 89, column: 33, scope: !2296)
!2462 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2463)
!2463 = distinct !DILocation(line: 89, column: 19, scope: !2296)
!2464 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2463)
!2465 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2463)
!2466 = !DILocation(line: 89, column: 59, scope: !2296)
!2467 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2468)
!2468 = distinct !DILocation(line: 89, column: 45, scope: !2296)
!2469 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2468)
!2470 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2468)
!2471 = !DILocalVariable(name: "src", arg: 1, scope: !2472, file: !76, line: 3004, type: !296)
!2472 = distinct !DISubprogram(name: "copy<u8>", linkageName: "_ZN4core10intrinsics4copy17h4cf5f622e8d9c022E", scope: !77, file: !76, line: 3004, type: !1922, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !32, templateParams: !306, retainedNodes: !2473)
!2473 = !{!2471, !2474, !2475}
!2474 = !DILocalVariable(name: "dst", arg: 2, scope: !2472, file: !76, line: 3004, type: !1848)
!2475 = !DILocalVariable(name: "count", arg: 3, scope: !2472, file: !76, line: 3004, type: !53)
!2476 = !DILocation(line: 3004, column: 29, scope: !2472, inlinedAt: !2477)
!2477 = distinct !DILocation(line: 89, column: 9, scope: !2296)
!2478 = !DILocation(line: 3004, column: 44, scope: !2472, inlinedAt: !2477)
!2479 = !DILocation(line: 3004, column: 57, scope: !2472, inlinedAt: !2477)
!2480 = !DILocation(line: 3013, column: 9, scope: !2472, inlinedAt: !2477)
!2481 = !DILocation(line: 3024, column: 9, scope: !2472, inlinedAt: !2477)
!2482 = !DILocation(line: 90, column: 24, scope: !2296)
!2483 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2484)
!2484 = distinct !DILocation(line: 90, column: 10, scope: !2296)
!2485 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2484)
!2486 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2484)
!2487 = !DILocation(line: 90, column: 9, scope: !2296)
!2488 = !DILocation(line: 91, column: 9, scope: !2296)
!2489 = !DILocation(line: 86, column: 12, scope: !2296)
!2490 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2491)
!2491 = distinct !DILocation(line: 79, column: 41, scope: !2296)
!2492 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2491)
!2493 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2491)
!2494 = !DILocation(line: 79, column: 9, scope: !2296)
!2495 = !DILocation(line: 80, column: 18, scope: !2296)
!2496 = !DILocation(line: 80, column: 9, scope: !2298)
!2497 = !DILocation(line: 83, column: 24, scope: !2296)
!2498 = !DILocation(line: 80, column: 13, scope: !2298)
!2499 = !DILocation(line: 80, column: 13, scope: !2300)
!2500 = !DILocation(line: 81, column: 28, scope: !2300)
!2501 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2502)
!2502 = distinct !DILocation(line: 83, column: 10, scope: !2296)
!2503 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2502)
!2504 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2502)
!2505 = !DILocation(line: 83, column: 9, scope: !2296)
!2506 = !DILocation(line: 84, column: 24, scope: !2296)
!2507 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2508)
!2508 = distinct !DILocation(line: 84, column: 10, scope: !2296)
!2509 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2508)
!2510 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2508)
!2511 = !DILocation(line: 84, column: 9, scope: !2296)
!2512 = !DILocation(line: 85, column: 9, scope: !2296)
!2513 = !DILocation(line: 77, column: 5, scope: !2296)
!2514 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2515)
!2515 = distinct !DILocation(line: 81, column: 14, scope: !2300)
!2516 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2515)
!2517 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2515)
!2518 = !DILocation(line: 81, column: 13, scope: !2300)
!2519 = distinct !DISubprogram(name: "format32", linkageName: "_ZN3ryu6pretty8format3217hd024972d83518103E", scope: !1845, file: !2273, line: 159, type: !2520, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !32, templateParams: !12, retainedNodes: !2522)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!53, !480, !1848}
!2522 = !{!2523, !2524, !2525, !2527, !2529, !2531, !2533, !2535, !2537, !2539, !2541, !2543, !2545, !2547, !2549, !2551}
!2523 = !DILocalVariable(name: "f", arg: 1, scope: !2519, file: !2273, line: 159, type: !480)
!2524 = !DILocalVariable(name: "result", arg: 2, scope: !2519, file: !2273, line: 159, type: !1848)
!2525 = !DILocalVariable(name: "bits", scope: !2526, file: !2273, line: 160, type: !284, align: 4)
!2526 = distinct !DILexicalBlock(scope: !2519, file: !2273, line: 160, column: 5)
!2527 = !DILocalVariable(name: "sign", scope: !2528, file: !2273, line: 161, type: !80, align: 1)
!2528 = distinct !DILexicalBlock(scope: !2526, file: !2273, line: 161, column: 5)
!2529 = !DILocalVariable(name: "ieee_mantissa", scope: !2530, file: !2273, line: 162, type: !284, align: 4)
!2530 = distinct !DILexicalBlock(scope: !2528, file: !2273, line: 162, column: 5)
!2531 = !DILocalVariable(name: "ieee_exponent", scope: !2532, file: !2273, line: 163, type: !284, align: 4)
!2532 = distinct !DILexicalBlock(scope: !2530, file: !2273, line: 163, column: 5)
!2533 = !DILocalVariable(name: "index", scope: !2534, file: !2273, line: 165, type: !52, align: 8)
!2534 = distinct !DILexicalBlock(scope: !2532, file: !2273, line: 165, column: 5)
!2535 = !DILocalVariable(name: "v", scope: !2536, file: !2273, line: 176, type: !1475, align: 4)
!2536 = distinct !DILexicalBlock(scope: !2534, file: !2273, line: 176, column: 5)
!2537 = !DILocalVariable(name: "length", scope: !2538, file: !2273, line: 178, type: !52, align: 8)
!2538 = distinct !DILexicalBlock(scope: !2536, file: !2273, line: 178, column: 5)
!2539 = !DILocalVariable(name: "k", scope: !2540, file: !2273, line: 179, type: !52, align: 8)
!2540 = distinct !DILexicalBlock(scope: !2538, file: !2273, line: 179, column: 5)
!2541 = !DILocalVariable(name: "kk", scope: !2542, file: !2273, line: 180, type: !52, align: 8)
!2542 = distinct !DILexicalBlock(scope: !2540, file: !2273, line: 180, column: 5)
!2543 = !DILocalVariable(name: "iter", scope: !2544, file: !2273, line: 186, type: !544, align: 8)
!2544 = distinct !DILexicalBlock(scope: !2542, file: !2273, line: 186, column: 9)
!2545 = !DILocalVariable(name: "i", scope: !2546, file: !2273, line: 186, type: !52, align: 8)
!2546 = distinct !DILexicalBlock(scope: !2544, file: !2273, line: 186, column: 29)
!2547 = !DILocalVariable(name: "offset", scope: !2548, file: !2273, line: 202, type: !52, align: 8)
!2548 = distinct !DILexicalBlock(scope: !2542, file: !2273, line: 202, column: 9)
!2549 = !DILocalVariable(name: "iter", scope: !2550, file: !2273, line: 203, type: !544, align: 8)
!2550 = distinct !DILexicalBlock(scope: !2548, file: !2273, line: 203, column: 9)
!2551 = !DILocalVariable(name: "i", scope: !2552, file: !2273, line: 203, type: !52, align: 8)
!2552 = distinct !DILexicalBlock(scope: !2550, file: !2273, line: 203, column: 28)
!2553 = !DILocation(line: 159, column: 24, scope: !2519)
!2554 = !DILocation(line: 159, column: 32, scope: !2519)
!2555 = !DILocation(line: 165, column: 9, scope: !2534)
!2556 = !DILocation(line: 186, column: 18, scope: !2544)
!2557 = !DILocation(line: 203, column: 18, scope: !2550)
!2558 = !DILocation(line: 160, column: 16, scope: !2519)
!2559 = !DILocation(line: 160, column: 9, scope: !2526)
!2560 = !DILocation(line: 161, column: 26, scope: !2526)
!2561 = !DILocation(line: 161, column: 17, scope: !2526)
!2562 = !DILocation(line: 161, column: 16, scope: !2526)
!2563 = !DILocation(line: 161, column: 9, scope: !2528)
!2564 = !DILocation(line: 162, column: 25, scope: !2528)
!2565 = !DILocation(line: 162, column: 9, scope: !2530)
!2566 = !DILocation(line: 163, column: 25, scope: !2530)
!2567 = !DILocation(line: 163, column: 9, scope: !2532)
!2568 = !DILocation(line: 165, column: 21, scope: !2532)
!2569 = !DILocation(line: 166, column: 8, scope: !2534)
!2570 = !DILocation(line: 171, column: 8, scope: !2534)
!2571 = !DILocation(line: 167, column: 9, scope: !2534)
!2572 = !DILocation(line: 168, column: 9, scope: !2534)
!2573 = !DILocation(line: 166, column: 5, scope: !2534)
!2574 = !DILocation(line: 171, column: 30, scope: !2534)
!2575 = !DILocation(line: 176, column: 13, scope: !2534)
!2576 = !DILocation(line: 176, column: 9, scope: !2536)
!2577 = !DILocation(line: 178, column: 18, scope: !2536)
!2578 = !DILocation(line: 178, column: 9, scope: !2538)
!2579 = !DILocation(line: 179, column: 13, scope: !2538)
!2580 = !DILocation(line: 179, column: 9, scope: !2540)
!2581 = !DILocation(line: 180, column: 14, scope: !2540)
!2582 = !DILocation(line: 762, column: 25, scope: !1892, inlinedAt: !2583)
!2583 = distinct !DILocation(line: 172, column: 34, scope: !2534)
!2584 = !DILocation(line: 172, column: 65, scope: !2534)
!2585 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2586)
!2586 = distinct !DILocation(line: 172, column: 51, scope: !2534)
!2587 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2586)
!2588 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2586)
!2589 = !DILocation(line: 2902, column: 44, scope: !1921, inlinedAt: !2590)
!2590 = distinct !DILocation(line: 172, column: 9, scope: !2534)
!2591 = !DILocation(line: 2902, column: 59, scope: !1921, inlinedAt: !2590)
!2592 = !DILocation(line: 2902, column: 72, scope: !1921, inlinedAt: !2590)
!2593 = !DILocation(line: 2912, column: 9, scope: !1921, inlinedAt: !2590)
!2594 = !DILocation(line: 2926, column: 9, scope: !1921, inlinedAt: !2590)
!2595 = !DILocation(line: 173, column: 16, scope: !2534)
!2596 = !DILocation(line: 224, column: 2, scope: !2519)
!2597 = !DILocation(line: 180, column: 9, scope: !2542)
!2598 = !DILocation(line: 181, column: 5, scope: !2542)
!2599 = !DILocation(line: 181, column: 19, scope: !2542)
!2600 = !DILocation(line: 183, column: 8, scope: !2542)
!2601 = !DILocation(line: 192, column: 15, scope: !2542)
!2602 = !DILocation(line: 183, column: 18, scope: !2542)
!2603 = !DILocation(line: 185, column: 50, scope: !2542)
!2604 = !DILocation(line: 198, column: 15, scope: !2542)
!2605 = !DILocation(line: 192, column: 25, scope: !2542)
!2606 = !DILocation(line: 194, column: 50, scope: !2542)
!2607 = !DILocation(line: 208, column: 15, scope: !2542)
!2608 = !DILocation(line: 198, column: 26, scope: !2542)
!2609 = !DILocation(line: 200, column: 24, scope: !2542)
!2610 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2611)
!2611 = distinct !DILocation(line: 200, column: 10, scope: !2542)
!2612 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2611)
!2613 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2611)
!2614 = !DILocation(line: 200, column: 9, scope: !2542)
!2615 = !DILocation(line: 201, column: 24, scope: !2542)
!2616 = !DILocation(line: 210, column: 40, scope: !2542)
!2617 = !DILocation(line: 210, column: 33, scope: !2542)
!2618 = !DILocation(line: 215, column: 50, scope: !2542)
!2619 = !DILocation(line: 210, column: 24, scope: !2542)
!2620 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2621)
!2621 = distinct !DILocation(line: 210, column: 10, scope: !2542)
!2622 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2621)
!2623 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2621)
!2624 = !DILocation(line: 210, column: 9, scope: !2542)
!2625 = !DILocation(line: 211, column: 24, scope: !2542)
!2626 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2627)
!2627 = distinct !DILocation(line: 211, column: 10, scope: !2542)
!2628 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2627)
!2629 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2627)
!2630 = !DILocation(line: 211, column: 9, scope: !2542)
!2631 = !DILocation(line: 212, column: 9, scope: !2542)
!2632 = !DILocation(line: 212, column: 46, scope: !2542)
!2633 = !DILocation(line: 212, column: 68, scope: !2542)
!2634 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2635)
!2635 = distinct !DILocation(line: 212, column: 54, scope: !2542)
!2636 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2635)
!2637 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2635)
!2638 = !DILocation(line: 212, column: 30, scope: !2542)
!2639 = !DILocation(line: 208, column: 12, scope: !2542)
!2640 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2641)
!2641 = distinct !DILocation(line: 215, column: 36, scope: !2542)
!2642 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2641)
!2643 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2641)
!2644 = !DILocation(line: 215, column: 9, scope: !2542)
!2645 = !DILocation(line: 216, column: 48, scope: !2542)
!2646 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2647)
!2647 = distinct !DILocation(line: 216, column: 34, scope: !2542)
!2648 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2647)
!2649 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2647)
!2650 = !DILocation(line: 216, column: 33, scope: !2542)
!2651 = !DILocation(line: 216, column: 24, scope: !2542)
!2652 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2653)
!2653 = distinct !DILocation(line: 216, column: 10, scope: !2542)
!2654 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2653)
!2655 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2653)
!2656 = !DILocation(line: 216, column: 9, scope: !2542)
!2657 = !DILocation(line: 217, column: 24, scope: !2542)
!2658 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2659)
!2659 = distinct !DILocation(line: 217, column: 10, scope: !2542)
!2660 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2659)
!2661 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2659)
!2662 = !DILocation(line: 217, column: 9, scope: !2542)
!2663 = !DILocation(line: 218, column: 24, scope: !2542)
!2664 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2665)
!2665 = distinct !DILocation(line: 218, column: 10, scope: !2542)
!2666 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2665)
!2667 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2665)
!2668 = !DILocation(line: 218, column: 9, scope: !2542)
!2669 = !DILocation(line: 219, column: 9, scope: !2542)
!2670 = !DILocation(line: 222, column: 31, scope: !2542)
!2671 = !DILocation(line: 222, column: 53, scope: !2542)
!2672 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2673)
!2673 = distinct !DILocation(line: 222, column: 39, scope: !2542)
!2674 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2673)
!2675 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2673)
!2676 = !DILocation(line: 222, column: 15, scope: !2542)
!2677 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2678)
!2678 = distinct !DILocation(line: 201, column: 10, scope: !2542)
!2679 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2678)
!2680 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2678)
!2681 = !DILocation(line: 201, column: 9, scope: !2542)
!2682 = !DILocation(line: 202, column: 22, scope: !2542)
!2683 = !DILocation(line: 202, column: 13, scope: !2548)
!2684 = !DILocation(line: 203, column: 18, scope: !2548)
!2685 = !DILocation(line: 203, column: 9, scope: !2550)
!2686 = !DILocation(line: 206, column: 50, scope: !2548)
!2687 = !DILocation(line: 203, column: 13, scope: !2550)
!2688 = !DILocation(line: 203, column: 13, scope: !2552)
!2689 = !DILocation(line: 204, column: 28, scope: !2552)
!2690 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2691)
!2691 = distinct !DILocation(line: 206, column: 36, scope: !2548)
!2692 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2691)
!2693 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2691)
!2694 = !DILocation(line: 206, column: 9, scope: !2548)
!2695 = !DILocation(line: 207, column: 9, scope: !2548)
!2696 = !DILocation(line: 198, column: 12, scope: !2542)
!2697 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2698)
!2698 = distinct !DILocation(line: 204, column: 14, scope: !2552)
!2699 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2698)
!2700 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2698)
!2701 = !DILocation(line: 204, column: 13, scope: !2552)
!2702 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2703)
!2703 = distinct !DILocation(line: 194, column: 36, scope: !2542)
!2704 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2703)
!2705 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2703)
!2706 = !DILocation(line: 194, column: 9, scope: !2542)
!2707 = !DILocation(line: 195, column: 33, scope: !2542)
!2708 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2709)
!2709 = distinct !DILocation(line: 195, column: 19, scope: !2542)
!2710 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2709)
!2711 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2709)
!2712 = !DILocation(line: 195, column: 59, scope: !2542)
!2713 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2714)
!2714 = distinct !DILocation(line: 195, column: 45, scope: !2542)
!2715 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2714)
!2716 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2714)
!2717 = !DILocation(line: 3004, column: 29, scope: !2472, inlinedAt: !2718)
!2718 = distinct !DILocation(line: 195, column: 9, scope: !2542)
!2719 = !DILocation(line: 3004, column: 44, scope: !2472, inlinedAt: !2718)
!2720 = !DILocation(line: 3004, column: 57, scope: !2472, inlinedAt: !2718)
!2721 = !DILocation(line: 3013, column: 9, scope: !2472, inlinedAt: !2718)
!2722 = !DILocation(line: 3024, column: 9, scope: !2472, inlinedAt: !2718)
!2723 = !DILocation(line: 196, column: 24, scope: !2542)
!2724 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2725)
!2725 = distinct !DILocation(line: 196, column: 10, scope: !2542)
!2726 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2725)
!2727 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2725)
!2728 = !DILocation(line: 196, column: 9, scope: !2542)
!2729 = !DILocation(line: 197, column: 9, scope: !2542)
!2730 = !DILocation(line: 192, column: 12, scope: !2542)
!2731 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2732)
!2732 = distinct !DILocation(line: 185, column: 36, scope: !2542)
!2733 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2732)
!2734 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2732)
!2735 = !DILocation(line: 185, column: 9, scope: !2542)
!2736 = !DILocation(line: 186, column: 18, scope: !2542)
!2737 = !DILocation(line: 186, column: 9, scope: !2544)
!2738 = !DILocation(line: 189, column: 24, scope: !2542)
!2739 = !DILocation(line: 186, column: 13, scope: !2544)
!2740 = !DILocation(line: 186, column: 13, scope: !2546)
!2741 = !DILocation(line: 187, column: 28, scope: !2546)
!2742 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2743)
!2743 = distinct !DILocation(line: 189, column: 10, scope: !2542)
!2744 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2743)
!2745 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2743)
!2746 = !DILocation(line: 189, column: 9, scope: !2542)
!2747 = !DILocation(line: 190, column: 24, scope: !2542)
!2748 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2749)
!2749 = distinct !DILocation(line: 190, column: 10, scope: !2542)
!2750 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2749)
!2751 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2749)
!2752 = !DILocation(line: 190, column: 9, scope: !2542)
!2753 = !DILocation(line: 191, column: 9, scope: !2542)
!2754 = !DILocation(line: 183, column: 5, scope: !2542)
!2755 = !DILocation(line: 481, column: 32, scope: !1867, inlinedAt: !2756)
!2756 = distinct !DILocation(line: 187, column: 14, scope: !2546)
!2757 = !DILocation(line: 481, column: 38, scope: !1867, inlinedAt: !2756)
!2758 = !DILocation(line: 488, column: 18, scope: !1867, inlinedAt: !2756)
!2759 = !DILocation(line: 187, column: 13, scope: !2546)
