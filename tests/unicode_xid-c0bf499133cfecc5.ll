; ModuleID = '111r740mtqza0t9w'
source_filename = "111r740mtqza0t9w"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx11.0.0"

%"core::ptr::metadata::PtrRepr<[(char, char)]>" = type { [2 x i64] }
%"core::result::Result<usize, usize>" = type { i64, [1 x i64] }

@alloc_ab14703751a9eb3585c49b2e55e9a9e5 = private unnamed_addr constant <{ [104 x i8] }> <{ [104 x i8] c"unsafe precondition(s) violated: hint::assert_unchecked must never be called when the condition is false" }>, align 1
@alloc_9a72dc1c87ddefcce62e4b5ab68e5150 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\FF" }>, align 1
@alloc_8821998f047ca62cad40e6bc4e4d87c4 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc_8572d294b7d4b9d2125dc5191e02725c = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"slice::get_unchecked requires that the index is within the slice" }>, align 1
@alloc_ce4b04e83f8987dc7d1ed6352e1129b9 = private unnamed_addr constant <{ [6208 x i8] }> <{ [6208 x i8] c"0\00\00\009\00\00\00A\00\00\00Z\00\00\00_\00\00\00_\00\00\00a\00\00\00z\00\00\00\AA\00\00\00\AA\00\00\00\B5\00\00\00\B5\00\00\00\B7\00\00\00\B7\00\00\00\BA\00\00\00\BA\00\00\00\C0\00\00\00\D6\00\00\00\D8\00\00\00\F6\00\00\00\F8\00\00\00\C1\02\00\00\C6\02\00\00\D1\02\00\00\E0\02\00\00\E4\02\00\00\EC\02\00\00\EC\02\00\00\EE\02\00\00\EE\02\00\00\00\03\00\00t\03\00\00v\03\00\00w\03\00\00{\03\00\00}\03\00\00\7F\03\00\00\7F\03\00\00\86\03\00\00\8A\03\00\00\8C\03\00\00\8C\03\00\00\8E\03\00\00\A1\03\00\00\A3\03\00\00\F5\03\00\00\F7\03\00\00\81\04\00\00\83\04\00\00\87\04\00\00\8A\04\00\00/\05\00\001\05\00\00V\05\00\00Y\05\00\00Y\05\00\00`\05\00\00\88\05\00\00\91\05\00\00\BD\05\00\00\BF\05\00\00\BF\05\00\00\C1\05\00\00\C2\05\00\00\C4\05\00\00\C5\05\00\00\C7\05\00\00\C7\05\00\00\D0\05\00\00\EA\05\00\00\EF\05\00\00\F2\05\00\00\10\06\00\00\1A\06\00\00 \06\00\00i\06\00\00n\06\00\00\D3\06\00\00\D5\06\00\00\DC\06\00\00\DF\06\00\00\E8\06\00\00\EA\06\00\00\FC\06\00\00\FF\06\00\00\FF\06\00\00\10\07\00\00J\07\00\00M\07\00\00\B1\07\00\00\C0\07\00\00\F5\07\00\00\FA\07\00\00\FA\07\00\00\FD\07\00\00\FD\07\00\00\00\08\00\00-\08\00\00@\08\00\00[\08\00\00`\08\00\00j\08\00\00p\08\00\00\87\08\00\00\89\08\00\00\8E\08\00\00\98\08\00\00\E1\08\00\00\E3\08\00\00c\09\00\00f\09\00\00o\09\00\00qf\0A\00\00u\0A\00\00\81\0A\00\00\83\0A\00\00\85\0A\00\00\8D\0A\00\00\8F\0A\00\00\91\0A\00\00\93\0A\00\00\A8\0A\00\00\AA\0A\00\00\B0\0A\00\00\B2\0A\00\00\B3\0A\00\00\B5\0A\00\00\B9\0A\00\00\BC\0A\00\00\C5\0A\00\00\C7\0A\00\00\C9\0A\00\00\CB\0A\00\00\CD\0A\00\00\D0\0A\00\00\D0\0A\00\00\E0\0A\00\00\E3\0A\00\00\E6\0A\00\00\EF\0A\00\00\F9\0A\00\00\FF\0A\00\00\01\0B\00\00\03\0B\00\00\05\0B\00\00\0C\0B\00\00\0F\0B\00\00\10\0B\00\00\13\0B\00\00(\0B\00\00*\0B\00\000\0B\00\002\0B\00\003\0B\00\005\0B\00\009\0B\00\00<\0B\00\00D\0B\00\00G\0B\00\00H\0B\00\00K\0B\00\00M\0B\00\00U\0B\00\00W\0B\00\00\\\0B\00\00]\0B\00\00_\0B\00\00c\0B\00\00f\0B\00\00o\0B\00\00q\0B\00\00q\0B\00\00\82\0B\00\00\83\0B\00\00\85\0B\00\00\8A\0B\00\00\8E\0B\00\00\90\0B\00\00\92\0B\00\00\95\0B\00\00\99\0B\00\00\9A\0B\00\00\9C\0B\00\00\9C\0B\00\00\9E\0B\00\00\9F\0B\00\00\A3\0B\00\00\A4\0B\00\00\A8\0B\00\00\AA\0B\00\00\AE\0B\00\00\B9\0B\00\00\BE\0B\00\00\C2\0B\00\00\C6\0B\00\00\C8\0B\00\00\CA\0B\00\00\CD\0B\00\00\D0\0B\00\00\D0\0B\00\00\D7\0B\00\00\D7\0B\00\00\E6\0B\00\00\EF\0B\00\00\00\0C\00\00\0C\0C\00\00\0E\0C\00\00\10\0C\00\00\12\0C\00\00(\0C\00\00*\0C\00\009\0C\00\00<\0C\00\00D\0C\00\00F\0C\00\00H\0C\00\00J\0C\00\00M\0C\00\00U\0C\00\00V\0C\00\00X\0C\00\00Z\0C\00\00]\0C\00\00]\0C\00\00`\0C\00\00c\0C\00\00f\0C\00\00o\0C\00\00\80\0C\00\00\83\0C\00\00\85\0C\00\00\8C\0C\00\00\8E\0C\00\00\90\0C\00\00\92\0C\00\00\A8\0C\00\00\AA\0C\00\00\B3\0C\00\00\B5\0C\00\00\B9\0C\00\00\BC\0C\00\00\C4\0C\00\00\C6\0C\00\00\C8\0C\00\00\CA\0C\00\00\CD\0C\00\00\D5\0C\00\00\D6\0C\00\00\DD\0C\00\00\DE\0C\00\00\E0\0C\00\00\E3\0C\00\00\E6\0C\00\00\EF\0C\00\00\F1\0C\00\00\F3\0C\00\00\00\0D\00\00\0C\0D\00\00\0E\0D\00\00\10\0D\00\00\12\0D\00\00D\0D\00\00F\0D\00\00H\0D\00\00J\0D\00\00N\0D\00\00T\0D\00\00W\0D\00\00_\0D\00\00c\0D\00\00f\0D\00\00o\0D\00\00z\0D\00\00\7F\0D\00\00\81\0D\00\00\83\0D\00\00\85\0D\00\00\96\0D\00\00\9A\0D\00\00\B1\0D\00\00\B3\0D\00\00\BB\0D\00\00\BD\0D\00\00\BD\0D\00\00\C0\0D\00\00\C6\0D\00\00\CA\0D\00\00\CA\0D\00\00\CF\0D\00\00\D4\0D\00\00\D6\0D\00\00\D6\0D\00\00\D8\0D\00\00\DF\0D\00\00\E6\0D\00\00\EF\0D\00\00\F2\0D\00\00\F3\0D\00\00\01\0E\00\00:\0E\00\00@\0E\00\00N\0E\00\00P\0E\00\00Y\0E\00\00\81\0E\00\00\82\0E\00\00\84\0E\00\00\84\0E\00\00\86\0E\00\00\8A\0E\00\00\8C\0E\00\00\A3\0E\00\00\A5\0E\00\00\A5\0E\00\00\A7\0E\00\00\BD\0E\00\00\C0\0E\00\00\C4\0E\00\00\C6\0E\00\00\C6\0E\00\00\C8\0E\00\00\CE\0E\00\00\D0\0E\00\00\D9\0E\00\00\DC\0E\00\00\DF\0E\00\00\00\0F\00\00\00\0F\00\00\18\0F\00\00\19\0F\00\00 \0F\00\00)\0F\00\005\0F\00\005\0F\00\007\0F\00\007\0F\00\009\0F\00\009\0F\00\00>\0F\00\00G\0F\00\00I\0F\00\00l\0F\00\00q\0F\00\00\84\0F\00\00\86\0F\00\00\97\0F\00\00\99\0F\00\00\BC\0F\00\00\C6\0F\00\00\C6\0F\00\00\00\10\00\00I\10\00\00P\10\00\00\9D\10\00\00\A0\10\00\00\C5\10\00\00\C7\10\00\00\C7\10\00\00\CD\10\00\00\CD\10\00\00\D0\10\00\00\FA\10\00\00\FC\10\00\00H\12\00\00J\12\00\00M\12\00\00P\12\00\00V\12\00\00X\12\00\00X\12\00\00Z\12\00\00]\12\00\00`\12\00\00\88\12\00\00\8A\12\00\00\8D\12\00\00\90\12\00\00\B0\12\00\00\B2\12\00\00\B5\12\00\00\B8\12\00\00\BE\12\00\00\C0\12\00\00\C0\12\00\00\C2\12\00\00\C5\12\00\00\C8\12\00\00\D6\12\00\00\D8\12\00\00\10\13\00\00\12\13\00\00\15\13\00\00\18\13\00\00Z\13\00\00]\13\00\00_\13\00\00i\13\00\00q\13\00\00\80\13\00\00\8F\13\00\00\A0\13\00\00\F5\13\00\00\F8\13\00\00\FD\13\00\00\01\14\00\00l\16\00\00o\16\00\00\7F\16\00\00\81\16\00\00\9A\16\00\00\A0\16\00\00\EA\16\00\00\EE\16\00\00\F8\16\00\00\00\17\00\00\15\17\00\00\1F\17\00\004\17\00\00@\17\00\00S\17\00\00`\17\00\00l\17\00\00n\17\00\00p\17\00\00r\17\00\00s\17\00\00\80\17\00\00\D3\17\00\00\D7\17\00\00\D7\17\00\00\DC\17\00\00\DD\17\00\00\E0\17\00\00\E9\17\00\00\0B\18\00\00\0D\18\00\00\0F\18\00\00\19\18\00\00 \18\00\00x\18\00\00\80\18\00\00\AA\18\00\00\B0\18\00\00\F5\18\00\00\00\19\00\00\1E\19\00\00 \19\00\00+\19\00\000\19\00\00;\19\00\00F\19\00\00m\19\00\00p\19\00\00t\19\00\00\80\19\00\00\AB\19\00\00\B0\19\00\00\C9\19\00\00\D0\19\00\00\DA\19\00\00\00\1A\00\00\1B\1A\00\00 \1A\00\00^\1A\00\00`\1A\00\00|\1A\00\00\7F\1A\00\00\89\1A\00\00\90\1A\00\00\99\1A\00\00\A7\1A\00\00\A7\1A\00\00\B0\1A\00\00\BD\1A\00\00\BF\1A\00\00\CE\1A\00\00\00\1B\00\00L\1B\00\00P\1B\00\00Y\1B\00\00k\1B\00\00s\1B\00\00\80\1B\00\00\F3\1B\00\00\00\1C\00\007\1C\00\00@\1C\00\00I\1C\00\00M\1C\00\00}\1C\00\00\80\1C\00\00\88\1C\00\00\90\1C\00\00\BA\1C\00\00\BD\1C\00\00\BF\1C\00\00\D0\1C\00\00\D2\1C\00\00\D4\1C\00\00\FA\1C\00\00\00\1D\00\00\15\1F\00\00\18\1F\00\00\1D\1F\00\00 \1F\00\00E\1F\00\00H\1F\00\00M\1F\00\00P\1F\00\00W\1F\00\00Y\1F\00\00Y\1F\00\00[\1F\00\00[\1F\00\00]\1F\00\00]\1F\00\00_\1F\00\00}\1F\00\00\80\1F\00\00\B4\1F\00\00\B6\1F\00\00\BC\1F\00\00\BE\1F\00\00\BE\1F\00\00\C2\1F\00\00\C4\1F\00\00\C6\1F\00\00\CC\1F\00\00\D0\1F\00\00\D3\1F\00\00\D6\1F\00\00\DB\1F\00\00\E0\1F\00\00\EC\1F\00\00\F2\1F\00\00\F4\1F\00\00\F6\1F\00\00\FC\1F\00\00\0C \00\00\0D \00\00? \00\00@ \00\00T \00\00T \00\00q \00\00q \00\00\7F \00\00\7F \00\00\90 \00\00\9C \00\00\D0 \00\00\DC \00\00\E1 \00\00\E1 \00\00\E5 \00\00\F0 \00\00\02!\00\00\02!\00\00\07!\00\00\07!\00\00\0A!\00\00\13!\00\00\15!\00\00\15!\00\00\18!\00\00\1D!\00\00$!\00\00$!\00\00&!\00\00&!\00\00(!\00\00(!\00\00*!\00\009!\00\00<!\00\00?!\00\00E!\00\00I!\00\00N!\00\00N!\00\00`!\00\00\88!\00\00\00,\00\00\E4,\00\00\EB,\00\00\F3,\00\00\00-\00\00%-\00\00'-\00\00'-\00\00--\00\00--\00\000-\00\00g-\00\00o-\00\00oo\A6\00\00t\A6\00\00}\A6\00\00\7F\A6\00\00\F1\A6\00\00\17\A7\00\00\1F\A7\00\00\22\A7\00\00\88\A7\00\00\8B\A7\00\00\CA\A7\00\00\D0\A7\00\00\D1\A7\00\00\D3\A7\00\00\D3\A7\00\00\D5\A7\00\00\D9\A7\00\00\F2\A7\00\00'\A8\00\00,\A8\00\00,\A8\00\00@\A8\00\00s\A8\00\00\80\A8\00\00\C5\A8\00\00\D0\A8\00\00\D9\A8\00\00\E0\A8\00\00\F7\A8\00\00\FB\A8\00\00\FB\A8\00\00\FD\A8\00\00-\A9\00\000\A9\00\00S\A9\00\00`\A9\00\00|\A9\00\00\80\A9\00\00\C0\A9\00\00\CF\A9\00\00\D9\A9\00\00\E0\A9\00\00\FE\A9\00\00\00\AA\00\006\AA\00\00@\AA\00\00M\AA\00\00P\AA\00\00Y\AA\00\00`\AA\00\00v\AA\00\00z\AA\00\00\C2\AA\00\00\DB\AA\00\00\DD\AA\00\00\E0\AA\00\00\EF\AA\00\00\F2\AA\00\00\F6\AA\00\00\01\AB\00\00\06\AB\00\00\09\AB\00\00\0E\AB\00\00\11\AB\00\00\16\AB\00\00 \AB\00\00&\AB\00\00(\AB\00\00.\AB\00\000\AB\00\00Z\AB\00\00\\\AB\00\00i\AB\00\00p\AB\00\00\EA\AB\00\00\EC\AB\00\00\ED\AB\00\00\F0\AB\00\00\F9\AB\00\00\00\AC\00\00\A3\D7\00\00\B0\D7\00\00\C6\D7\00\00\CB\D7\00\00\FB\D7\00\00\00\F9\00\00m\FA\00\00p\FA\00\00\D9\FA\00\00\00\FB\00\00\06\FB\00\00\13\FB\00\00\17\FB\00\00\1D\FB\00\00(\FB\00\00*\FB\00\006\FB\00\008\FB\00\00<\FB\00\00>\FB\00\00>\FB\00\00@\FB\00\00A\FB\00\00C\FB\00\00D\FB\00\00F\FB\00\00\B1\FB\00\00\D3\FB\00\00]\FC\00\00d\FC\00\00=\FD\00\00P\FD\00\00\8F\FD\00\00\92\FD\00\00\C7\FD\00\00\F0\FD\00\00\F9\FD\00\00\00\FE\00\00\0F\FE\00\00 \FE\00\00/\FE\00\003\FE\00\004\FE\00\00M\FE\00\00O\FE\00\00q\FE\00\00q\FE\00\00s\FE\00\00s\FE\00\00w\FE\00\00w\FE\00\00y\FE\00\00y\FE\00\00{\FE\00\00{\FE\00\00}\FE\00\00}\FE\00\00\7F\FE\00\00\FC\FE\00\00\10\FF\00\00\19\FF\00\00!\FF\00\00:\FF\00\00?\FF\00\00?\FF\00\00A\FF\00\00Z\FF\00\00e\FF\00\00\BE\FF\00\00\C2\FF\00\00\C7\FF\00\00\CA\FF\00\00\CF\FF\00\00\D2\FF\00\00\D7\FF\00\00\DA\FF\00\00\DC\FF\00\00\00\00\01\00\0B\00\01\00\0D\00\01\00&\00\01\00(\00\01\00:\00\01\00<\00\01\00=\00\01\00?\00\01\00M\00\01\00P\00\01\00]\00\01\00\80\00\01\00\FA\00\01\00@\01\01\00t\01\01\00\FD\01\01\00\FD\01\01\00\80\02\01\00\9C\02\01\00\A0\02\01\00\D0\02\01\00\E0\02\01\00\E0\02\01\00\00\03\01\00\1F\03\01\00-\03\01\00J\03\01\00P\03\01\00z\03\01\00\80\03\01\00\9D\03\01\00\A0\03\01\00\C3\03\01\00\C8\03\01\00\CF\03\01\00\D1\03\01\00\D5\03\01\00\00\04\01\00\9D\04\01\00\A0\04\01\00\A9\04\01\00\B0\04\01\00\D3\04\01\00\D8\04\01\00\FB\04\01\00\00\05\01\00'\05\01\000\05\01\00c\05\01\00p\05\01\00z\05\01\00|\05\01\00\8A\05\01\00\8C\05\01\00\92\05\01\00\94\05\01\00\95\05\01\00\97\05\01\00\A1\05\01\00\A3\05\01\00\B1\05\01\00\B3\05\01\00\B9\05\01\00\BB\05\01\00\BC\05\01\00\00\06\01\006\07\01\00@\07\01\00U\07\01\00`\07\01\00g\07\01\00\80\07\01\00\85\07\01\00\87\07\01\00\B0\07\01\00\B2\07\01\00\BA\07\01\00\00\08\01\00\05\08\01\00\08\08\01\00\08\08\01\00\0A\08\01\005\08\01\007\08\01\008\08\01\00<\08\01\00<\08\01\00?\08\01\00U\08\01\00`\08\01\00v\08\01\00\80\08\01\00\9E\08\01\00\E0\08\01\00\F2\08\01\00\F4\08\01\00\F5\08\01\00\00\09\01\00\15\09\01\00 \09\01\009\09\01\00\80\09\01\00\B7\09\01\00\BE\09\01\00\BF\09\01\00\00\0A\01\00\03\0A\01\00\05\0A\01\00\06\0A\01\00\0C\0A\01\00\13\0A\01\00\15\0A\01\00\17\0A\01\00\19\0A\01\005\0A\01\008\0A\01\00:\0A\01\00?\0A\01\00?\0A\01\00`\0A\01\00|\0A\01\00\80\0A\01\00\9C\0A\01\00\C0\0A\01\00\C7\0A\01\00\C9\0A\01\00\E6\0A\01\00\00\0B\01\005\0B\01\00@\0B\01\00U\0B\01\00`\0B\01\00r\0B\01\00\80\0B\01\00\91\0B\01\00\00\0C\01\00H\0C\01\00\80\0C\01\00\B2\0C\01\00\C0\0C\01\00\F2\0C\01\00\00\0D\01\00'\0D\01\000\0D\01\009\0D\01\00\80\0E\01\00\A9\0E\01\00\AB\0E\01\00\AC\0E\01\00\B0\0E\01\00\B1\0E\01\00\FD\0E\01\00\1C\0F\01\00'\0F\01\00'\0F\01\000\0F\01\00P\0F\01\00p\0F\01\00\85\0F\01\00\B0\0F\01\00\C4\0F\01\00\E0\0F\01\00\F6\0F\01\00\00\10\01\00F\10\01\00f\10\01\00u\10\01\00\7F\10\01\00\BA\10\01\00\C2\10\01\00\C2\10\01\00\D0\10\01\00\E8\10\01\00\F0\10\01\00\F9\10\01\00\00\11\01\004\11\01\006\11\01\00?\11\01\00D\11\01\00G\11\01\00P\11\01\00s\11\01\00v\11\01\00vc\13\01\00f\13\01\00l\13\01\00p\13\01\00t\13\01\00\00\14\01\00J\14\01\00P\14\01\00Y\14\01\00^\14\01\00ar\1C\01\00\8F\1C\01\00\92\1C\01\00\A7\1C\01\00\A9\1C\01\00\B6\1C\01\00\00\1D\01\00\06\1D\01\00\08\1D\01\00\09\1D\01\00\0B\1D\01\006\1D\01\00:\1D\01\00:\1D\01\00<\1D\01\00=\1D\01\00?\1D\01\00G\1D\01\00P\1D\01\00Y\1D\01\00`\1D\01\00e\1D\01\00g\1D\01\00h\1D\01\00j\1D\01\00\8E\1D\01\00\90\1D\01\00\91\1D\01\00\93\1D\01\00\98\1D\01\00\A0\1D\01\00\A9\1D\01\00\E0\1E\01\00\F6\1E\01\00\00\1F\01\00\10\1F\01\00\12\1F\01\00:\1F\01\00>\1F\01\00B\1F\01\00P\1F\01\00Y\1F\01\00\B0\1F\01\00\B0\1F\01\00\00 \01\00\99#\01\00\00$\01\00n$\01\00\80$\01\00C%\01\00\90/\01\00\F0/\01\00\000\01\00/4\01\00@4\01\00U4\01\00\00D\01\00FF\01\00\00h\01\008j\01\00@j\01\00^j\01\00`j\01\00ij\01\00pj\01\00\BEj\01\00\C0j\01\00\C9j\01\00\D0j\01\00\EDj\01\00\F0j\01\00\F4j\01\00\00k\01\006k\01\00@k\01\00Ck\01\00Pk\01\00Yk\01\00ck\01\00wk\01\00}k\01\00\8Fk\01\00@n\01\00\7Fn\01\00\00o\01\00Jo\01\00Oo\01\00\87o\01\00\8Fo\01\00\9Fo\01\00\E0o\01\00\E1o\01\00\E3o\01\00\E4o\01\00\F0o\01\00\F1o\01\00\00p\01\00\F7\87\01\00\00\88\01\00\D5\8C\01\00\00\8D\01\00\08\8D\01\00\F0\AF\01\00\F3\AF\01\00\F5\AF\01\00\FB\AF\01\00\FD\AF\01\00\FE\AF\01\00\00\B0\01\00\22\B1\01\002\B1\01\002\B1\01\00P\B1\01\00R\B1\01\00U\B1\01\00U\B1\01\00d\B1\01\00g\B1\01\00p\B1\01\00\FB\B2\01\00\00\BC\01\00j\BC\01\00p\BC\01\00|\BC\01\00\80\BC\01\00\88\BC\01\00\90\BC\01\00\99\BC\01\00\9D\BC\01\00\9E\BC\01\00\00\CF\01\00-\CF\01\000\CF\01\00F\CF\01\00e\D1\01\00i\D1\01\00m\D1\01\00r\D1\01\00{\D1\01\00\82\D1\01\00\85\D1\01\00\8B\D1\01\00\AA\D1\01\00\AD\D1\01\00B\D2\01\00D\D2\01\00\00\D4\01\00T\D4\01\00V\D4\01\00\9C\D4\01\00\9E\D4\01\00\9F\D4\01\00\A2\D4\01\00\A2\D4\01\00\A5\D4\01\00\A6\D4\01\00\A9\D4\01\00\AC\D4\01\00\AE\D4\01\00\B9\D4\01\00\BB\D4\01\00\BB\D4\01\00\BD\D4\01\00\C3\D4\01\00\C5\D4\01\00\05\D5\01\00\07\D5\01\00\0A\D5\01\00\0D\D5\01\00\14\D5\01\00\16\D5\01\00\1C\D5\01\00\1E\D5\01\009\D5\01\00;\D5\01\00>\D5\01\00@\D5\01\00D\D5\01\00F\D5\01\00F\D5\01\00J\D5\01\00P\D5\01\00R\D5\01\00\A5\D6\01\00\A8\D6\01\00\C0\D6\01\00\C2\D6\01\00\DA\D6\01\00\DC\D6\01\00\FA\D6\01\00\FC\D6\01\00\14\D7\01\00\16\D7\01\004\D7\01\006\D7\01\00N\D7\01\00P\D7\01\00n\D7\01\00p\D7\01\00\88\D7\01\00\8A\D7\01\00\A8\D7\01\00\AA\D7\01\00\C2\D7\01\00\C4\D7\01\00\CB\D7\01\00\CE\D7\01\00\FF\D7\01\00\00\DA\01\006\DA\01\00;\DA\01\00l\DA\01\00u\DA\01\00u\DA\01\00\84\DA\01\00\84\DA\01\00\9B\DA\01\00\9F\DA\01\00\A1\DA\01\00\AF\DA\01\00\00\DF\01\00\1E\DF\01\00%\DF\01\00*\DF\01\00\00\E0\01\00\06\E0\01\00\08\E0\01\00\18\E0\01\00\1B\E0\01\00!\E0\01\00#\E0\01\00$\E0\01\00&\E0\01\00*\E0\01\000\E0\01\00m\E0\01\00\8F\E0\01\00\8F\E0\01\00\00\E1\01\00,\E1\01\000\E1\01\00=\E1\01\00@\E1\01\00I\E1\01\00N\E1\01\00N\E1\01\00\90\E2\01\00\AE\E2\01\00\C0\E2\01\00\F9\E2\01\00\D0\E4\01\00\F9\E4\01\00\E0\E7\01\00\E6\E7\01\00\E8\E7\01\00\EB\E7\01\00\ED\E7\01\00\EE\E7\01\00\F0\E7\01\00\FE\E7\01\00\00\E8\01\00\C4\E8\01\00\D0\E8\01\00\D6\E8\01\00\00\E9\01\00K\E9\01\00P\E9\01\00Y\E9\01\00\00\EE\01\00\03\EE\01\00\05\EE\01\00\1F\EE\01\00!\EE\01\00\22\EE\01\00$\EE\01\00$\EE\01\00'\EE\01\00'\EE\01\00)\EE\01\002\EE\01\004\EE\01\007\EE\01\009\EE\01\009\EE\01\00;\EE\01\00;\EE\01\00B\EE\01\00B\EE\01\00G\EE\01\00G\EE\01\00I\EE\01\00I\EE\01\00K\EE\01\00K\EE\01\00M\EE\01\00O\EE\01\00Q\EE\01\00R\EE\01\00T\EE\01\00T\EE\01\00W\EE\01\00W\EE\01\00Y\EE\01\00Y\EE\01\00[\EE\01\00[\EE\01\00]\EE\01\00]\EE\01\00_\EE\01\00_\EE\01\00a\EE\01\00b\EE\01\00d\EE\01\00d\EE\01\00g\EE\01\00j\EE\01\00l\EE\01\00r\EE\01\00t\EE\01\00w\EE\01\00y\EE\01\00|\EE\01\00~\EE\01\00~\EE\01\00\80\EE\01\00\89\EE\01\00\8B\EE\01\00\9B\EE\01\00\A1\EE\01\00\A3\EE\01\00\A5\EE\01\00\A9\EE\01\00\AB\EE\01\00\BB\EE\01\00\F0\FB\01\00\F9\FB\01\00\00\00\02\00\DF\A6\02\00\00\A7\02\009\B7\02\00@\B7\02\00\1D\B8\02\00 \B8\02\00\A1\CE\02\00\B0\CE\02\00\E0\EB\02\00\F0\EB\02\00]\EE\02\00\00\F8\02\00\1D\FA\02\00\00\00\03\00J\13\03\00P\13\03\00\AF#\03\00\00\01\0E\00\EF\01\0E\00" }>, align 4
@_ZN11unicode_xid6tables16derived_property18XID_Continue_table17h0d6bf863c2d7de4fE = internal constant <{ ptr, [8 x i8] }> <{ ptr @alloc_ce4b04e83f8987dc7d1ed6352e1129b9, [8 x i8] c"\08\03\00\00\00\00\00\00" }>, align 8, !dbg !0
@alloc_238512a95a966d59719a0bf774e381c2 = private unnamed_addr constant <{ [5336 x i8] }> <{ [5336 x i8] c"A\00\00\00Z\00\00\00a\00\00\00z\00\00\00\AA\00\00\00\AA\00\00\00\B5\00\00\00\B5\00\00\00\BA\00\00\00\BA\00\00\00\C0\00\00\00\D6\00\00\00\D8\00\00\00\F6\00\00\00\F8\00\00\00\C1\02\00\00\C6\02\00\00\D1\02\00\00\E0\02\00\00\E4\02\00\00\EC\02\00\00\EC\02\00\00\EE\02\00\00\EE\02\00\00p\03\00\00t\03\00\00v\03\00\00w\03\00\00{\03\00\00}\03\00\00\7F\03\00\00\7F\03\00\00\86\03\00\00\86\03\00\00\88\03\00\00\8A\03\00\00\8C\03\00\00\8C\03\00\00\8E\03\00\00\A1\03\00\00\A3\03\00\00\F5\03\00\00\F7\03\00\00\81\04\00\00\8A\04\00\00/\05\00\001\05\00\00V\05\00\00Y\05\00\00Y\05\00\00`\05\00\00\88\05\00\00\D0\05\00\00\EA\05\00\00\EF\05\00\00\F2\05\00\00 \06\00\00J\06\00\00n\06\00\00o\06\00\00q\06\00\00\D3\06\00\00\D5\06\00\00\D5\06\00\00\E5\06\00\00\E6\06\00\00\EE\06\00\00\EF\06\00\00\FA\06\00\00\FC\06\00\00\FF\06\00\00\FF\06\00\00\10\07\00\00\10\07\00\00\12\07\00\00/\07\00\00M\07\00\00\A5\07\00\00\B1\07\00\00\B1\07\00\00\CA\07\00\00\EA\07\00\00\F4\07\00\00\F5\07\00\00\FA\07\00\00\FA\07\00\00\00\08\00\00\15\08\00\00\1A\08\00\00\1A\08\00\00$\08\00\00$\08\00\00(\08\00\00(\08\00\00@\08\00\00X\08\00\00`\08\00\00j\08\00\00p\08\00\00\87\08\00\00\89\08\00\00\8E\08\00\00\A0\08\00\00\C9\08\00\00\04\09\00\009\09\00\00=\09\00\00=\09\00\00P\09\00\00P\09\00\00X\09\00\00a\09\00\00qr\0A\00\00t\0A\00\00\85\0A\00\00\8D\0A\00\00\8F\0A\00\00\91\0A\00\00\93\0A\00\00\A8\0A\00\00\AA\0A\00\00\B0\0A\00\00\B2\0A\00\00\B3\0A\00\00\B5\0A\00\00\B9\0A\00\00\BD\0A\00\00\BD\0A\00\00\D0\0A\00\00\D0\0A\00\00\E0\0A\00\00\E1\0A\00\00\F9\0A\00\00\F9\0A\00\00\05\0B\00\00\0C\0B\00\00\0F\0B\00\00\10\0B\00\00\13\0B\00\00(\0B\00\00*\0B\00\000\0B\00\002\0B\00\003\0B\00\005\0B\00\009\0B\00\00=\0B\00\00=\0B\00\00\\\0B\00\00]\0B\00\00_\0B\00\00a\0B\00\00q\0B\00\00q\0B\00\00\83\0B\00\00\83\0B\00\00\85\0B\00\00\8A\0B\00\00\8E\0B\00\00\90\0B\00\00\92\0B\00\00\95\0B\00\00\99\0B\00\00\9A\0B\00\00\9C\0B\00\00\9C\0B\00\00\9E\0B\00\00\9F\0B\00\00\A3\0B\00\00\A4\0B\00\00\A8\0B\00\00\AA\0B\00\00\AE\0B\00\00\B9\0B\00\00\D0\0B\00\00\D0\0B\00\00\05\0C\00\00\0C\0C\00\00\0E\0C\00\00\10\0C\00\00\12\0C\00\00(\0C\00\00*\0C\00\009\0C\00\00=\0C\00\00=\0C\00\00X\0C\00\00Z\0C\00\00]\0C\00\00]\0C\00\00`\0C\00\00a\0C\00\00\80\0C\00\00\80\0C\00\00\85\0C\00\00\8C\0C\00\00\8E\0C\00\00\90\0C\00\00\92\0C\00\00\A8\0C\00\00\AA\0C\00\00\B3\0C\00\00\B5\0C\00\00\B9\0C\00\00\BD\0C\00\00\BD\0C\00\00\DD\0C\00\00\DE\0C\00\00\E0\0C\00\00\E1\0C\00\00\F1\0C\00\00\F2\0C\00\00\04\0D\00\00\0C\0D\00\00\0E\0D\00\00\10\0D\00\00\12\0D\00\00:\0D\00\00=\0D\00\00=\0D\00\00N\0D\00\00N\0D\00\00T\0D\00\00V\0D\00\00_\0D\00\00a\0D\00\00z\0D\00\00\7F\0D\00\00\85\0D\00\00\96\0D\00\00\9A\0D\00\00\B1\0D\00\00\B3\0D\00\00\BB\0D\00\00\BD\0D\00\00\BD\0D\00\00\C0\0D\00\00\C6\0D\00\00\01\0E\00\000\0E\00\002\0E\00\002\0E\00\00@\0E\00\00F\0E\00\00\81\0E\00\00\82\0E\00\00\84\0E\00\00\84\0E\00\00\86\0E\00\00\8A\0E\00\00\8C\0E\00\00\A3\0E\00\00\A5\0E\00\00\A5\0E\00\00\A7\0E\00\00\B0\0E\00\00\B2\0E\00\00\B2\0E\00\00\BD\0E\00\00\BD\0E\00\00\C0\0E\00\00\C4\0E\00\00\C6\0E\00\00\C6\0E\00\00\DC\0E\00\00\DF\0E\00\00\00\0F\00\00\00\0F\00\00@\0F\00\00G\0F\00\00I\0F\00\00l\0F\00\00\88\0F\00\00\8C\0F\00\00\00\10\00\00*\10\00\00?\10\00\00?\10\00\00P\10\00\00U\10\00\00Z\10\00\00]\10\00\00a\10\00\00a\10\00\00e\10\00\00f\10\00\00n\10\00\00p\10\00\00u\10\00\00\81\10\00\00\8E\10\00\00\8E\10\00\00\A0\10\00\00\C5\10\00\00\C7\10\00\00\C7\10\00\00\CD\10\00\00\CD\10\00\00\D0\10\00\00\FA\10\00\00\FC\10\00\00H\12\00\00J\12\00\00M\12\00\00P\12\00\00V\12\00\00X\12\00\00X\12\00\00Z\12\00\00]\12\00\00`\12\00\00\88\12\00\00\8A\12\00\00\8D\12\00\00\90\12\00\00\B0\12\00\00\B2\12\00\00\B5\12\00\00\B8\12\00\00\BE\12\00\00\C0\12\00\00\C0\12\00\00\C2\12\00\00\C5\12\00\00\C8\12\00\00\D6\12\00\00\D8\12\00\00\10\13\00\00\12\13\00\00\15\13\00\00\18\13\00\00Z\13\00\00\80\13\00\00\8F\13\00\00\A0\13\00\00\F5\13\00\00\F8\13\00\00\FD\13\00\00\01\14\00\00l\16\00\00o\16\00\00\7F\16\00\00\81\16\00\00\9A\16\00\00\A0\16\00\00\EA\16\00\00\EE\16\00\00\F8\16\00\00\00\17\00\00\11\17\00\00\1F\17\00\001\17\00\00@\17\00\00Q\17\00\00`\17\00\00l\17\00\00n\17\00\00p\17\00\00\80\17\00\00\B3\17\00\00\D7\17\00\00\D7\17\00\00\DC\17\00\00\DC\17\00\00 \18\00\00x\18\00\00\80\18\00\00\A8\18\00\00\AA\18\00\00\AA\18\00\00\B0\18\00\00\F5\18\00\00\00\19\00\00\1E\19\00\00P\19\00\00m\19\00\00p\19\00\00t\19\00\00\80\19\00\00\AB\19\00\00\B0\19\00\00\C9\19\00\00\00\1A\00\00\16\1A\00\00 \1A\00\00T\1A\00\00\A7\1A\00\00\A7\1A\00\00\05\1B\00\003\1B\00\00E\1B\00\00L\1B\00\00\83\1B\00\00\A0\1B\00\00\AE\1B\00\00\AF\1B\00\00\BA\1B\00\00\E5\1B\00\00\00\1C\00\00#\1C\00\00M\1C\00\00O\1C\00\00Z\1C\00\00}\1C\00\00\80\1C\00\00\88\1C\00\00\90\1C\00\00\BA\1C\00\00\BD\1C\00\00\BF\1C\00\00\E9\1C\00\00\EC\1C\00\00\EE\1C\00\00\F3\1C\00\00\F5\1C\00\00\F6\1C\00\00\FA\1C\00\00\FA\1C\00\00\00\1D\00\00\BF\1D\00\00\00\1E\00\00\15\1F\00\00\18\1F\00\00\1D\1F\00\00 \1F\00\00E\1F\00\00H\1F\00\00M\1F\00\00P\1F\00\00W\1F\00\00Y\1F\00\00Y\1F\00\00[\1F\00\00[\1F\00\00]\1F\00\00]\1F\00\00_\1F\00\00}\1F\00\00\80\1F\00\00\B4\1F\00\00\B6\1F\00\00\BC\1F\00\00\BE\1F\00\00\BE\1F\00\00\C2\1F\00\00\C4\1F\00\00\C6\1F\00\00\CC\1F\00\00\D0\1F\00\00\D3\1F\00\00\D6\1F\00\00\DB\1F\00\00\E0\1F\00\00\EC\1F\00\00\F2\1F\00\00\F4\1F\00\00\F6\1F\00\00\FC\1F\00\00q \00\00q \00\00\7F \00\00\7F \00\00\90 \00\00\9C \00\00\02!\00\00\02!\00\00\07!\00\00\07!\00\00\0A!\00\00\13!\00\00\15!\00\00\15!\00\00\18!\00\00\1D!\00\00$!\00\00$!\00\00&!\00\00&!\00\00(!\00\00(!\00\00*!\00\009!\00\00<!\00\00?!\00\00E!\00\00I!\00\00N!\00\00N!\00\00`!\00\00\88!\00\00\00,\00\00\E4,\00\00\EB,\00\00\EE,\00\00\F2,\00\00\F3,\00\00\00-\00\00%-\00\00'-\00\00'-\00\00--\00\00--\00\000-\00\00g-\00\00o-\00\00o-\00\00\80-\00\00\96-\00\00\A0-\00\00\A6-\00\00\A8-\00\00\AE-\00\00\B0-\00\00\B6-\00\00\B8-\00\00\BE-\00\00\C0-\00\00\C6-\00\00\C8-\00\00\CE-\00\00\D0-\00\00\D6-\00\00\D8-\00\00\DE-\00\00\050\00\00\070\00\00!0\00\00)0\00\0010\00\0050\00\0080\00\00<0\00\00A0\00\00\960\00\00\9D0\00\00\9F0\00\00\A10\00\00\FA0\00\00\FC0\00\00\FF0\00\00\051\00\00/1\00\0011\00\00\8E1\00\00\A01\00\00\BF1\00\00\F01\00\00\FF1\00\00\004\00\00\BFM\00\00\00N\00\00\8C\A4\00\00\D0\A4\00\00\FD\A4\00\00\00\A5\00\00\0C\A6\00\00\10\A6\00\00\1F\A6\00\00*\A6\00\00+\A6\00\00@\A6\00\00n\A6\00\00\7F\A6\00\00\9D\A6\00\00\A0\A6\00\00\EF\A6\00\00\17\A7\00\00\1F\A7\00\00\22\A7\00\00\88\A7\00\00\8B\A7\00\00\CA\A7\00\00\D0\A7\00\00\D1\A7\00\00\D3\A7\00\00\D3\A7\00\00\D5\A7\00\00\D9\A7\00\00\F2\A7\00\00\01\A8\00\00\03\A8\00\00\05\A8\00\00\07\A8\00\00\0A\A8\00\00\0C\A8\00\00\22\A8\00\00@\A8\00\00s\A8\00\00\82\A8\00\00\B3\A8\00\00\F2\A8\00\00\F7\A8\00\00\FB\A8\00\00\FB\A8\00\00\FD\A8\00\00\FE\A8\00\00\0A\A9\00\00%\A9\00\000\A9\00\00F\A9\00\00`\A9\00\00|\A9\00\00\84\A9\00\00\B2\A9\00\00\CF\A9\00\00\CF\A9\00\00\E0\A9\00\00\E4\A9\00\00\E6\A9\00\00\EF\A9\00\00\FA\A9\00\00\FE\A9\00\00\00\AA\00\00(\AA\00\00@\AA\00\00B\AA\00\00D\AA\00\00K\AA\00\00`\AA\00\00v\AA\00\00z\AA\00\00z\AA\00\00~\AA\00\00\AF\AA\00\00\B1\AA\00\00\B1\AA\00\00\B5\AA\00\00\B6\AA\00\00\B9\AA\00\00\BD\AA\00\00\C0\AA\00\00\C0\AA\00\00\C2\AA\00\00\C2\AA\00\00\DB\AA\00\00\DD\AA\00\00\E0\AA\00\00\EA\AA\00\00\F2\AA\00\00\F4\AA\00\00\01\AB\00\00\06\AB\00\00\09\AB\00\00\0E\AB\00\00\11\AB\00\00\16\AB\00\00 \AB\00\00&\AB\00\00(\AB\00\00.\AB\00\000\AB\00\00Z\AB\00\00\\\AB\00\00i\AB\00\00p\AB\00\00\E2\AB\00\00\00\AC\00\00\A3\D7\00\00\B0\D7\00\00\C6\D7\00\00\CB\D7\00\00\FB\D7\00\00\00\F9\00\00m\FA\00\00p\FA\00\00\D9\FA\00\00\00\FB\00\00\06\FB\00\00\13\FB\00\00\17\FB\00\00\1D\FB\00\00\1D\FB\00\00\1F\FB\00\00(\FB\00\00*\FB\00\006\FB\00\008\FB\00\00<\FB\00\00>\FB\00\00>\FB\00\00@\FB\00\00A\FB\00\00C\FB\00\00D\FB\00\00F\FB\00\00\B1\FB\00\00\D3\FB\00\00]\FC\00\00d\FC\00\00=\FD\00\00P\FD\00\00\8F\FD\00\00\92\FD\00\00\C7\FD\00\00\F0\FD\00\00\F9\FD\00\00q\FE\00\00q\FE\00\00s\FE\00\00s\FE\00\00w\FE\00\00w\FE\00\00y\FE\00\00y\FE\00\00{\FE\00\00{\FE\00\00}\FE\00\00}\FE\00\00\7F\FE\00\00\FC\FE\00\00!\FF\00\00:\FF\00\00A\FF\00\00Z\FF\00\00f\FF\00\00\9D\FF\00\00\A0\FF\00\00\BE\FF\00\00\C2\FF\00\00\C7\FF\00\00\CA\FF\00\00\CF\FF\00\00\D2\FF\00\00\D7\FF\00\00\DA\FF\00\00\DC\FF\00\00\00\00\01\00\0B\00\01\00\0D\00\01\00&\00\01\00(\00\01\00:\00\01\00<\00\01\00=\00\01\00?\00\01\00M\00\01\00P\00\01\00]\00\01\00\80\00\01\00\FA\00\01\00@\01\01\00t\01\01\00\80\02\01\00\9C\02\01\00\A0\02\01\00\D0\02\01\00\00\03\01\00\1F\03\01\00-\03\01\00J\03\01\00P\03\01\00u\03\01\00\80\03\01\00\9D\03\01\00\A0\03\01\00\C3\03\01\00\C8\03\01\00\CF\03\01\00\D1\03\01\00\D5\03\01\00\00\04\01\00\9D\04\01\00\B0\04\01\00\D3\04\01\00\D8\04\01\00\FB\04\01\00\00\05\01\00'\05\01\000\05\01\00c\05\01\00p\05\01\00z\05\01\00|\05\01\00\8A\05\01\00\8C\05\01\00\92\05\01\00\94\05\01\00\95\05\01\00\97\05\01\00\A1\05\01\00\A3\05\01\00\B1\05\01\00\B3\05\01\00\B9\05\01\00\BB\05\01\00\BC\05\01\00\00\06\01\006\07\01\00@\07\01\00U\07\01\00`\07\01\00g\07\01\00\80\07\01\00\85\07\01\00\87\07\01\00\B0\07\01\00\B2\07\01\00\BA\07\01\00\00\08\01\00\05\08\01\00\08\08\01\00\08\08\01\00\0A\08\01\005\08\01\007\08\01\008\08\01\00<\08\01\00<\08\01\00?\08\01\00U\08\01\00`\08\01\00v\08\01\00\80\08\01\00\9E\08\01\00\E0\08\01\00\F2\08\01\00\F4\08\01\00\F5\08\01\00\00\09\01\00\15\09\01\00 \09\01\009\09\01\00\80\09\01\00\B7\09\01\00\BE\09\01\00\BF\09\01\00\00\0A\01\00\00\0A\01\00\10\0A\01\00\13\0A\01\00\15\0A\01\00\17\0A\01\00\19\0A\01\005\0A\01\00`\0A\01\00|\0A\01\00\80\0A\01\00\9C\0A\01\00\C0\0A\01\00\C7\0A\01\00\C9\0A\01\00\E4\0A\01\00\00\0B\01\005\0B\01\00@\0B\01\00U\0B\01\00`\0B\01\00r\0B\01\00\80\0B\01\00\91\0B\01\00\00\0C\01\00H\0C\01\00\80\0C\01\00\B2\0C\01\00\C0\0C\01\00\F2\0C\01\00\00\0D\01\00#\0D\01\00\80\0E\01\00\A9\0E\01\00\B0\0E\01\00\B1\0E\01\00\00\0F\01\00\1C\0F\01\00'\0F\01\00'\0F\01\000\0F\01\00E\0F\01\00p\0F\01\00\81\0F\01\00\B0\0F\01\00\C4\0F\01\00\E0\0F\01\00\F6\0F\01\00\03\10\01\007\10\01\00q\10\01\00r\10\01\00u\10\01\00u\10\01\00\83\10\01\00\AF\10\01\00\D0\10\01\00\E8\10\01\00\03\11\01\00&\11\01\00D\11\01\00D\11\01\00G\11\01\00G\11\01\00P\11\01\00r\11\01\00v\11\01\00v\11\01\00\83\11\01\00\B2\11\01\00\C1\11\01\00\C4\11\01\00\DA\11\01\00\DA\11\01\00\DC\11\01\00\DC\11\01\00\00\12\01\00\11\12\01\00\13\12\01\00+\12\01\00?\12\01\00@\12\01\00\80\12\01\00\86\12\01\00\88\12\01\00\88\12\01\00\8A\12\01\00\8D\12\01\00\8F\12\01\00\9D\12\01\00\9F\12\01\00\A8\12\01\00\B0\12\01\00\DE\12\01\00\05\13\01\00\0C\13\01\00\0F\13\01\00\10\13\01\00\13\13\01\00(\13\01\00*\13\01\000\13\01\002\13\01\003\13\01\005\13\01\009\13\01\00=\13\01\00=\13\01\00P\13\01\00P\13\01\00]\13\01\00a\13\01\00\00\14\01\004\14\01\00G\14\01\00J\14\01\00_\14\01\00ar\1C\01\00\8F\1C\01\00\00\1D\01\00\06\1D\01\00\08\1D\01\00\09\1D\01\00\0B\1D\01\000\1D\01\00F\1D\01\00F\1D\01\00`\1D\01\00e\1D\01\00g\1D\01\00h\1D\01\00j\1D\01\00\89\1D\01\00\98\1D\01\00\98\1D\01\00\E0\1E\01\00\F2\1E\01\00\02\1F\01\00\02\1F\01\00\04\1F\01\00\10\1F\01\00\12\1F\01\003\1F\01\00\B0\1F\01\00\B0\1F\01\00\00 \01\00\99#\01\00\00$\01\00n$\01\00\80$\01\00C%\01\00\90/\01\00\F0/\01\00\000\01\00/4\01\00A4\01\00F4\01\00\00D\01\00FF\01\00\00h\01\008j\01\00@j\01\00^j\01\00pj\01\00\BEj\01\00\D0j\01\00\EDj\01\00\00k\01\00/k\01\00@k\01\00Ck\01\00ck\01\00wk\01\00}k\01\00\8Fk\01\00@n\01\00\7Fn\01\00\00o\01\00Jo\01\00Po\01\00Po\01\00\93o\01\00\9Fo\01\00\E0o\01\00\E1o\01\00\E3o\01\00\E3o\01\00\00p\01\00\F7\87\01\00\00\88\01\00\D5\8C\01\00\00\8D\01\00\08\8D\01\00\F0\AF\01\00\F3\AF\01\00\F5\AF\01\00\FB\AF\01\00\FD\AF\01\00\FE\AF\01\00\00\B0\01\00\22\B1\01\002\B1\01\002\B1\01\00P\B1\01\00R\B1\01\00U\B1\01\00U\B1\01\00d\B1\01\00g\B1\01\00p\B1\01\00\FB\B2\01\00\00\BC\01\00j\BC\01\00p\BC\01\00|\BC\01\00\80\BC\01\00\88\BC\01\00\90\BC\01\00\99\BC\01\00\00\D4\01\00T\D4\01\00V\D4\01\00\9C\D4\01\00\9E\D4\01\00\9F\D4\01\00\A2\D4\01\00\A2\D4\01\00\A5\D4\01\00\A6\D4\01\00\A9\D4\01\00\AC\D4\01\00\AE\D4\01\00\B9\D4\01\00\BB\D4\01\00\BB\D4\01\00\BD\D4\01\00\C3\D4\01\00\C5\D4\01\00\05\D5\01\00\07\D5\01\00\0A\D5\01\00\0D\D5\01\00\14\D5\01\00\16\D5\01\00\1C\D5\01\00\1E\D5\01\009\D5\01\00;\D5\01\00>\D5\01\00@\D5\01\00D\D5\01\00F\D5\01\00F\D5\01\00J\D5\01\00P\D5\01\00R\D5\01\00\A5\D6\01\00\A8\D6\01\00\C0\D6\01\00\C2\D6\01\00\DA\D6\01\00\DC\D6\01\00\FA\D6\01\00\FC\D6\01\00\14\D7\01\00\16\D7\01\004\D7\01\006\D7\01\00N\D7\01\00P\D7\01\00n\D7\01\00p\D7\01\00\88\D7\01\00\8A\D7\01\00\A8\D7\01\00\AA\D7\01\00\C2\D7\01\00\C4\D7\01\00\CB\D7\01\00\00\DF\01\00\1E\DF\01\00%\DF\01\00*\DF\01\000\E0\01\00m\E0\01\00\00\E1\01\00,\E1\01\007\E1\01\00=\E1\01\00N\E1\01\00N\E1\01\00\90\E2\01\00\AD\E2\01\00\C0\E2\01\00\EB\E2\01\00\D0\E4\01\00\EB\E4\01\00\E0\E7\01\00\E6\E7\01\00\E8\E7\01\00\EB\E7\01\00\ED\E7\01\00\EE\E7\01\00\F0\E7\01\00\FE\E7\01\00\00\E8\01\00\C4\E8\01\00\00\E9\01\00C\E9\01\00K\E9\01\00K\E9\01\00\00\EE\01\00\03\EE\01\00\05\EE\01\00\1F\EE\01\00!\EE\01\00\22\EE\01\00$\EE\01\00$\EE\01\00'\EE\01\00'\EE\01\00)\EE\01\002\EE\01\004\EE\01\007\EE\01\009\EE\01\009\EE\01\00;\EE\01\00;\EE\01\00B\EE\01\00B\EE\01\00G\EE\01\00G\EE\01\00I\EE\01\00I\EE\01\00K\EE\01\00K\EE\01\00M\EE\01\00O\EE\01\00Q\EE\01\00R\EE\01\00T\EE\01\00T\EE\01\00W\EE\01\00W\EE\01\00Y\EE\01\00Y\EE\01\00[\EE\01\00[\EE\01\00]\EE\01\00]\EE\01\00_\EE\01\00_\EE\01\00a\EE\01\00b\EE\01\00d\EE\01\00d\EE\01\00g\EE\01\00j\EE\01\00l\EE\01\00r\EE\01\00t\EE\01\00w\EE\01\00y\EE\01\00|\EE\01\00~\EE\01\00~\EE\01\00\80\EE\01\00\89\EE\01\00\8B\EE\01\00\9B\EE\01\00\A1\EE\01\00\A3\EE\01\00\A5\EE\01\00\A9\EE\01\00\AB\EE\01\00\BB\EE\01\00\00\00\02\00\DF\A6\02\00\00\A7\02\009\B7\02\00@\B7\02\00\1D\B8\02\00 \B8\02\00\A1\CE\02\00\B0\CE\02\00\E0\EB\02\00\F0\EB\02\00]\EE\02\00\00\F8\02\00\1D\FA\02\00\00\00\03\00J\13\03\00P\13\03\00\AF#\03\00" }>, align 4
@_ZN11unicode_xid6tables16derived_property15XID_Start_table17h5dd8032cfbb069f6E = internal constant <{ ptr, [8 x i8] }> <{ ptr @alloc_238512a95a966d59719a0bf774e381c2, [8 x i8] c"\9B\02\00\00\00\00\00\00" }>, align 8, !dbg !19

; core::hint::assert_unchecked::precondition_check
; Function Attrs: inlinehint nounwind uwtable
define internal void @_ZN4core4hint16assert_unchecked18precondition_check17h2cc94f134d4144a6E(i1 zeroext %cond) unnamed_addr #0 !dbg !37 {
start:
  %cond.dbg.spill = alloca i8, align 1
  %0 = zext i1 %cond to i8
  store i8 %0, ptr %cond.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata ptr %cond.dbg.spill, metadata !45, metadata !DIExpression()), !dbg !46
  br i1 %cond, label %bb2, label %bb1, !dbg !47

bb1:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_ab14703751a9eb3585c49b2e55e9a9e5, i64 104) #6, !dbg !50
  unreachable, !dbg !50

bb2:                                              ; preds = %start
  ret void, !dbg !51
}

; core::slice::<impl [T]>::binary_search_by
; Function Attrs: inlinehint uwtable
define { i64, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16binary_search_by17hf10ee8bdf10ae3d7E"(ptr align 4 %self.0, i64 %self.1, ptr align 4 %0) unnamed_addr #1 personality ptr @rust_eh_personality !dbg !52 {
start:
  %cond.dbg.spill14 = alloca i8, align 1
  %__self_tag.dbg.spill12 = alloca i8, align 1
  %self.dbg.spill10 = alloca ptr, align 8
  %__self_tag.dbg.spill9 = alloca i8, align 1
  %self.dbg.spill7 = alloca ptr, align 8
  %__self_tag.dbg.spill = alloca i8, align 1
  %self.dbg.spill6 = alloca ptr, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %self.dbg.spill5 = alloca ptr, align 8
  %mid.dbg.spill = alloca i64, align 8
  %cond.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca { ptr, i64 }, align 8
  %_40 = alloca %"core::ptr::metadata::PtrRepr<[(char, char)]>", align 8
  %_39 = alloca %"core::ptr::metadata::PtrRepr<[(char, char)]>", align 8
  %_19 = alloca i64, align 8
  %_17 = alloca i64, align 8
  %_15 = alloca ptr, align 8
  %cmp = alloca i8, align 1
  %right = alloca i64, align 8
  %left = alloca i64, align 8
  %size = alloca i64, align 8
  %_0 = alloca %"core::result::Result<usize, usize>", align 8
  %f = alloca ptr, align 8
  %__arg1_tag.dbg.spill4 = alloca i8, align 1
  %other.dbg.spill3 = alloca ptr, align 8
  %__arg1_tag.dbg.spill2 = alloca i8, align 1
  %other.dbg.spill1 = alloca ptr, align 8
  %__arg1_tag.dbg.spill = alloca i8, align 1
  %other.dbg.spill = alloca ptr, align 8
  store ptr @alloc_9a72dc1c87ddefcce62e4b5ab68e5150, ptr %other.dbg.spill, align 8, !dbg !97
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill, metadata !107, metadata !DIExpression()), !dbg !97
  store i8 -1, ptr %__arg1_tag.dbg.spill, align 1, !dbg !127
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill, metadata !110, metadata !DIExpression()), !dbg !127
  store ptr @alloc_8821998f047ca62cad40e6bc4e4d87c4, ptr %other.dbg.spill1, align 8, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill1, metadata !114, metadata !DIExpression()), !dbg !128
  store i8 1, ptr %__arg1_tag.dbg.spill2, align 1, !dbg !130
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill2, metadata !117, metadata !DIExpression()), !dbg !130
  store ptr @alloc_914b2c69d7eca30497b9feaf15ac92f1, ptr %other.dbg.spill3, align 8, !dbg !131
  call void @llvm.dbg.declare(metadata ptr %other.dbg.spill3, metadata !121, metadata !DIExpression()), !dbg !131
  store i8 0, ptr %__arg1_tag.dbg.spill4, align 1, !dbg !133
  call void @llvm.dbg.declare(metadata ptr %__arg1_tag.dbg.spill4, metadata !124, metadata !DIExpression()), !dbg !133
  store ptr %0, ptr %f, align 8, !dbg !133
  store ptr %self.0, ptr %self.dbg.spill, align 8, !dbg !133
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill, i64 8, !dbg !133
  store i64 %self.1, ptr %2, align 8, !dbg !133
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !82, metadata !DIExpression()), !dbg !134
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !135, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !147, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !165, metadata !DIExpression()), !dbg !177
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !179, metadata !DIExpression()), !dbg !187
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !175, metadata !DIExpression()), !dbg !189
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !185, metadata !DIExpression()), !dbg !191
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !193, metadata !DIExpression()), !dbg !199
  call void @llvm.dbg.declare(metadata ptr %f, metadata !83, metadata !DIExpression()), !dbg !201
  call void @llvm.dbg.declare(metadata ptr %size, metadata !84, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.declare(metadata ptr %left, metadata !86, metadata !DIExpression()), !dbg !203
  call void @llvm.dbg.declare(metadata ptr %right, metadata !88, metadata !DIExpression()), !dbg !204
  call void @llvm.dbg.declare(metadata ptr %cmp, metadata !92, metadata !DIExpression()), !dbg !205
  store i64 %self.1, ptr %size, align 8, !dbg !206
  store i64 0, ptr %left, align 8, !dbg !207
  %3 = load i64, ptr %size, align 8, !dbg !208, !noundef !16
  store i64 %3, ptr %right, align 8, !dbg !208
  br label %bb1, !dbg !209

bb1:                                              ; preds = %bb11, %start
  %_7 = load i64, ptr %left, align 8, !dbg !210, !noundef !16
  %_8 = load i64, ptr %right, align 8, !dbg !211, !noundef !16
  %_6 = icmp ult i64 %_7, %_8, !dbg !210
  br i1 %_6, label %bb2, label %bb12, !dbg !210

bb12:                                             ; preds = %bb1
  %_27 = load i64, ptr %left, align 8, !dbg !212, !noundef !16
  %cond = icmp ule i64 %_27, %self.1, !dbg !212
  %4 = zext i1 %cond to i8, !dbg !212
  store i8 %4, ptr %cond.dbg.spill, align 1, !dbg !212
  call void @llvm.dbg.declare(metadata ptr %cond.dbg.spill, metadata !213, metadata !DIExpression()), !dbg !236
  br label %bb22, !dbg !238

bb2:                                              ; preds = %bb1
  %_10 = load i64, ptr %left, align 8, !dbg !239, !noundef !16
  %_12 = load i64, ptr %size, align 8, !dbg !240, !noundef !16
  %_11 = udiv i64 %_12, 2, !dbg !240
  %mid = add i64 %_10, %_11, !dbg !239
  store i64 %mid, ptr %mid.dbg.spill, align 8, !dbg !239
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !90, metadata !DIExpression()), !dbg !241
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !142, metadata !DIExpression()), !dbg !242
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !161, metadata !DIExpression()), !dbg !243
  call void @llvm.dbg.declare(metadata ptr %mid.dbg.spill, metadata !244, metadata !DIExpression()), !dbg !252
  br label %bb16, !dbg !254

bb22:                                             ; preds = %bb12
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h2cc94f134d4144a6E(i1 zeroext %cond) #7, !dbg !238
  br label %bb23, !dbg !238

bb23:                                             ; preds = %bb22
  %_29 = load i64, ptr %left, align 8, !dbg !255, !noundef !16
  %5 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !256
  store i64 %_29, ptr %5, align 8, !dbg !256
  store i64 1, ptr %_0, align 8, !dbg !256
  br label %bb13, !dbg !257

bb13:                                             ; preds = %bb21, %bb23
  %6 = load i64, ptr %_0, align 8, !dbg !258, !range !259, !noundef !16
  %7 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !258
  %8 = load i64, ptr %7, align 8, !dbg !258, !noundef !16
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0, !dbg !258
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !258
  ret { i64, i64 } %10, !dbg !258

bb16:                                             ; preds = %bb2
  store ptr %self.0, ptr %_39, align 8, !dbg !260
  %11 = getelementptr inbounds i8, ptr %_39, i64 8, !dbg !260
  store i64 %self.1, ptr %11, align 8, !dbg !260
  %12 = getelementptr inbounds i8, ptr %_39, i64 8, !dbg !260
  %_34 = load i64, ptr %12, align 8, !dbg !260, !noundef !16
  %_33 = icmp ult i64 %mid, %_34, !dbg !261
  br i1 %_33, label %bb17, label %bb18, !dbg !261

bb18:                                             ; preds = %bb16
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1 @alloc_8572d294b7d4b9d2125dc5191e02725c, i64 64) #6, !dbg !254
  unreachable, !dbg !254

bb17:                                             ; preds = %bb16
  br label %bb19, !dbg !254

bb19:                                             ; preds = %bb17
  store ptr %self.0, ptr %_40, align 8, !dbg !262
  %13 = getelementptr inbounds i8, ptr %_40, i64 8, !dbg !262
  store i64 %self.1, ptr %13, align 8, !dbg !262
  %14 = getelementptr inbounds i8, ptr %_40, i64 8, !dbg !262
  %_37 = load i64, ptr %14, align 8, !dbg !262, !noundef !16
  %_36 = icmp ult i64 %mid, %_37, !dbg !263
  store ptr %self.0, ptr %self.dbg.spill5, align 8, !dbg !264
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill5, metadata !251, metadata !DIExpression()), !dbg !265
  %_30 = getelementptr inbounds { i32, i32 }, ptr %self.0, i64 %mid, !dbg !266
  store ptr %_30, ptr %_15, align 8, !dbg !267
  %15 = load ptr, ptr %_15, align 8, !dbg !267, !nonnull !16, !align !268, !noundef !16
; invoke unicode_xid::tables::bsearch_range_table::{{closure}}
  %16 = invoke i8 @"_ZN11unicode_xid6tables19bsearch_range_table28_$u7b$$u7b$closure$u7d$$u7d$17he5466f84c00a9ac0E"(ptr align 8 %f, ptr align 4 %15)
          to label %bb3 unwind label %cleanup, !dbg !267, !range !269

bb14:                                             ; preds = %cleanup
  %17 = load ptr, ptr %1, align 8, !dbg !270, !noundef !16
  %18 = getelementptr inbounds i8, ptr %1, i64 8, !dbg !270
  %19 = load i32, ptr %18, align 8, !dbg !270, !noundef !16
  %20 = insertvalue { ptr, i32 } poison, ptr %17, 0, !dbg !270
  %21 = insertvalue { ptr, i32 } %20, i32 %19, 1, !dbg !270
  resume { ptr, i32 } %21, !dbg !270

cleanup:                                          ; preds = %bb19
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
  store ptr %23, ptr %1, align 8
  %25 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %24, ptr %25, align 8
  br label %bb14

bb3:                                              ; preds = %bb19
  store i8 %16, ptr %cmp, align 1, !dbg !267
  store ptr %cmp, ptr %self.dbg.spill6, align 8, !dbg !126
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill6, metadata !106, metadata !DIExpression()), !dbg !97
  %__self_tag = load i8, ptr %cmp, align 1, !dbg !97, !range !269, !noundef !16
  store i8 %__self_tag, ptr %__self_tag.dbg.spill, align 1, !dbg !97
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill, metadata !108, metadata !DIExpression()), !dbg !271
  %26 = icmp eq i8 %__self_tag, -1, !dbg !126
  br i1 %26, label %bb4, label %bb5, !dbg !126

bb4:                                              ; preds = %bb3
  %27 = add i64 %mid, 1, !dbg !272
  store i64 %27, ptr %_17, align 8, !dbg !272
  br label %bb6, !dbg !273

bb5:                                              ; preds = %bb3
  %28 = load i64, ptr %left, align 8, !dbg !274, !noundef !16
  store i64 %28, ptr %_17, align 8, !dbg !274
  br label %bb6, !dbg !273

bb6:                                              ; preds = %bb5, %bb4
  %29 = load i64, ptr %_17, align 8, !dbg !275, !noundef !16
  store i64 %29, ptr %left, align 8, !dbg !275
  store ptr %cmp, ptr %self.dbg.spill7, align 8, !dbg !129
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill7, metadata !112, metadata !DIExpression()), !dbg !128
  %__self_tag8 = load i8, ptr %cmp, align 1, !dbg !128, !range !269, !noundef !16
  store i8 %__self_tag8, ptr %__self_tag.dbg.spill9, align 1, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill9, metadata !115, metadata !DIExpression()), !dbg !276
  %30 = icmp eq i8 %__self_tag8, 1, !dbg !129
  br i1 %30, label %bb7, label %bb8, !dbg !129

bb7:                                              ; preds = %bb6
  store i64 %mid, ptr %_19, align 8, !dbg !277
  br label %bb9, !dbg !278

bb8:                                              ; preds = %bb6
  %31 = load i64, ptr %right, align 8, !dbg !279, !noundef !16
  store i64 %31, ptr %_19, align 8, !dbg !279
  br label %bb9, !dbg !278

bb9:                                              ; preds = %bb8, %bb7
  %32 = load i64, ptr %_19, align 8, !dbg !280, !noundef !16
  store i64 %32, ptr %right, align 8, !dbg !280
  store ptr %cmp, ptr %self.dbg.spill10, align 8, !dbg !132
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill10, metadata !119, metadata !DIExpression()), !dbg !131
  %__self_tag11 = load i8, ptr %cmp, align 1, !dbg !131, !range !269, !noundef !16
  store i8 %__self_tag11, ptr %__self_tag.dbg.spill12, align 1, !dbg !131
  call void @llvm.dbg.declare(metadata ptr %__self_tag.dbg.spill12, metadata !122, metadata !DIExpression()), !dbg !281
  %33 = icmp eq i8 %__self_tag11, 0, !dbg !132
  br i1 %33, label %bb10, label %bb11, !dbg !132

bb10:                                             ; preds = %bb9
  %mid.lcssa16 = phi i64 [ %mid, %bb9 ], !dbg !239
  %cond13 = icmp ult i64 %mid.lcssa16, %self.1, !dbg !282
  %34 = zext i1 %cond13 to i8, !dbg !282
  store i8 %34, ptr %cond.dbg.spill14, align 1, !dbg !282
  call void @llvm.dbg.declare(metadata ptr %cond.dbg.spill14, metadata !234, metadata !DIExpression()), !dbg !283
  br label %bb20, !dbg !285

bb11:                                             ; preds = %bb9
  %_24 = load i64, ptr %right, align 8, !dbg !286, !noundef !16
  %_25 = load i64, ptr %left, align 8, !dbg !287, !noundef !16
  %35 = sub i64 %_24, %_25, !dbg !288
  store i64 %35, ptr %size, align 8, !dbg !288
  br label %bb1, !dbg !209

bb20:                                             ; preds = %bb10
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h2cc94f134d4144a6E(i1 zeroext %cond13) #7, !dbg !285
  br label %bb21, !dbg !285

bb21:                                             ; preds = %bb20
  %36 = getelementptr inbounds i8, ptr %_0, i64 8, !dbg !289
  store i64 %mid.lcssa16, ptr %36, align 8, !dbg !289
  store i64 0, ptr %_0, align 8, !dbg !289
  br label %bb13, !dbg !257
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h563d90db3f12ef61E"(ptr align 8 %self) unnamed_addr #1 !dbg !290 {
start:
  %self.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %self, ptr %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %self.dbg.spill, metadata !297, metadata !DIExpression()), !dbg !298
  %_2 = load i64, ptr %self, align 8, !dbg !299, !range !259, !noundef !16
  %0 = icmp eq i64 %_2, 0, !dbg !300
  br i1 %0, label %bb2, label %bb1, !dbg !300

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !300
  br label %bb3, !dbg !300

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !300
  br label %bb3, !dbg !300

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i8, ptr %_0, align 1, !dbg !301, !range !302, !noundef !16
  %2 = trunc i8 %1 to i1, !dbg !301
  ret i1 %2, !dbg !301

bb4:                                              ; No predecessors!
  unreachable, !dbg !303
}

; unicode_xid::tables::bsearch_range_table
; Function Attrs: uwtable
define internal zeroext i1 @_ZN11unicode_xid6tables19bsearch_range_table17hd1f5407dc0115415E(i32 %0, ptr align 4 %r.0, i64 %r.1) unnamed_addr #2 !dbg !304 {
start:
  %r.dbg.spill = alloca { ptr, i64 }, align 8
  %_5 = alloca ptr, align 8
  %_4 = alloca %"core::result::Result<usize, usize>", align 8
  %c = alloca i32, align 4
  store i32 %0, ptr %c, align 4
  call void @llvm.dbg.declare(metadata ptr %c, metadata !308, metadata !DIExpression()), !dbg !310
  store ptr %r.0, ptr %r.dbg.spill, align 8
  %1 = getelementptr inbounds i8, ptr %r.dbg.spill, i64 8
  store i64 %r.1, ptr %1, align 8
  call void @llvm.dbg.declare(metadata ptr %r.dbg.spill, metadata !309, metadata !DIExpression()), !dbg !311
  store ptr %c, ptr %_5, align 8, !dbg !312
  %2 = load ptr, ptr %_5, align 8, !dbg !313, !nonnull !16, !align !268, !noundef !16
; call core::slice::<impl [T]>::binary_search_by
  %3 = call { i64, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16binary_search_by17hf10ee8bdf10ae3d7E"(ptr align 4 %r.0, i64 %r.1, ptr align 4 %2), !dbg !313
  %4 = extractvalue { i64, i64 } %3, 0, !dbg !313
  %5 = extractvalue { i64, i64 } %3, 1, !dbg !313
  store i64 %4, ptr %_4, align 8, !dbg !313
  %6 = getelementptr inbounds i8, ptr %_4, i64 8, !dbg !313
  store i64 %5, ptr %6, align 8, !dbg !313
; call core::result::Result<T,E>::is_ok
  %_0 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h563d90db3f12ef61E"(ptr align 8 %_4), !dbg !313
  ret i1 %_0, !dbg !314
}

; unicode_xid::tables::bsearch_range_table::{{closure}}
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN11unicode_xid6tables19bsearch_range_table28_$u7b$$u7b$closure$u7d$$u7d$17he5466f84c00a9ac0E"(ptr align 8 %_1, ptr align 4 %_2) unnamed_addr #1 !dbg !315 {
start:
  %hi.dbg.spill = alloca i32, align 4
  %lo.dbg.spill = alloca i32, align 4
  %_2.dbg.spill = alloca ptr, align 8
  %_1.dbg.spill = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store ptr %_1, ptr %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_1.dbg.spill, metadata !320, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !325
  store ptr %_2, ptr %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata ptr %_2.dbg.spill, metadata !324, metadata !DIExpression()), !dbg !326
  %lo = load i32, ptr %_2, align 4, !dbg !327, !range !328, !noundef !16
  store i32 %lo, ptr %lo.dbg.spill, align 4, !dbg !327
  call void @llvm.dbg.declare(metadata ptr %lo.dbg.spill, metadata !321, metadata !DIExpression()), !dbg !329
  %0 = getelementptr inbounds i8, ptr %_2, i64 4, !dbg !330
  %hi = load i32, ptr %0, align 4, !dbg !330, !range !328, !noundef !16
  store i32 %hi, ptr %hi.dbg.spill, align 4, !dbg !330
  call void @llvm.dbg.declare(metadata ptr %hi.dbg.spill, metadata !323, metadata !DIExpression()), !dbg !331
  %_9 = load ptr, ptr %_1, align 8, !dbg !332, !nonnull !16, !align !268, !noundef !16
  %_6 = load i32, ptr %_9, align 4, !dbg !332, !range !328, !noundef !16
  %_5 = icmp ugt i32 %lo, %_6, !dbg !333
  br i1 %_5, label %bb1, label %bb2, !dbg !333

bb2:                                              ; preds = %start
  %_10 = load ptr, ptr %_1, align 8, !dbg !334, !nonnull !16, !align !268, !noundef !16
  %_8 = load i32, ptr %_10, align 4, !dbg !334, !range !328, !noundef !16
  %_7 = icmp ult i32 %hi, %_8, !dbg !335
  br i1 %_7, label %bb3, label %bb4, !dbg !335

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !336
  br label %bb5, !dbg !337

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !338
  br label %bb5, !dbg !339

bb3:                                              ; preds = %bb2
  store i8 -1, ptr %_0, align 1, !dbg !340
  br label %bb5, !dbg !339

bb5:                                              ; preds = %bb1, %bb3, %bb4
  %1 = load i8, ptr %_0, align 1, !dbg !341, !range !269, !noundef !16
  ret i8 %1, !dbg !341
}

; unicode_xid::tables::derived_property::XID_Continue
; Function Attrs: uwtable
define zeroext i1 @_ZN11unicode_xid6tables16derived_property12XID_Continue17h6b04da5082e2f7bcE(i32 %c) unnamed_addr #2 !dbg !342 {
start:
  %c.dbg.spill = alloca i32, align 4
  store i32 %c, ptr %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !346, metadata !DIExpression()), !dbg !347
  %_3.0 = load ptr, ptr @_ZN11unicode_xid6tables16derived_property18XID_Continue_table17h0d6bf863c2d7de4fE, align 8, !dbg !348, !nonnull !16, !align !268, !noundef !16
  %_3.1 = load i64, ptr getelementptr inbounds (i8, ptr @_ZN11unicode_xid6tables16derived_property18XID_Continue_table17h0d6bf863c2d7de4fE, i64 8), align 8, !dbg !348, !noundef !16
; call unicode_xid::tables::bsearch_range_table
  %_0 = call zeroext i1 @_ZN11unicode_xid6tables19bsearch_range_table17hd1f5407dc0115415E(i32 %c, ptr align 4 %_3.0, i64 %_3.1), !dbg !349
  ret i1 %_0, !dbg !350
}

; unicode_xid::tables::derived_property::XID_Start
; Function Attrs: uwtable
define zeroext i1 @_ZN11unicode_xid6tables16derived_property9XID_Start17h58022b39fecfc9bfE(i32 %c) unnamed_addr #2 !dbg !351 {
start:
  %c.dbg.spill = alloca i32, align 4
  store i32 %c, ptr %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata ptr %c.dbg.spill, metadata !353, metadata !DIExpression()), !dbg !354
  %_3.0 = load ptr, ptr @_ZN11unicode_xid6tables16derived_property15XID_Start_table17h5dd8032cfbb069f6E, align 8, !dbg !355, !nonnull !16, !align !268, !noundef !16
  %_3.1 = load i64, ptr getelementptr inbounds (i8, ptr @_ZN11unicode_xid6tables16derived_property15XID_Start_table17h5dd8032cfbb069f6E, i64 8), align 8, !dbg !355, !noundef !16
; call unicode_xid::tables::bsearch_range_table
  %_0 = call zeroext i1 @_ZN11unicode_xid6tables19bsearch_range_table17hd1f5407dc0115415E(i32 %c, ptr align 4 %_3.0, i64 %_3.1), !dbg !356
  ret i1 %_0, !dbg !357
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noreturn nounwind uwtable
declare void @_ZN4core9panicking14panic_nounwind17h50c31e15afde233eE(ptr align 1, i64) unnamed_addr #4

declare i32 @rust_eh_personality(...) unnamed_addr #5

attributes #0 = { inlinehint nounwind uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #1 = { inlinehint uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #2 = { uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { cold noinline noreturn nounwind uwtable "frame-pointer"="non-leaf" "probe-stack"="inline-asm" "target-cpu"="apple-m1" }
attributes #5 = { "target-cpu"="apple-m1" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!21, !22, !23}
!llvm.ident = !{!24}
!llvm.dbg.cu = !{!25}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "XID_Continue_table", linkageName: "_ZN11unicode_xid6tables16derived_property18XID_Continue_table17h0d6bf863c2d7de4fE", scope: !2, file: !5, line: 40, type: !6, isLocal: true, isDefinition: true, align: 64)
!2 = !DINamespace(name: "derived_property", scope: !3)
!3 = !DINamespace(name: "tables", scope: !4)
!4 = !DINamespace(name: "unicode_xid", scope: null)
!5 = !DIFile(filename: "src/tables.rs", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/unicode-xid", checksumkind: CSK_MD5, checksum: "230a9468bbe5e92e2c2e1ce688a8cdc0")
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[(char, char)]", file: !7, size: 128, align: 64, elements: !8, templateParams: !16, identifier: "262698226fdb29d8da8330adcf896550")
!7 = !DIFile(filename: "<unknown>", directory: "")
!8 = !{!9, !17}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6, file: !7, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "(char, char)", file: !7, size: 64, align: 32, elements: !12, templateParams: !16, identifier: "aeec00be3f5d787ae7a669127f432b0e")
!12 = !{!13, !15}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11, file: !7, baseType: !14, size: 32, align: 32)
!14 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !11, file: !7, baseType: !14, size: 32, align: 32, offset: 32)
!16 = !{}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6, file: !7, baseType: !18, size: 64, align: 64, offset: 64)
!18 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "XID_Start_table", linkageName: "_ZN11unicode_xid6tables16derived_property15XID_Start_table17h5dd8032cfbb069f6E", scope: !2, file: !5, line: 823, type: !6, isLocal: true, isDefinition: true, align: 64)
!21 = !{i32 8, !"PIC Level", i32 2}
!22 = !{i32 2, !"Dwarf Version", i32 4}
!23 = !{i32 2, !"Debug Info Version", i32 3}
!24 = !{!"rustc version 1.78.0-nightly (46b180ec2 2024-03-08)"}
!25 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !26, producer: "clang LLVM (rustc version 1.78.0-nightly (46b180ec2 2024-03-08))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !27, globals: !36, splitDebugInlining: false, nameTableKind: None)
!26 = !DIFile(filename: "src/lib.rs/@/111r740mtqza0t9w", directory: "/private/var/folders/m6/nyw0tbd5239gngtm06pzykr00000gn/T/.tmpPXbnuW/unicode-xid")
!27 = !{!28}
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !29, file: !7, baseType: !31, size: 8, align: 8, flags: DIFlagEnumClass, elements: !32)
!29 = !DINamespace(name: "cmp", scope: !30)
!30 = !DINamespace(name: "core", scope: null)
!31 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "Less", value: -1)
!34 = !DIEnumerator(name: "Equal", value: 0)
!35 = !DIEnumerator(name: "Greater", value: 1)
!36 = !{!0, !19}
!37 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4hint16assert_unchecked18precondition_check17h2cc94f134d4144a6E", scope: !39, file: !38, line: 2764, type: !41, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !44)
!38 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "8e44aa294dd7cc4c037d8b6ff42222a3")
!39 = !DINamespace(name: "assert_unchecked", scope: !40)
!40 = !DINamespace(name: "hint", scope: !30)
!41 = !DISubroutineType(types: !42)
!42 = !{null, !43}
!43 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!44 = !{!45}
!45 = !DILocalVariable(name: "cond", arg: 1, scope: !37, file: !38, line: 2764, type: !43)
!46 = !DILocation(line: 2764, column: 37, scope: !37)
!47 = !DILocation(line: 151, column: 36, scope: !48)
!48 = !DILexicalBlockFile(scope: !37, file: !49, discriminator: 0)
!49 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fc6606c2a3d09b64752db76382222d0")
!50 = !DILocation(line: 2766, column: 21, scope: !37)
!51 = !DILocation(line: 2770, column: 14, scope: !37)
!52 = distinct !DISubprogram(name: "binary_search_by<(char, char), unicode_xid::tables::bsearch_range_table::{closure_env#0}>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16binary_search_by17hf10ee8bdf10ae3d7E", scope: !54, file: !53, line: 2779, type: !56, scopeLine: 2779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !94, retainedNodes: !81)
!53 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "bd645d242e429a8f9550dabdf674e92b")
!54 = !DINamespace(name: "{impl#0}", scope: !55)
!55 = !DINamespace(name: "slice", scope: !30)
!56 = !DISubroutineType(types: !57)
!57 = !{!58, !6, !76}
!58 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, usize>", scope: !59, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !60, templateParams: !16, identifier: "74ab58d30dec05b38f6a0d454c7b25f1")
!59 = !DINamespace(name: "result", scope: !30)
!60 = !{!61}
!61 = !DICompositeType(tag: DW_TAG_variant_part, scope: !58, file: !7, size: 128, align: 64, elements: !62, templateParams: !16, identifier: "3cc98fc09ded356131d325919cbfd0ca", discriminator: !74)
!62 = !{!63, !70}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !61, file: !7, baseType: !64, size: 128, align: 64, extraData: i128 0)
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !58, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !65, templateParams: !67, identifier: "52ad4823d1952bfa7a82ca5a6c3183a4")
!65 = !{!66}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !64, file: !7, baseType: !18, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!67 = !{!68, !69}
!68 = !DITemplateTypeParameter(name: "T", type: !18)
!69 = !DITemplateTypeParameter(name: "E", type: !18)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !61, file: !7, baseType: !71, size: 128, align: 64, extraData: i128 1)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !58, file: !7, size: 128, align: 64, flags: DIFlagPublic, elements: !72, templateParams: !67, identifier: "f288fc2dee5715e2a8fe810657cbc35")
!72 = !{!73}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !71, file: !7, baseType: !18, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!74 = !DIDerivedType(tag: DW_TAG_member, scope: !58, file: !7, baseType: !75, size: 64, align: 64, flags: DIFlagArtificial)
!75 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !77, file: !7, size: 64, align: 64, elements: !78, templateParams: !16, identifier: "3ac0e4a23601ea8eb8c8c866b2a65eb6")
!77 = !DINamespace(name: "bsearch_range_table", scope: !3)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__c", scope: !76, file: !7, baseType: !80, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!81 = !{!82, !83, !84, !86, !88, !90, !92}
!82 = !DILocalVariable(name: "self", arg: 1, scope: !52, file: !53, line: 2779, type: !6)
!83 = !DILocalVariable(name: "f", arg: 2, scope: !52, file: !53, line: 2779, type: !76)
!84 = !DILocalVariable(name: "size", scope: !85, file: !53, line: 2787, type: !18, align: 8)
!85 = distinct !DILexicalBlock(scope: !52, file: !53, line: 2787, column: 9)
!86 = !DILocalVariable(name: "left", scope: !87, file: !53, line: 2788, type: !18, align: 8)
!87 = distinct !DILexicalBlock(scope: !85, file: !53, line: 2788, column: 9)
!88 = !DILocalVariable(name: "right", scope: !89, file: !53, line: 2789, type: !18, align: 8)
!89 = distinct !DILexicalBlock(scope: !87, file: !53, line: 2789, column: 9)
!90 = !DILocalVariable(name: "mid", scope: !91, file: !53, line: 2791, type: !18, align: 8)
!91 = distinct !DILexicalBlock(scope: !89, file: !53, line: 2791, column: 13)
!92 = !DILocalVariable(name: "cmp", scope: !93, file: !53, line: 2797, type: !28, align: 1)
!93 = distinct !DILexicalBlock(scope: !91, file: !53, line: 2797, column: 13)
!94 = !{!95, !96}
!95 = !DITemplateTypeParameter(name: "T", type: !11)
!96 = !DITemplateTypeParameter(name: "F", type: !76)
!97 = !DILocation(line: 377, column: 23, scope: !98, inlinedAt: !126)
!98 = distinct !DILexicalBlock(scope: !100, file: !99, line: 377, column: 23)
!99 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "a92d0ff535cd882f49f92c6340fed1e4")
!100 = distinct !DISubprogram(name: "eq", linkageName: "_ZN60_$LT$core..cmp..Ordering$u20$as$u20$core..cmp..PartialEq$GT$2eq17h23d8abdb6a9cbd10E", scope: !101, file: !99, line: 377, type: !102, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !105)
!101 = !DINamespace(name: "{impl#7}", scope: !29)
!102 = !DISubroutineType(types: !103)
!103 = !{!43, !104, !104}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cmp::Ordering", baseType: !28, size: 64, align: 64, dwarfAddressSpace: 0)
!105 = !{!106, !107, !108, !110, !112, !114, !115, !117, !119, !121, !122, !124}
!106 = !DILocalVariable(name: "self", arg: 1, scope: !98, file: !99, line: 377, type: !104)
!107 = !DILocalVariable(name: "other", scope: !98, file: !99, line: 377, type: !104, align: 8)
!108 = !DILocalVariable(name: "__self_tag", scope: !109, file: !99, line: 377, type: !31, align: 1)
!109 = distinct !DILexicalBlock(scope: !98, file: !99, line: 377, column: 23)
!110 = !DILocalVariable(name: "__arg1_tag", scope: !111, file: !99, line: 377, type: !31, align: 1)
!111 = distinct !DILexicalBlock(scope: !109, file: !99, line: 377, column: 23)
!112 = !DILocalVariable(name: "self", arg: 1, scope: !113, file: !99, line: 377, type: !104)
!113 = distinct !DILexicalBlock(scope: !100, file: !99, line: 377, column: 23)
!114 = !DILocalVariable(name: "other", scope: !113, file: !99, line: 377, type: !104, align: 8)
!115 = !DILocalVariable(name: "__self_tag", scope: !116, file: !99, line: 377, type: !31, align: 1)
!116 = distinct !DILexicalBlock(scope: !113, file: !99, line: 377, column: 23)
!117 = !DILocalVariable(name: "__arg1_tag", scope: !118, file: !99, line: 377, type: !31, align: 1)
!118 = distinct !DILexicalBlock(scope: !116, file: !99, line: 377, column: 23)
!119 = !DILocalVariable(name: "self", arg: 1, scope: !120, file: !99, line: 377, type: !104)
!120 = distinct !DILexicalBlock(scope: !100, file: !99, line: 377, column: 23)
!121 = !DILocalVariable(name: "other", scope: !120, file: !99, line: 377, type: !104, align: 8)
!122 = !DILocalVariable(name: "__self_tag", scope: !123, file: !99, line: 377, type: !31, align: 1)
!123 = distinct !DILexicalBlock(scope: !120, file: !99, line: 377, column: 23)
!124 = !DILocalVariable(name: "__arg1_tag", scope: !125, file: !99, line: 377, type: !31, align: 1)
!125 = distinct !DILexicalBlock(scope: !123, file: !99, line: 377, column: 23)
!126 = !DILocation(line: 2803, column: 23, scope: !93)
!127 = !DILocation(line: 377, column: 23, scope: !111, inlinedAt: !126)
!128 = !DILocation(line: 377, column: 23, scope: !113, inlinedAt: !129)
!129 = !DILocation(line: 2804, column: 24, scope: !93)
!130 = !DILocation(line: 377, column: 23, scope: !118, inlinedAt: !129)
!131 = !DILocation(line: 377, column: 23, scope: !120, inlinedAt: !132)
!132 = !DILocation(line: 2805, column: 16, scope: !93)
!133 = !DILocation(line: 377, column: 23, scope: !125, inlinedAt: !132)
!134 = !DILocation(line: 2779, column: 36, scope: !52)
!135 = !DILocalVariable(name: "self", arg: 1, scope: !136, file: !53, line: 679, type: !6)
!136 = distinct !DILexicalBlock(scope: !137, file: !53, line: 679, column: 5)
!137 = distinct !DISubprogram(name: "get_unchecked<(char, char), usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hbed24bbc937a3717E", scope: !54, file: !53, line: 679, type: !138, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !143, retainedNodes: !141)
!138 = !DISubroutineType(types: !139)
!139 = !{!140, !6, !18}
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(char, char)", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!141 = !{!135, !142}
!142 = !DILocalVariable(name: "index", arg: 2, scope: !136, file: !53, line: 679, type: !18)
!143 = !{!95, !144}
!144 = !DITemplateTypeParameter(name: "I", type: !18)
!145 = !DILocation(line: 679, column: 36, scope: !136, inlinedAt: !146)
!146 = !DILocation(line: 2797, column: 39, scope: !91)
!147 = !DILocalVariable(name: "slice", arg: 2, scope: !148, file: !149, line: 232, type: !6)
!148 = distinct !DILexicalBlock(scope: !150, file: !149, line: 232, column: 5)
!149 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "64a8de5498ea10af39073650ed20d9c4")
!150 = distinct !DISubprogram(name: "get_unchecked<(char, char)>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h9d74f856ea7548c6E", scope: !151, file: !149, line: 232, type: !153, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !162, retainedNodes: !160)
!151 = !DINamespace(name: "{impl#2}", scope: !152)
!152 = !DINamespace(name: "index", scope: !55)
!153 = !DISubroutineType(types: !154)
!154 = !{!155, !18, !156}
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const (char, char)", baseType: !11, size: 64, align: 64, dwarfAddressSpace: 0)
!156 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [(char, char)]", file: !7, size: 128, align: 64, elements: !157, templateParams: !16, identifier: "18a4e208abb7091f6c0c8ffecd949551")
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !156, file: !7, baseType: !10, size: 64, align: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !156, file: !7, baseType: !18, size: 64, align: 64, offset: 64)
!160 = !{!161, !147}
!161 = !DILocalVariable(name: "self", arg: 1, scope: !148, file: !149, line: 232, type: !18)
!162 = !{!95}
!163 = !DILocation(line: 232, column: 35, scope: !148, inlinedAt: !164)
!164 = !DILocation(line: 686, column: 26, scope: !136, inlinedAt: !146)
!165 = !DILocalVariable(name: "self", arg: 1, scope: !166, file: !167, line: 1666, type: !6)
!166 = distinct !DILexicalBlock(scope: !168, file: !167, line: 1666, column: 5)
!167 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "497dd18e023476b8914a8083d081a04c")
!168 = distinct !DISubprogram(name: "len<(char, char)>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h628305f141fede7eE", scope: !169, file: !167, line: 1666, type: !172, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !162, retainedNodes: !174)
!169 = !DINamespace(name: "{impl#1}", scope: !170)
!170 = !DINamespace(name: "const_ptr", scope: !171)
!171 = !DINamespace(name: "ptr", scope: !30)
!172 = !DISubroutineType(types: !173)
!173 = !{!18, !156}
!174 = !{!165, !175}
!175 = !DILocalVariable(name: "self", arg: 1, scope: !176, file: !167, line: 1666, type: !6)
!176 = distinct !DILexicalBlock(scope: !168, file: !167, line: 1666, column: 5)
!177 = !DILocation(line: 1666, column: 22, scope: !166, inlinedAt: !178)
!178 = !DILocation(line: 234, column: 26, scope: !148, inlinedAt: !164)
!179 = !DILocalVariable(name: "ptr", arg: 1, scope: !180, file: !181, line: 94, type: !6)
!180 = distinct !DILexicalBlock(scope: !182, file: !181, line: 94, column: 1)
!181 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "3e5f46ed28de51d38cc460b6ffb611d6")
!182 = distinct !DISubprogram(name: "metadata<[(char, char)]>", linkageName: "_ZN4core3ptr8metadata8metadata17h901159396bb5818bE", scope: !183, file: !181, line: 94, type: !172, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !162, retainedNodes: !184)
!183 = !DINamespace(name: "metadata", scope: !171)
!184 = !{!179, !185}
!185 = !DILocalVariable(name: "ptr", arg: 1, scope: !186, file: !181, line: 94, type: !6)
!186 = distinct !DILexicalBlock(scope: !182, file: !181, line: 94, column: 1)
!187 = !DILocation(line: 94, column: 34, scope: !180, inlinedAt: !188)
!188 = !DILocation(line: 1667, column: 9, scope: !166, inlinedAt: !178)
!189 = !DILocation(line: 1666, column: 22, scope: !176, inlinedAt: !190)
!190 = !DILocation(line: 244, column: 52, scope: !148, inlinedAt: !164)
!191 = !DILocation(line: 94, column: 34, scope: !186, inlinedAt: !192)
!192 = !DILocation(line: 1667, column: 9, scope: !176, inlinedAt: !190)
!193 = !DILocalVariable(name: "self", arg: 1, scope: !194, file: !167, line: 1704, type: !6)
!194 = distinct !DILexicalBlock(scope: !195, file: !167, line: 1704, column: 5)
!195 = distinct !DISubprogram(name: "as_ptr<(char, char)>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h7045e3dec65df77fE", scope: !169, file: !167, line: 1704, type: !196, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !162, retainedNodes: !198)
!196 = !DISubroutineType(types: !197)
!197 = !{!155, !156}
!198 = !{!193}
!199 = !DILocation(line: 1704, column: 25, scope: !194, inlinedAt: !200)
!200 = !DILocation(line: 245, column: 19, scope: !148, inlinedAt: !164)
!201 = !DILocation(line: 2779, column: 46, scope: !52)
!202 = !DILocation(line: 2787, column: 13, scope: !85)
!203 = !DILocation(line: 2788, column: 13, scope: !87)
!204 = !DILocation(line: 2789, column: 13, scope: !89)
!205 = !DILocation(line: 2797, column: 17, scope: !93)
!206 = !DILocation(line: 2787, column: 24, scope: !52)
!207 = !DILocation(line: 2788, column: 24, scope: !85)
!208 = !DILocation(line: 2789, column: 25, scope: !87)
!209 = !DILocation(line: 2790, column: 9, scope: !89)
!210 = !DILocation(line: 2790, column: 15, scope: !89)
!211 = !DILocation(line: 2790, column: 22, scope: !89)
!212 = !DILocation(line: 2816, column: 41, scope: !89)
!213 = !DILocalVariable(name: "cond", arg: 1, scope: !214, file: !49, line: 146, type: !43)
!214 = distinct !DILexicalBlock(scope: !215, file: !49, line: 146, column: 1)
!215 = distinct !DISubprogram(name: "assert_unchecked", linkageName: "_ZN4core4hint16assert_unchecked17hc2d31ed73102448fE", scope: !40, file: !49, line: 146, type: !216, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !233)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !43, !218}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !219, size: 64, align: 64, dwarfAddressSpace: 0)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !220, file: !7, size: 192, align: 64, flags: DIFlagPublic, elements: !222, templateParams: !16, identifier: "6ab6d19db24f176957abb2edb6f58a8b")
!220 = !DINamespace(name: "location", scope: !221)
!221 = !DINamespace(name: "panic", scope: !30)
!222 = !{!223, !230, !232}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !219, file: !7, baseType: !224, size: 128, align: 64, flags: DIFlagPrivate)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !7, size: 128, align: 64, elements: !225, templateParams: !16, identifier: "857c99401054bcaa39f98e6e0c6d74b")
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !224, file: !7, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64, dwarfAddressSpace: 0)
!228 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !224, file: !7, baseType: !18, size: 64, align: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !219, file: !7, baseType: !231, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!231 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !219, file: !7, baseType: !231, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!233 = !{!234, !213}
!234 = !DILocalVariable(name: "cond", arg: 1, scope: !235, file: !49, line: 146, type: !43)
!235 = distinct !DILexicalBlock(scope: !215, file: !49, line: 146, column: 1)
!236 = !DILocation(line: 146, column: 38, scope: !214, inlinedAt: !237)
!237 = !DILocation(line: 2816, column: 18, scope: !89)
!238 = !DILocation(line: 149, column: 9, scope: !214, inlinedAt: !237)
!239 = !DILocation(line: 2791, column: 23, scope: !89)
!240 = !DILocation(line: 2791, column: 30, scope: !89)
!241 = !DILocation(line: 2791, column: 17, scope: !91)
!242 = !DILocation(line: 679, column: 43, scope: !136, inlinedAt: !146)
!243 = !DILocation(line: 232, column: 29, scope: !148, inlinedAt: !164)
!244 = !DILocalVariable(name: "count", arg: 2, scope: !245, file: !167, line: 945, type: !18)
!245 = distinct !DILexicalBlock(scope: !246, file: !167, line: 945, column: 5)
!246 = distinct !DISubprogram(name: "add<(char, char)>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h64925c43483c4661E", scope: !247, file: !167, line: 945, type: !248, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !162, retainedNodes: !250)
!247 = !DINamespace(name: "{impl#0}", scope: !170)
!248 = !DISubroutineType(types: !249)
!249 = !{!155, !155, !18}
!250 = !{!251, !244}
!251 = !DILocalVariable(name: "self", arg: 1, scope: !245, file: !167, line: 945, type: !155)
!252 = !DILocation(line: 945, column: 35, scope: !245, inlinedAt: !253)
!253 = !DILocation(line: 245, column: 28, scope: !148, inlinedAt: !164)
!254 = !DILocation(line: 233, column: 9, scope: !148, inlinedAt: !164)
!255 = !DILocation(line: 2817, column: 13, scope: !89)
!256 = !DILocation(line: 2817, column: 9, scope: !89)
!257 = !DILocation(line: 2818, column: 5, scope: !52)
!258 = !DILocation(line: 2818, column: 6, scope: !52)
!259 = !{i64 0, i64 2}
!260 = !DILocation(line: 98, column: 14, scope: !180, inlinedAt: !188)
!261 = !DILocation(line: 234, column: 13, scope: !148, inlinedAt: !164)
!262 = !DILocation(line: 98, column: 14, scope: !186, inlinedAt: !192)
!263 = !DILocation(line: 244, column: 39, scope: !148, inlinedAt: !164)
!264 = !DILocation(line: 1705, column: 9, scope: !194, inlinedAt: !200)
!265 = !DILocation(line: 945, column: 29, scope: !245, inlinedAt: !253)
!266 = !DILocation(line: 950, column: 18, scope: !245, inlinedAt: !253)
!267 = !DILocation(line: 2797, column: 23, scope: !91)
!268 = !{i64 4}
!269 = !{i8 -1, i8 2}
!270 = !DILocation(line: 2779, column: 5, scope: !52)
!271 = !DILocation(line: 377, column: 23, scope: !109, inlinedAt: !126)
!272 = !DILocation(line: 2803, column: 37, scope: !93)
!273 = !DILocation(line: 2803, column: 20, scope: !93)
!274 = !DILocation(line: 2803, column: 54, scope: !93)
!275 = !DILocation(line: 2803, column: 13, scope: !93)
!276 = !DILocation(line: 377, column: 23, scope: !116, inlinedAt: !129)
!277 = !DILocation(line: 2804, column: 41, scope: !93)
!278 = !DILocation(line: 2804, column: 21, scope: !93)
!279 = !DILocation(line: 2804, column: 54, scope: !93)
!280 = !DILocation(line: 2804, column: 13, scope: !93)
!281 = !DILocation(line: 377, column: 23, scope: !123, inlinedAt: !132)
!282 = !DILocation(line: 2807, column: 49, scope: !93)
!283 = !DILocation(line: 146, column: 38, scope: !235, inlinedAt: !284)
!284 = !DILocation(line: 2807, column: 26, scope: !93)
!285 = !DILocation(line: 149, column: 9, scope: !235, inlinedAt: !284)
!286 = !DILocation(line: 2811, column: 20, scope: !93)
!287 = !DILocation(line: 2811, column: 28, scope: !93)
!288 = !DILocation(line: 2811, column: 13, scope: !93)
!289 = !DILocation(line: 2808, column: 24, scope: !93)
!290 = distinct !DISubprogram(name: "is_ok<usize, usize>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h563d90db3f12ef61E", scope: !58, file: !291, line: 538, type: !292, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !67, declaration: !295, retainedNodes: !296)
!291 = !DIFile(filename: "/rustc/46b180ec2452d388c5d9c14009442e2e0beb01d7/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "96c793a7caa821b2d8ecbbb7303607a6")
!292 = !DISubroutineType(types: !293)
!293 = !{!43, !294}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<usize, usize>", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!295 = !DISubprogram(name: "is_ok<usize, usize>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h563d90db3f12ef61E", scope: !58, file: !291, line: 538, type: !292, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !67)
!296 = !{!297}
!297 = !DILocalVariable(name: "self", arg: 1, scope: !290, file: !291, line: 538, type: !294)
!298 = !DILocation(line: 538, column: 24, scope: !290)
!299 = !DILocation(line: 539, column: 18, scope: !290)
!300 = !DILocation(line: 539, column: 9, scope: !290)
!301 = !DILocation(line: 540, column: 6, scope: !290)
!302 = !{i8 0, i8 2}
!303 = !DILocation(line: 538, column: 5, scope: !290)
!304 = distinct !DISubprogram(name: "bsearch_range_table", linkageName: "_ZN11unicode_xid6tables19bsearch_range_table17hd1f5407dc0115415E", scope: !3, file: !5, line: 19, type: !305, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !307)
!305 = !DISubroutineType(types: !306)
!306 = !{!43, !14, !6}
!307 = !{!308, !309}
!308 = !DILocalVariable(name: "c", arg: 1, scope: !304, file: !5, line: 19, type: !14)
!309 = !DILocalVariable(name: "r", arg: 2, scope: !304, file: !5, line: 19, type: !6)
!310 = !DILocation(line: 19, column: 24, scope: !304)
!311 = !DILocation(line: 19, column: 33, scope: !304)
!312 = !DILocation(line: 22, column: 24, scope: !304)
!313 = !DILocation(line: 22, column: 5, scope: !304)
!314 = !DILocation(line: 37, column: 2, scope: !304)
!315 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11unicode_xid6tables19bsearch_range_table28_$u7b$$u7b$closure$u7d$$u7d$17he5466f84c00a9ac0E", scope: !77, file: !5, line: 22, type: !316, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !319)
!316 = !DISubroutineType(types: !317)
!317 = !{!28, !318, !140}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut unicode_xid::tables::bsearch_range_table::{closure_env#0}", baseType: !76, size: 64, align: 64, dwarfAddressSpace: 0)
!319 = !{!320, !321, !323, !324}
!320 = !DILocalVariable(name: "c", scope: !315, file: !5, line: 19, type: !14, align: 4)
!321 = !DILocalVariable(name: "lo", scope: !322, file: !5, line: 22, type: !14, align: 4)
!322 = distinct !DILexicalBlock(scope: !315, file: !5, line: 22, column: 36)
!323 = !DILocalVariable(name: "hi", scope: !322, file: !5, line: 22, type: !14, align: 4)
!324 = !DILocalVariable(arg: 2, scope: !315, file: !5, line: 22, type: !140)
!325 = !DILocation(line: 19, column: 24, scope: !315)
!326 = !DILocation(line: 22, column: 25, scope: !315)
!327 = !DILocation(line: 22, column: 27, scope: !315)
!328 = !{i32 0, i32 1114112}
!329 = !DILocation(line: 22, column: 27, scope: !322)
!330 = !DILocation(line: 22, column: 31, scope: !315)
!331 = !DILocation(line: 22, column: 31, scope: !322)
!332 = !DILocation(line: 28, column: 17, scope: !322)
!333 = !DILocation(line: 28, column: 12, scope: !322)
!334 = !DILocation(line: 30, column: 24, scope: !322)
!335 = !DILocation(line: 30, column: 19, scope: !322)
!336 = !DILocation(line: 29, column: 13, scope: !322)
!337 = !DILocation(line: 28, column: 9, scope: !322)
!338 = !DILocation(line: 33, column: 13, scope: !322)
!339 = !DILocation(line: 30, column: 16, scope: !322)
!340 = !DILocation(line: 31, column: 13, scope: !322)
!341 = !DILocation(line: 35, column: 6, scope: !315)
!342 = distinct !DISubprogram(name: "XID_Continue", linkageName: "_ZN11unicode_xid6tables16derived_property12XID_Continue17h6b04da5082e2f7bcE", scope: !2, file: !5, line: 819, type: !343, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !345)
!343 = !DISubroutineType(types: !344)
!344 = !{!43, !14}
!345 = !{!346}
!346 = !DILocalVariable(name: "c", arg: 1, scope: !342, file: !5, line: 819, type: !14)
!347 = !DILocation(line: 819, column: 25, scope: !342)
!348 = !DILocation(line: 820, column: 39, scope: !342)
!349 = !DILocation(line: 820, column: 9, scope: !342)
!350 = !DILocation(line: 821, column: 6, scope: !342)
!351 = distinct !DISubprogram(name: "XID_Start", linkageName: "_ZN11unicode_xid6tables16derived_property9XID_Start17h58022b39fecfc9bfE", scope: !2, file: !5, line: 1493, type: !343, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !25, templateParams: !16, retainedNodes: !352)
!352 = !{!353}
!353 = !DILocalVariable(name: "c", arg: 1, scope: !351, file: !5, line: 1493, type: !14)
!354 = !DILocation(line: 1493, column: 22, scope: !351)
!355 = !DILocation(line: 1494, column: 39, scope: !351)
!356 = !DILocation(line: 1494, column: 9, scope: !351)
!357 = !DILocation(line: 1495, column: 6, scope: !351)
